//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "IrradiationManager"
	Revision           = "0.0"
	GUID               = "{172063AF-F171-4842-91B4-B65B31970F70}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "100 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(560,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{BB3ABC4F-51BD-4B2F-AECE-945C912767CE}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="s_1_3_pelletMode" GUID="{42431BAF-7EB3-4EC1-920D-DD6E7FA07561}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_EasyGUI" GUID="{7EA4CE6D-881A-4469-BF6B-4960EF28B91D}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_Reset" GUID="{3595B84A-885F-4F0B-B78B-E9D817395290}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_setTimer1" GUID="{9BA3D926-0916-4553-803E-A30F5C6DC20A}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_setTimer2" GUID="{5C5DE205-BB21-4EB0-B531-D32514193500}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_setTimer3" GUID="{B4D22DEE-9609-4943-A1D6-A87C29750B84}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_TimerStartStop" GUID="{F71660A0-CE0B-4846-9BED-99AD795B8536}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_VisTimerIrr1" GUID="{74669885-F14A-4CF6-B0F4-3C494517581C}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_VisTimerIrr2" GUID="{AE404B41-E221-4BDE-800A-C13E2E26F6BC}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_VisTimerIrr3" GUID="{3541AF20-2178-4F53-98E5-914CFAF837D1}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_VisTimerIrrAdv1" GUID="{2FD8CA98-4AAA-4253-8C77-E13883DE7445}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_VisTimerIrrAdv2" GUID="{1EC33506-743D-44B3-879D-948430A95C40}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="s_VisTimerIrrAdv3" GUID="{FE42E288-33A2-4398-8D3E-EDF8E650F851}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Startprocess" GUID="{79818C0B-8890-42F0-87F8-A5FD12537D8C}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="c_SysTime" Required="true" Internal="false"/>
		<Client Name="c_timerLib" Required="true" Internal="false"/>
		<Client Name="NrIrrTablets" Required="true" Internal="false"/>
		<Client Name="SetStartStopIrr" Required="true" Internal="false"/>
		<Client Name="TabletInIrrPos" Required="true" Internal="false"/>
		<Client Name="Timer1" Required="true" Internal="false"/>
		<Client Name="Timer2" Required="true" Internal="false"/>
		<Client Name="Timer3" Required="true" Internal="false"/>
	</Channels>
	<Separators>
		<Servers>
			<SepChn Position="8"/>
			<SepChn Position="4"/>
			<SepChn Position="12"/>
		</Servers>
		<Clients>
			<SepChn Position="3"/>
			<SepChn Position="6"/>
		</Clients>
	</Separators>
</Class>
*)
IrradiationManager : CLASS
	TYPE
	  t_timerCase :  //! <Type Public="true" Name="t_timerCase"/>
	  (
	    Idle:=30,
	    tablet1:=0,
	    tablet2:=10,
	    tablet3:=20
	  )$UDINT;
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	s_setTimer1 	: SvrCh_UDINT;
	s_setTimer2 	: SvrCh_UDINT;
	s_setTimer3 	: SvrCh_UDINT;
	s_VisTimerIrr1 	: SvrCh_UDINT;
	s_VisTimerIrr2 	: SvrCh_UDINT;
	s_VisTimerIrr3 	: SvrCh_UDINT;
	s_VisTimerIrrAdv1 	: SvrCh_DINT;
	s_VisTimerIrrAdv2 	: SvrCh_DINT;
	s_VisTimerIrrAdv3 	: SvrCh_DINT;
	Startprocess 	: SvrCh_DINT;
	s_EasyGUI 	: SvrCh_DINT;
	s_Reset 	: SvrCh_DINT;
	s_TimerStartStop 	: SvrCh_DINT;
	s_1_3_pelletMode 	: SvrCh_DINT;
  //Clients:
	Timer1 	: CltChCmd_TimerLib;
	Timer2 	: CltChCmd_TimerLib;
	Timer3 	: CltChCmd_TimerLib;
	TabletInIrrPos 	: CltCh_DINT;
	NrIrrTablets 	: CltCh_DINT;
	SetStartStopIrr 	: CltCh_t_IrradiationPhase_PTofCls_Manager_globale;
	c_timerLib 	: CltChCmd_TimeDateLib;
	c_SysTime 	: CltCh_TIME_LSL;
  //Variables:
		v_StartProcess 	: DINT;
		v_NrTablets 	: DINT;
		v_TabletInIrrPos 	: DINT;
		v_Timer1 	: UDINT;
		v_Timer2 	: UDINT;
		v_Timer3 	: UDINT;
		c_CaseTimer 	: DINT;
		c_Timer1 	: DINT;
		c_Timer2 	: DINT;
		c_Timer3 	: DINT;
		startTimer1 	: UDINT;
		startTimer2 	: UDINT;
		startTimer3 	: UDINT;
		v_startCases 	: DINT;
		v_EasyGUI 	: DINT;
		v_hd_Time_1 	: HDINT;
		v_hd_Time_2 	: HDINT;
		v_tot_seconds 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Startprocess::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL s_EasyGUI::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd TimeDateLib
#pragma usingLtd TimerLib


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB IrradiationManager::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_IRRADIATIONMANAGER
0$UINT, 0$UINT, (SIZEOF(::IrradiationManager))$UINT, 
15$UINT, 8$UINT, 0$UINT, 
TO_UDINT(2171929650), "IrradiationManager", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::IrradiationManager.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::IrradiationManager.s_setTimer1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(997993324), "s_setTimer1", 
(::IrradiationManager.s_setTimer2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2725608150), "s_setTimer2", 
(::IrradiationManager.s_setTimer3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3581037120), "s_setTimer3", 
(::IrradiationManager.s_VisTimerIrr1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4190804220), "s_VisTimerIrr1", 
(::IrradiationManager.s_VisTimerIrr2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1623443782), "s_VisTimerIrr2", 
(::IrradiationManager.s_VisTimerIrr3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(398784976), "s_VisTimerIrr3", 
(::IrradiationManager.s_VisTimerIrrAdv1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(539297675), "s_VisTimerIrrAdv1", 
(::IrradiationManager.s_VisTimerIrrAdv2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3106690609), "s_VisTimerIrrAdv2", 
(::IrradiationManager.s_VisTimerIrrAdv3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3458950823), "s_VisTimerIrrAdv3", 
(::IrradiationManager.Startprocess.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(550707605), "Startprocess", 
(::IrradiationManager.s_EasyGUI.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2269656371), "s_EasyGUI", 
(::IrradiationManager.s_Reset.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(325196950), "s_Reset", 
(::IrradiationManager.s_TimerStartStop.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1026261188), "s_TimerStartStop", 
(::IrradiationManager.s_1_3_pelletMode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2239501700), "s_1_3_pelletMode", 
//Clients:
(::IrradiationManager.Timer1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3041010013), "Timer1", TO_UDINT(3890592521), "TimerLib", 1$UINT, 0$UINT, 
(::IrradiationManager.Timer2.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(743141607), "Timer2", TO_UDINT(3890592521), "TimerLib", 1$UINT, 0$UINT, 
(::IrradiationManager.Timer3.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1531723889), "Timer3", TO_UDINT(3890592521), "TimerLib", 1$UINT, 0$UINT, 
(::IrradiationManager.TabletInIrrPos.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(410624326), "TabletInIrrPos", 
(::IrradiationManager.NrIrrTablets.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(299260081), "NrIrrTablets", 
(::IrradiationManager.SetStartStopIrr.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3707983727), "SetStartStopIrr", 
(::IrradiationManager.c_timerLib.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3106618898), "c_timerLib", TO_UDINT(1512043018), "TimeDateLib", 1$UINT, 1$UINT, 
(::IrradiationManager.c_SysTime.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3009052645), "c_SysTime", 
END_FUNCTION


#define USER_CNT_IrradiationManager 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_IrradiationManager] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION IrradiationManager::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_IrradiationManager, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_setTimer1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_setTimer1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_setTimer2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_setTimer2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_setTimer3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_setTimer3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_VisTimerIrr1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_VisTimerIrr1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_VisTimerIrr2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_VisTimerIrr2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_VisTimerIrr3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_VisTimerIrr3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_VisTimerIrrAdv1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_VisTimerIrrAdv1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_VisTimerIrrAdv2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_VisTimerIrrAdv2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_VisTimerIrrAdv3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_VisTimerIrrAdv3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Startprocess.pMeth			:= StoreMethod( #Startprocess::Read(), #M_WR_DIRECT() );
	IF Startprocess.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_EasyGUI.pMeth			:= StoreMethod( #s_EasyGUI::Read(), #M_WR_DIRECT() );
	IF s_EasyGUI.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_Reset.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_Reset.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_TimerStartStop.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_TimerStartStop.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	s_1_3_pelletMode.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF s_1_3_pelletMode.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL IrradiationManager::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

//set Timer dai server
v_Timer1:=1000*s_setTimer1;
v_Timer2:=1000*s_setTimer2;
v_Timer3:=1000*s_setTimer3;

//get status of tablet (irr pos): Nr and position
v_TabletInIrrPos:=TabletInIrrPos.Read();
v_NrTablets:=NrIrrTablets.Read();

v_EasyGUI:=s_EasyGUI.Read();

v_StartProcess:=Startprocess.Read();



  if s_Reset.Read() then
     s_VisTimerIrr1.Write(input:=0);
     s_VisTimerIrr2.Write(input:=0);
     s_VisTimerIrr3.Write(input:=0);
     s_VisTimerIrrAdv1.Write(input:=0);
     s_VisTimerIrrAdv2.Write(input:=0);
     s_VisTimerIrrAdv3.Write(input:=0);
     c_Timer1:=0;
     c_Timer2:=0;
     c_Timer3:=0;
     c_CaseTimer:=30;
     startTimer1:=0;
     startTimer2:=0;
     startTimer3:=0;   
     v_NrTablets:=0;
     s_setTimer1.Write(input:=0);
     s_setTimer2.Write(input:=0);
     s_setTimer3.Write(input:=0);
     Startprocess.Write(input:=0);

  end_if;
  
  if c_Timer3=30 & c_CaseTimer=20 then
    s_VisTimerIrr3.Write(input:=v_Timer3);
  end_if;
  

        
  if v_StartProcess & v_TabletInIrrPos & v_EasyGUI then

  case c_CaseTimer of

    30:
      c_CaseTimer:=10*v_NrTablets;
      v_startCases:=10;
    
    40:
      s_VisTimerIrr1.Write(input:=v_Timer1);  
      
    0:
      
      case c_Timer1 of
        0:
          c_Timer1:=v_startCases;
          
        10:
          v_startCases:=0;
          Timer1.TimerStart(pudStartTime:=#startTimer1);
          SetStartStopIrr.Write(input:=Manager_globale::Irradiation_Start);
          c_Timer1:=20;
          
        20:
          if Timer1.IsTimerFinished(pudStartTime:=#startTimer1, udDuration:=v_Timer1) then
            SetStartStopIrr.Write(input:=Manager_globale::Irradiation_Over);
            c_CaseTimer:=30;
          end_if;
          
          s_VisTimerIrr1.Write(input:=Timer1.TimerRest(pudStartTime:=#startTimer1, udDuration:=v_Timer1));
         
      end_case;

    
    10:
    
       case c_Timer2 of
        0:
          c_Timer2:=v_startCases;
          s_VisTimerIrr1.Write(input:=v_Timer1);
          
        10:
          v_startCases:=0;
          Timer2.TimerStart(pudStartTime:=#startTimer2);
          SetStartStopIrr.Write(input:=Manager_globale::Irradiation_Start);
          c_Timer2:=20;
          
        20:
          if Timer2.IsTimerFinished(pudStartTime:=#startTimer2, udDuration:=v_Timer2) then
            SetStartStopIrr.Write(input:=Manager_globale::Irradiation_Over);
            c_CaseTimer:=30;
          end_if;
          
          s_VisTimerIrr2.Write(input:=Timer2.TimerRest(pudStartTime:=#startTimer2, udDuration:=v_Timer2));
         
      end_case;
    
    20:
    
      case c_Timer3 of
        0:
          c_Timer3:=v_startCases;
          s_VisTimerIrr2.Write(input:=v_Timer2);
          
        10:
          v_startCases:=0;
          Timer3.TimerStart(pudStartTime:=#startTimer3);
          SetStartStopIrr.Write(input:=Manager_globale::Irradiation_Start);
          c_Timer3:=20;
          
        20:
          if Timer3.IsTimerFinished(pudStartTime:=#startTimer3, udDuration:=v_Timer3) then
            SetStartStopIrr.Write(input:=Manager_globale::Irradiation_Over);
            c_Timer3:=30;
          end_if;
          
          s_VisTimerIrr3.Write(input:=Timer3.TimerRest(pudStartTime:=#startTimer3, udDuration:=v_Timer3));
          
         
         
         30:
          s_VisTimerIrr3.Write(input:=v_Timer3);

         
      end_case;
      
    
  end_case;

  elsif v_EasyGUI=0 then
  
    case c_CaseTimer of

    30:
      c_CaseTimer:=10*v_NrTablets;
      v_startCases:=10;
      
    0:
      
      case c_Timer1 of
        0:
          c_Timer1:=v_startCases;
          
        10:
          if s_TimerStartStop.Read() then
            v_hd_Time_1:=c_SysTime.Read();
            c_Timer1:=20;
          end_if;
          
        20:
          if s_TimerStartStop.Read()=0 then
            v_hd_Time_2:=c_SysTime.Read();
            c_Timer1:=30;
          end_if;
          
        30:
          v_tot_seconds := c_timerLib.TimeDiff(tim1:=v_hd_Time_2, tim2:=v_hd_Time_1);
          s_VisTimerIrrAdv1.Write(input:=v_tot_seconds);
          c_CaseTimer:=30;

         
      end_case;

    
    10:
    
       case c_Timer2 of
        0:
          c_Timer2:=v_startCases;
          
        10:
          if s_TimerStartStop.Read() then
            v_hd_Time_1:=c_SysTime.Read();
            c_Timer2:=20;
          end_if;
          
        20:
          if s_TimerStartStop.Read()=0 then
            v_hd_Time_2:=c_SysTime.Read();
            c_Timer2:=30;
          end_if;
          
        30:
          v_tot_seconds := c_timerLib.TimeDiff(tim1:=v_hd_Time_2, tim2:=v_hd_Time_1);
          s_VisTimerIrrAdv2.Write(input:=v_tot_seconds);
          c_CaseTimer:=30;
         
      end_case;
    
    20:
    
      case c_Timer3 of
        0:
          c_Timer3:=v_startCases;
          
        10:
          if s_TimerStartStop.Read() then
            v_hd_Time_1:=c_SysTime.Read();
            c_Timer3:=20;
          end_if;
          
        20:
          if s_TimerStartStop.Read()=0 then
            v_hd_Time_2:=c_SysTime.Read();
            c_Timer3:=30;
          end_if;
          
        30:
          v_tot_seconds := c_timerLib.TimeDiff(tim1:=v_hd_Time_2, tim2:=v_hd_Time_1);
          s_VisTimerIrrAdv3.Write(input:=v_tot_seconds);
          c_CaseTimer:=40;
          
        40:

         
      end_case;
      
    end_case;
  
  elsif v_EasyGUI=1 & s_1_3_pelletMode.Read()=1 & c_Timer1=20 then
     s_VisTimerIrr1.Write(input:=v_Timer1);     
     
  end_if;




	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL IrradiationManager::Init

v_Timer1:=0;
v_Timer2:=0;
v_Timer3:=0;

v_TabletInIrrPos:=0;
v_NrTablets:=0;

v_StartProcess:=0;

c_Timer1:=0;
c_Timer2:=0;
c_Timer3:=0;

v_startCases:=0;

c_CaseTimer:=30;

v_EasyGUI:=0;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL IrradiationManager::Startprocess::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := Startprocess;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL IrradiationManager::s_EasyGUI::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := s_EasyGUI;

END_FUNCTION
