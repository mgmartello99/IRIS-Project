//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "HoldingRegister_3"
	Revision           = "0.0"
	GUID               = "{87F72857-72AD-4424-8DD9-A877EB81CEFE}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(346,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{F3DD3145-8689-41C6-B958-C590F086FA9C}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
</Class>
*)
HoldingRegister_3 : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION TAB TableHR;
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB HoldingRegister_3::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_HOLDINGREGISTER_3
0$UINT, 0$UINT, (SIZEOF(::HoldingRegister_3))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3299383752), "HoldingRegister_3", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::HoldingRegister_3.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT_HoldingRegister_3 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_HoldingRegister_3] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION HoldingRegister_3::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_HoldingRegister_3, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION TAB HoldingRegister_3::TableHR
//---------------------------------------------------------------------------------------------------------------
//  MODBUS address  | number of MODBUS registers  | access rights | server name
//---------------------------------------------------------------------------------------------------------------

//------------------------------Motion control - manual - solenoids-------------------------------------------------
    320$UINT,        2$USINT,                      2$USINT,        "Attuatore1.s_Solenoid_Command",
    322$UINT,        2$USINT,                      2$USINT,        "Attuatore2.s_Solenoid_Command",
    324$UINT,        2$USINT,                      0$USINT,        "Attuatore1.s_Solenoid_Status",
    326$UINT,        2$USINT,                      0$USINT,        "Attuatore2.s_Solenoid_Status",
    
//------------------------------Motion control - automatic - main control----------------------------------------------

    348$UINT,        2$USINT,                      2$USINT,        "Rack12V1.Command_Rack",
    350$UINT,        2$USINT,                      2$USINT,        "Manager_globale1.ComandoGeneraleIRIS",
    352$UINT,        2$USINT,                      2$USINT,        "Manager_globale1.ComandoIrradiation",
    354$UINT,        2$USINT,                      2$USINT,        "Manager_globale1.ComandoMeasurement",
    356$UINT,        2$USINT,                      2$USINT,        "MPS1.ReqToMPS",
    358$UINT,        2$USINT,                      2$USINT,        "Manager_globale1.ComandoRecoupledM3",
    360$UINT,        2$USINT,                      1$USINT,        "AutoManSelector1.Selector",
    362$UINT,        2$USINT,                      2$USINT,        "ManagerMotori1.Stop_Button",
    
    
    
    364$UINT,        2$USINT,                      0$USINT,        "AutoManSelector1.Selector",
    366$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_Tablet_irraggiati",
    368$UINT,        2$USINT,                      0$USINT,        "Motore_M41.s_target_misurati",
    370$UINT,        2$USINT,                      0$USINT,        "MainSequence1.s_All_Motor_Homed",
    //362$UINT,        2$USINT,                      0$USINT,        "ManagerMotori1.All_Motor_Homed",
    372$UINT,        2$USINT,                      0$USINT,        "MainSequence1.s_All_Tablets_Charged",
    374$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_All_Tablets_in_DS",
    376$UINT,        2$USINT,                      0$USINT,        "Manager_globale1.ComandoGeneraleIRIS",
    378$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_tablet_irradiation_position",
    380$UINT,        2$USINT,                      0$USINT,        "MPS1.s_MPS_ACK",
    
    
//-----------------------------------------------------------Correction steps - manual----------------------------------------------  
    500$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M1_Correction_Step",
    502$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M3_Correction_Step",
    504$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M4_Correction_Step",
    506$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_ChargingCorrection_Step_1",
    508$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_ChargingCorrection_Step_2",
    510$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_ChargingCorrection_Step_3",
    512$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_IrradiationCorrection_Step_1",
    514$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_IrradiationCorrection_Step_2",
    516$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_IrradiationCorrection_Step_3",
    518$UINT,        2$USINT,                      2$USINT,        "Automatic_Step_Settings1.M5_DischargingCorrection_Step",
    
    520$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M1_EXACT_STEP",
    522$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M3_EXACT_STEP",
    524$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M4_EXACT_STEP",
    526$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_CS_1",
    528$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_CS_2",
    530$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_CS_3",
    532$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_IS_1",
    534$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_IS_2",
    536$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_IS_3",
    538$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_EXACT_DS",
    540$UINT,        2$USINT,                      0$USINT,        "ExactStep1.M5_OFFSET_DS",
    
//-----------------------------------------------------------Motors status----------------------------------------------     
    
    //--M1--
    542$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M1.AxisStatus",
    544$UINT,        2$USINT,                      0$USINT,        "Motore_M11.s_M1_coupled",
    546$UINT,        2$USINT,                      0$USINT,        "Motore_M11.s_M1_Homed",
    
    //--M2--
    548$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M2.AxisStatus",
    550$UINT,        2$USINT,                      0$USINT,        "Motore_M21.s_M2_Homed",
    
    //--M3--
    552$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M3.AxisStatus",
    554$UINT,        2$USINT,                      0$USINT,        "Motore_M31.s_M3_coupled",
    556$UINT,        2$USINT,                      0$USINT,        "Motore_M31.s_M3_Homed",
    
    
    //--M4--
    558$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M4.AxisStatus",
    560$UINT,        2$USINT,                      0$USINT,        "Motore_M41.s_M4_Homed",
    
    //--M5--
    562$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M5.AxisStatus",
    564$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_M5_Homed",

    
    //--M6--
    566$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M6.AxisStatus",
    568$UINT,        2$USINT,                      0$USINT,        "Motore_M61.s_M6_Coupled",
    570$UINT,        2$USINT,                      0$USINT,        "Motore_M61.s_M6_Homed",
    
    
    //--M7--
    572$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M7.AxisStatus",
    574$UINT,        2$USINT,                      0$USINT,        "Motore_M71.s_M7_Coupled",
    576$UINT,        2$USINT,                      0$USINT,        "Motore_M71.s_M7_Homed",
    
//------------------------------------------- TIMER & BASIC GUI STUFF -------------------------------------------------------------------


    600$UINT,        2$USINT,                      2$USINT,        "IrradiationTimers.s_setTimer1",
    602$UINT,        2$USINT,                      2$USINT,        "IrradiationTimers.s_setTimer2",
    604$UINT,        2$USINT,                      2$USINT,        "IrradiationTimers.s_setTimer3",
    606$UINT,        2$USINT,                      2$USINT,        "IrradiationTimers.Startprocess",
    608$UINT,        2$USINT,                      2$USINT,        "AutoManSelector1.s_EasyGUIEn",
    610$UINT,        2$USINT,                      2$USINT,        "ManagerMotori1.s_1_3_pelletMode",
    612$UINT,        2$USINT,                      2$USINT,        "Motore_M51.s_PelletChargedByUser",
              
    
    650$UINT,        2$USINT,                      0$USINT,        "IrradiationTimers.s_VistimerIrr1",
    652$UINT,        2$USINT,                      0$USINT,        "IrradiationTimers.s_VistimerIrr2",
    654$UINT,        2$USINT,                      0$USINT,        "IrradiationTimers.s_VistimerIrr3",
    
    656$UINT,        2$USINT,                      0$USINT,        "DischargeTimer1.s_DisTimer1",
    658$UINT,        2$USINT,                      0$USINT,        "DischargeTimer1.s_DisTimer2",
    660$UINT,        2$USINT,                      0$USINT,        "DischargeTimer1.s_DisTimer3",
    
    662$UINT,        2$USINT,                      0$USINT,        "MoveTimer1.s_MovTimer1",
    664$UINT,        2$USINT,                      0$USINT,        "MoveTimer1.s_MovTimer2",
    666$UINT,        2$USINT,                      0$USINT,        "MoveTimer1.s_MovTimer3",
    
    668$UINT,        2$USINT,                      0$USINT,        "Motore_M21.s_tablet_InCharging",
    670$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_PelletInIrisirradiation",
    
    672$UINT,        2$USINT,                      0$USINT,        "IrradiationTimers.s_VisTimerIrrAdv1",
    674$UINT,        2$USINT,                      0$USINT,        "IrradiationTimers.s_VisTimerIrrAdv2",
    676$UINT,        2$USINT,                      0$USINT,        "IrradiationTimers.s_VisTimerIrrAdv3",
    
    678$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_PelletRemaining",
    680$UINT,        2$USINT,                      0$USINT,        "Motore_M21.s_pelletInIrisCharge",
    682$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_PelletInIrisDischarge",
    684$UINT,        2$USINT,                      0$USINT,        "Motore_M41.s_pelletMeasured",
    686$UINT,        2$USINT,                      0$USINT,        "Motore_M41.s_pelletInTrolley",
    688$UINT,        2$USINT,                      0$USINT,        "Motore_M51.s_IrradiationStatus",
    690$UINT,        2$USINT,                      0$USINT,        "Motore_M41.s_DischargeStatus",
    
    
    

  
                      
END_FUNCTION


FUNCTION VIRTUAL GLOBAL HoldingRegister_3::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := (#TableHR()$DINT);


END_FUNCTION
