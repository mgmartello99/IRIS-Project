//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "HoldingRegister_2"
	Revision           = "0.0"
	GUID               = "{1CC05893-EED2-44E7-BB8B-C964BD8B646E}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(346,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{51189834-DDB3-427D-A0E1-0017761FCA4F}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
</Class>
*)
HoldingRegister_2 : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION TAB TableHR;
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB HoldingRegister_2::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_HOLDINGREGISTER_2
0$UINT, 0$UINT, (SIZEOF(::HoldingRegister_2))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3014633822), "HoldingRegister_2", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::HoldingRegister_2.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT_HoldingRegister_2 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_HoldingRegister_2] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION HoldingRegister_2::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_HoldingRegister_2, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION TAB HoldingRegister_2::TableHR
//---------------------------------------------------------------------------------------------------------------
//  MODBUS address  | number of MODBUS registers  | access rights | server name
//---------------------------------------------------------------------------------------------------------------

//------------------------------Motion control - manual - motors READ----------------------------------------------------
200$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M1.ActPos",
202$UINT,        2$USINT,                      0$USINT,        "M1_Charge_Slider.S_Error",
204$UINT,        2$USINT,                      0$USINT,        "M1_Charge_Slider.s_Homed_forward",
206$UINT,        2$USINT,                      0$USINT,        "M1_Charge_Slider.s_Homed_reverse",
208$UINT,        2$USINT,                      0$USINT,        "M1_Charge_Slider.Max_speed",
210$UINT,        2$USINT,                      0$USINT,        "M1_Charge_Slider.Min_speed",
212$UINT,        2$USINT,                      0$USINT,        "ST1511.StateWord",
214$UINT,        2$USINT,                      0$USINT,        "ST1511.ErrorInfo",

216$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M2.ActPos",
218$UINT,        2$USINT,                      0$USINT,        "M2_Charge_Buffer.S_Error",
220$UINT,        2$USINT,                      0$USINT,        "M2_Charge_Buffer.s_Homed_forward",
222$UINT,        2$USINT,                      0$USINT,        "M2_Charge_Buffer.s_Homed_reverse",
224$UINT,        2$USINT,                      0$USINT,        "M2_Charge_Buffer.Max_speed",
226$UINT,        2$USINT,                      0$USINT,        "M2_Charge_Buffer.Min_speed",
228$UINT,        2$USINT,                      0$USINT,        "ST1512.StateWord",
230$UINT,        2$USINT,                      0$USINT,        "ST1512.ErrorInfo",

232$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M3.ActPos",
234$UINT,        2$USINT,                      0$USINT,        "M3_Discharge_Slider.S_Error",
236$UINT,        2$USINT,                      0$USINT,        "M3_Discharge_Slider.s_Homed_forward",
238$UINT,        2$USINT,                      0$USINT,        "M3_Discharge_Slider.s_Homed_reverse",
240$UINT,        2$USINT,                      0$USINT,        "M3_Discharge_Slider.Max_speed",
242$UINT,        2$USINT,                      0$USINT,        "M3_Discharge_Slider.Min_speed",
244$UINT,        2$USINT,                      0$USINT,        "ST1513.StateWord",
246$UINT,        2$USINT,                      0$USINT,        "ST1513.ErrorInfo",

248$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M4.ActPos",
250$UINT,        2$USINT,                      0$USINT,        "M4_Discharge_Buffer.S_Error",
252$UINT,        2$USINT,                      0$USINT,        "M4_Discharge_Buffer.s_Homed_forward",
254$UINT,        2$USINT,                      0$USINT,        "M4_Discharge_Buffer.s_Homed_reverse",
256$UINT,        2$USINT,                      0$USINT,        "M4_Discharge_Buffer.Max_speed",
258$UINT,        2$USINT,                      0$USINT,        "M4_Discharge_Buffer.Min_speed",
260$UINT,        2$USINT,                      0$USINT,        "ST1514.StateWord",
262$UINT,        2$USINT,                      0$USINT,        "ST1514.ErrorInfo",

264$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M5.ActPos",
266$UINT,        2$USINT,                      0$USINT,        "M5_Central_Movement.S_Error",
268$UINT,        2$USINT,                      0$USINT,        "M5_Central_Movement.s_Homed_forward",
270$UINT,        2$USINT,                      0$USINT,        "M5_Central_Movement.s_Homed_reverse",
272$UINT,        2$USINT,                      0$USINT,        "M5_Central_Movement.Max_speed",
274$UINT,        2$USINT,                      0$USINT,        "M5_Central_Movement.Min_speed",
276$UINT,        2$USINT,                      0$USINT,        "ST1515.StateWord",
278$UINT,        2$USINT,                      0$USINT,        "ST1515.ErrorInfo",

280$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M6.ActPos",
282$UINT,        2$USINT,                      0$USINT,        "M6_Longitudinal_axis.S_Error",
284$UINT,        2$USINT,                      0$USINT,        "M6_Longitudinal_axis.s_Homed_forward",
286$UINT,        2$USINT,                      0$USINT,        "M6_Longitudinal_axis.s_Homed_reverse",
288$UINT,        2$USINT,                      0$USINT,        "M6_Longitudinal_axis.Max_speed",
290$UINT,        2$USINT,                      0$USINT,        "M6_Longitudinal_axis.Min_speed",
292$UINT,        2$USINT,                      0$USINT,        "ST1515.StateWord",
294$UINT,        2$USINT,                      0$USINT,        "ST1515.ErrorInfo",

296$UINT,        2$USINT,                      0$USINT,        "_LMCAxis_M7.ActPos",
298$UINT,        2$USINT,                      0$USINT,        "M7_Target_Block.S_Error",
300$UINT,        2$USINT,                      0$USINT,        "M7_Target_Block.s_Homed_forward",
302$UINT,        2$USINT,                      0$USINT,        "M7_Target_Block.s_Homed_reverse",
304$UINT,        2$USINT,                      0$USINT,        "M7_Target_Block.Max_speed",
306$UINT,        2$USINT,                      0$USINT,        "M7_Target_Block.Min_speed",
308$UINT,        2$USINT,                      0$USINT,        "ST1517.StateWord",
310$UINT,        2$USINT,                      0$USINT,        "ST1517.ErrorInfo",


END_FUNCTION


FUNCTION VIRTUAL GLOBAL HoldingRegister_2::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := (#TableHR()$DINT);


END_FUNCTION
