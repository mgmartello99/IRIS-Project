//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "SysDateTime"
	Revision           = "1.5"
	GUID               = "{4BAD567E-E9AB-47C9-BDCD-BB1F8EDB2BF8}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\SysDateTime\SysDateTime.ico"
	SharedCommandTable = "true"
	Objectsize         = "(510,180)"
	Comment            = "V1.3 Reads Systime and Date in Sigmatek format">
	<Channels>
		<Server Name="SysDate" GUID="{70FD1477-8B8A-4D0B-A252-944BA2F247A8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="3. and 4. Byte Year, 2.Byte H =&gt; Month, 1.Byte H &amp; 2.Byte L =&gt; Day, 1.Byte L =&gt; Day of Week"/>
		<Server Name="SysTime" GUID="{B46CA96E-EDC6-46CC-851F-E5392EB971F7}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="4.Byte =&gt; h, 3.Byte =&gt; min, 2.Byte =&gt; sec, 1.Byte =&gt; 0"/>
		<Client Name="System" Required="false" Internal="false" Comment="Virtual connection to SYSTEM"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\SysDateTime\SysDateTime.h" Include="true"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.5" Date="2016-07-07" Author="HubChr" Company="Sigmatek" Description="SA34075: Changed datatypes of servers SysDate and SysTime to achieve easier handling in Lasal Screen Editor."/>
		<Dokumentation Revision="1.4" Date="2011-09-28" Author="SpiMar" Company="Sigmatek" Description="The input and output parameters of the server write methods  are now fitted to the datatype of the server;"/>
	</RevDoku>
</Class>
*)
SysDateTime : CLASS
  //Servers:
	SysDate 	: SvrChCmd_DATE_LSL;
	SysTime 	: SvrCh_TIME_LSL;
  //Clients:
	System 	: CltChCmd_System;
  //Variables:
  //Functions:
				//! <Function Comment=" ******************************************************************&#13;&#10;                         Datum und Zeit&#13;&#10; ******************************************************************&#13;&#10;           Zeiformat    :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Sekunden&#13;&#10;                   3.Byte =&gt; Minuten&#13;&#10;                   4.Byte =&gt; Stunden&#13;&#10;           Datumsformat :&#13;&#10;                   1.Byte L =&gt; Wochentag&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Tag&#13;&#10;                   2.Byte H =&gt; Monat&#13;&#10;                   3. and 4. Byte Jahr&#13;&#10;             Der Wochentag wird automatisch mitgeführt.&#13;&#10;             (Sonntag ist Wert &quot;0&quot;)&#13;&#10;        mit den Read Funktionen bekommen sie die Werte&#13;&#10;        mit den Write Funktionen setzten die Systemwerte&#13;&#10; ******************************************************************&#13;&#10;  erstellt  : KO :    KW 38/01&#13;&#10;  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                          Time and Date&#13;&#10; ******************************************************************&#13;&#10;           The Format of Time :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Seconds&#13;&#10;                   3.Byte =&gt; Minutes&#13;&#10;                   4.Byte =&gt; Hour&#13;&#10;           The Format of Date :&#13;&#10;                   1.Byte L =&gt; Day of Week&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Day&#13;&#10;                   2.Byte H =&gt; Month&#13;&#10;                   3. and 4. Byte Year&#13;&#10;             The Day of week is calculated automatically if you&#13;&#10;             set the Date (Sunday is &quot;0&quot;)&#13;&#10;     with the READ functions you get the values&#13;&#10;     with the WRITE functions you set the values&#13;&#10; ******************************************************************&#13;&#10;  created  : KO :    KW 38/01&#13;&#10;  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="Init"/>
	FUNCTION VIRTUAL GLOBAL Init;
				//! <Function Comment=" ******************************************************************&#13;&#10;                         Datum und Zeit&#13;&#10; ******************************************************************&#13;&#10;           Zeiformat    :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Sekunden&#13;&#10;                   3.Byte =&gt; Minuten&#13;&#10;                   4.Byte =&gt; Stunden&#13;&#10;           Datumsformat :&#13;&#10;                   1.Byte L =&gt; Wochentag&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Tag&#13;&#10;                   2.Byte H =&gt; Monat&#13;&#10;                   3. and 4. Byte Jahr&#13;&#10;             Der Wochentag wird automatisch mitgeführt.&#13;&#10;             (Sonntag ist Wert &quot;0&quot;)&#13;&#10;        mit den Read Funktionen bekommen sie die Werte&#13;&#10;        mit den Write Funktionen setzten die Systemwerte&#13;&#10; ******************************************************************&#13;&#10;  erstellt  : KO :    KW 38/01&#13;&#10;  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                          Time and Date&#13;&#10; ******************************************************************&#13;&#10;           The Format of Time :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Seconds&#13;&#10;                   3.Byte =&gt; Minutes&#13;&#10;                   4.Byte =&gt; Hour&#13;&#10;           The Format of Date :&#13;&#10;                   1.Byte L =&gt; Day of Week&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Day&#13;&#10;                   2.Byte H =&gt; Month&#13;&#10;                   3. and 4. Byte Year&#13;&#10;             The Day of week is calculated automatically if you&#13;&#10;             set the Date (Sunday is &quot;0&quot;)&#13;&#10;     with the READ functions you get the values&#13;&#10;     with the WRITE functions you set the values&#13;&#10; ******************************************************************&#13;&#10;  created  : KO :    KW 38/01&#13;&#10;  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="CyWork"/>
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT := EAX;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
				//! <Function Comment=" ******************************************************************&#13;&#10;                          Time and Date&#13;&#10; ******************************************************************&#13;&#10;           The Format of Time :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Seconds&#13;&#10;                   3.Byte =&gt; Minutes&#13;&#10;                   4.Byte =&gt; Hour&#13;&#10;           The Format of Date :&#13;&#10;                   1.Byte L =&gt; Day of Week&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Day&#13;&#10;                   2.Byte H =&gt; Month&#13;&#10;                   3. and 4. Byte Year&#13;&#10;             The Day of week is calculated automatically if you&#13;&#10;             set the Date (Sunday is &quot;0&quot;)&#13;&#10;     with the READ functions you get the values&#13;&#10;     with the WRITE functions you set the values&#13;&#10; ******************************************************************&#13;&#10;  created  : KO :    KW 38/01&#13;&#10;  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                         Datum und Zeit&#13;&#10; ******************************************************************&#13;&#10;           Zeiformat    :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Sekunden&#13;&#10;                   3.Byte =&gt; Minuten&#13;&#10;                   4.Byte =&gt; Stunden&#13;&#10;           Datumsformat :&#13;&#10;                   1.Byte L =&gt; Wochentag&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Tag&#13;&#10;                   2.Byte H =&gt; Monat&#13;&#10;                   3. and 4. Byte Jahr&#13;&#10;             Der Wochentag wird automatisch mitgeführt.&#13;&#10;             (Sonntag ist Wert &quot;0&quot;)&#13;&#10;        mit den Read Funktionen bekommen sie die Werte&#13;&#10;        mit den Write Funktionen setzten die Systemwerte&#13;&#10; ******************************************************************&#13;&#10;  erstellt  : KO :    KW 38/01&#13;&#10;  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="Background"/>
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
				//! <Function Comment=" ******************************************************************&#13;&#10;                          Time and Date&#13;&#10; ******************************************************************&#13;&#10;           The Format of Time :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Seconds&#13;&#10;                   3.Byte =&gt; Minutes&#13;&#10;                   4.Byte =&gt; Hour&#13;&#10;           The Format of Date :&#13;&#10;                   1.Byte L =&gt; Day of Week&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Day&#13;&#10;                   2.Byte H =&gt; Month&#13;&#10;                   3. and 4. Byte Year&#13;&#10;             The Day of week is calculated automatically if you&#13;&#10;             set the Date (Sunday is &quot;0&quot;)&#13;&#10;     with the READ functions you get the values&#13;&#10;     with the WRITE functions you set the values&#13;&#10; ******************************************************************&#13;&#10;  created  : KO :    KW 38/01&#13;&#10;  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                         Datum und Zeit&#13;&#10; ******************************************************************&#13;&#10;           Zeiformat    :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Sekunden&#13;&#10;                   3.Byte =&gt; Minuten&#13;&#10;                   4.Byte =&gt; Stunden&#13;&#10;           Datumsformat :&#13;&#10;                   1.Byte L =&gt; Wochentag&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Tag&#13;&#10;                   2.Byte H =&gt; Monat&#13;&#10;                   3. and 4. Byte Jahr&#13;&#10;             Der Wochentag wird automatisch mitgeführt.&#13;&#10;             (Sonntag ist Wert &quot;0&quot;)&#13;&#10;        mit den Read Funktionen bekommen sie die Werte&#13;&#10;        mit den Write Funktionen setzten die Systemwerte&#13;&#10; ******************************************************************&#13;&#10;  erstellt  : KO :    KW 38/01&#13;&#10;  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="GetDayOfWeek"/>
	FUNCTION GetDayOfWeek
		VAR_INPUT
			day 	: UINT;
			month 	: UINT;
			year 	: UINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: UINT;
		END_VAR;
				//! <Function Comment=" ******************************************************************&#13;&#10;                          Time and Date&#13;&#10; ******************************************************************&#13;&#10;           The Format of Time :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Seconds&#13;&#10;                   3.Byte =&gt; Minutes&#13;&#10;                   4.Byte =&gt; Hour&#13;&#10;           The Format of Date :&#13;&#10;                   1.Byte L =&gt; Day of Week&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Day&#13;&#10;                   2.Byte H =&gt; Month&#13;&#10;                   3. and 4. Byte Year&#13;&#10;             The Day of week is calculated automatically if you&#13;&#10;             set the Date (Sunday is &quot;0&quot;)&#13;&#10;     with the READ functions you get the values&#13;&#10;     with the WRITE functions you set the values&#13;&#10; ******************************************************************&#13;&#10;  created  : KO :    KW 38/01&#13;&#10;  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                         Datum und Zeit&#13;&#10; ******************************************************************&#13;&#10;           Zeiformat    :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Sekunden&#13;&#10;                   3.Byte =&gt; Minuten&#13;&#10;                   4.Byte =&gt; Stunden&#13;&#10;           Datumsformat :&#13;&#10;                   1.Byte L =&gt; Wochentag&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Tag&#13;&#10;                   2.Byte H =&gt; Monat&#13;&#10;                   3. and 4. Byte Jahr&#13;&#10;             Der Wochentag wird automatisch mitgeführt.&#13;&#10;             (Sonntag ist Wert &quot;0&quot;)&#13;&#10;        mit den Read Funktionen bekommen sie die Werte&#13;&#10;        mit den Write Funktionen setzten die Systemwerte&#13;&#10; ******************************************************************&#13;&#10;  erstellt  : KO :    KW 38/01&#13;&#10;  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="leapyear"/>
	FUNCTION leapyear
		VAR_INPUT
			year 	: UINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: BOOL;
		END_VAR;
				//! <Function Comment=" ******************************************************************&#13;&#10;                          Time and Date&#13;&#10; ******************************************************************&#13;&#10;           The Format of Time :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Seconds&#13;&#10;                   3.Byte =&gt; Minutes&#13;&#10;                   4.Byte =&gt; Hour&#13;&#10;           The Format of Date :&#13;&#10;                   1.Byte L =&gt; Day of Week&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Day&#13;&#10;                   2.Byte H =&gt; Month&#13;&#10;                   3. and 4. Byte Year&#13;&#10;             The Day of week is calculated automatically if you&#13;&#10;             set the Date (Sunday is &quot;0&quot;)&#13;&#10;     with the READ functions you get the values&#13;&#10;     with the WRITE functions you set the values&#13;&#10; ******************************************************************&#13;&#10;  created  : KO :    KW 38/01&#13;&#10;  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                         Datum und Zeit&#13;&#10; ******************************************************************&#13;&#10;           Zeiformat    :&#13;&#10;                   1.Byte =&gt; 0&#13;&#10;                   2.Byte =&gt; Sekunden&#13;&#10;                   3.Byte =&gt; Minuten&#13;&#10;                   4.Byte =&gt; Stunden&#13;&#10;           Datumsformat :&#13;&#10;                   1.Byte L =&gt; Wochentag&#13;&#10;                   1.Byte H &amp; 2.Byte L =&gt; Tag&#13;&#10;                   2.Byte H =&gt; Monat&#13;&#10;                   3. and 4. Byte Jahr&#13;&#10;             Der Wochentag wird automatisch mitgeführt.&#13;&#10;             (Sonntag ist Wert &quot;0&quot;)&#13;&#10;        mit den Read Funktionen bekommen sie die Werte&#13;&#10;        mit den Write Funktionen setzten die Systemwerte&#13;&#10; ******************************************************************&#13;&#10;  erstellt  : KO :    KW 38/01&#13;&#10;  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="GetDayOfMonth"/>
	FUNCTION GetDayOfMonth
		VAR_INPUT
			month 	: UINT;
			year 	: UINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: UINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SysDate::Write
		VAR_INPUT
			input (EAX) 	: DATE_LSL;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DATE_LSL;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SysTime::Write
		VAR_INPUT
			input (EAX) 	: TIME_LSL;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: TIME_LSL;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd System


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB SysDateTime::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_SYSDATETIME
1$UINT, 5$UINT, (SIZEOF(::SysDateTime))$UINT, 
2$UINT, 1$UINT, 0$UINT, 
TO_UDINT(3035062039), "SysDateTime", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::SysDateTime.SysDate.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1714210210), "SysDate", 
(::SysDateTime.SysTime.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2737203869), "SysTime", 
//Clients:
(::SysDateTime.System.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(968218125), "System", TO_UDINT(968218125), "System", 0$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_SysDateTime 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_SysDateTime] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION SysDateTime::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_SysDateTime, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	SysDate.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF SysDate.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SysTime.pMeth			:= StoreMethod( #M_RD_DIRECT(), #SysTime::Write() );
	IF SysTime.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


//*********************Inserted from .\code\C_SysDateTime.st*********************



 



//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION VIRTUAL GLOBAL SysDateTime::Init

  Background(0);

END_FUNCTION //VIRTUAL GLOBAL _SysDateTime::Init
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION VIRTUAL GLOBAL SysDateTime::Background
VAR_INPUT
	EAX		: UDINT;
END_VAR
VAR_OUTPUT
	state		: UDINT;
END_VAR
VAR
  tme : SYSTIME;  
  dte : SYSDATE;
  tmp  : UDINT;  
END_VAR


  // YYYYYYYYYYYYYYYYMMMMDDDDDDDDWWWW
  // HHHHHHHHNNNNNNNNSSSSSSSSxxxxxxxx
  
  // y .... year
  // m .... month
  // d .... day
  // w .... day of week
  // h .... hour
  // n .... minutes
  // s .... second
  // x .... initialized with 0


  System.GetSysTime(#tme); 
  System.GetSysDate(#dte);

  tmp     := tme.wHour and 16#FF;
  tmp     := (tmp shl 8) or (tme.wMinute and 16#FF); 
  tmp     := (tmp shl 8) or (tme.wSecond and 16#FF);
  SysTime := (tmp shl 8); 

  tmp     := dte.wYear; 
  tmp     := (tmp shl 4) or dte.wMonth; 
  tmp     := (tmp shl 8) or dte.wDay;
  // tmp     := (tmp shl 4) or dte.wDayOfWeek; 
  tmp     := (tmp shl 4) or GetDayOfWeek(dte.wDay, dte.wMonth, dte.wYear); 
  SysDate := tmp;
    
  state   := 0;  

END_FUNCTION //VIRTUAL GLOBAL _SysDateTime::Background

//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************


FUNCTION VIRTUAL GLOBAL SysDateTime::CyWork
VAR_INPUT
	EAX		: UDINT;
END_VAR
VAR_OUTPUT
	state		: UDINT;
END_VAR

    Background(0); 
	state := READY$UDINT;
END_FUNCTION //VIRTUAL GLOBAL _SysDateTime::CyWork
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION  SysDateTime::GetDayOfWeek
VAR_INPUT
  day       : UINT;
  month     : UINT;
  year      : UINT;
END_VAR
VAR_OUTPUT
  retcode   : UINT;
END_VAR
VAR
  days : UDINT; 
  maxs : UINT; 
END_VAR

  year  -= 1; 
  maxs  := year / 4; 
  maxs  -= year / 100;
  maxs  += year / 400; 
  days  := ((TO_UDINT(year)) * 365) + maxs; 

  while(month > 1) do
	month -= 1; 
    days  += GetDayOfMonth(month, year+1);   
  end_while; 

  days += day;

  retcode := TO_UINT(days mod 7);  
  
END_FUNCTION
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION  SysDateTime::GetDayOfMonth
VAR_INPUT
	month		: UINT;
	year		: UINT;
END_VAR
VAR_OUTPUT
	retcode		: UINT;
END_VAR

  retcode := 30; 
  case month of
    1,3,5,7,8,10,12: retcode := 31;
	              2: retcode := 28;
				     if(leapyear(year) = true) then
	                   retcode := 29;
		             end_if;             
  end_case;


END_FUNCTION
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION  SysDateTime::leapyear
VAR_INPUT
	year		: UINT;
END_VAR
VAR_OUTPUT
	retcode		: BOOL;
END_VAR

  retcode := FALSE;

  if((year mod 4) = 0) then
    retcode := TRUE; 
    if((year mod 100) = 0) then
	  retcode := FALSE; 
	  if((year mod 400) = 0) then
	    retcode := TRUE; 
      end_if; 
    end_if; 
  end_if; 


END_FUNCTION





FUNCTION VIRTUAL GLOBAL SysDateTime::SysTime::Write
	VAR_INPUT
		input (EAX) 	: TIME_LSL;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: TIME_LSL;
	END_VAR
VAR
    t : SYSTIME; 
END_VAR
  
  t.wHour   := (TO_UDINT(input) shr 24)$USINT;  
  t.wMinute := (TO_UDINT(input) shr 16)$USINT; 
  t.wSecond := (TO_UDINT(input) shr  8)$USINT; 
  System.SetSysTime(#t); 
  Background(0); 
  result := 0; 
  

END_FUNCTION //VIRTUAL GLOBAL _SysDateTime::SysTime::Write
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************



FUNCTION VIRTUAL GLOBAL SysDateTime::SysDate::Write
	VAR_INPUT
		input (EAX) 	: DATE_LSL;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DATE_LSL;
	END_VAR
VAR
  t : SYSDATE; 
END_VAR
  
  t.wDay       := TO_USINT((TO_UDINT(input) shr  4) and 16#00FF);
  t.wMonth     := TO_USINT((TO_UDINT(input) shr 12) and 16#000F); 
  t.wYear      := TO_UINT((TO_UDINT(input)  shr 16) and 16#FFFF);  
//  t.wDayOfWeek := (TO_USINT(input) and 16#0F) mod 7;
  t.wDayOfWeek := GetDayOfWeek(t.wDay, t.wMonth, t.wYear); 

  System.SetSysDate(#t); 
  Background(0);
  result := 0;  

END_FUNCTION //VIRTUAL GLOBAL _SysDateTime::Write
//[#DEUTSCH]
// ******************************************************************
//                         Datum und Zeit
// ******************************************************************
//           Zeiformat    :
//                   1.Byte => 0
//                   2.Byte => Sekunden
//                   3.Byte => Minuten
//                   4.Byte => Stunden
//           Datumsformat :
//                   1.Byte L => Wochentag
//                   1.Byte H & 2.Byte L => Tag
//                   2.Byte H => Monat
//                   3. and 4. Byte Jahr
//             Der Wochentag wird automatisch mitgeführt.
//             (Sonntag ist Wert "0")
//
//        mit den Read Funktionen bekommen sie die Werte
//        mit den Write Funktionen setzten die Systemwerte
//
// ******************************************************************
//  erstellt  : KO :    KW 38/01
//  getestet  : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#ENGLISH]
// ******************************************************************
//                          Time and Date
// ******************************************************************
//           The Format of Time :
//                   1.Byte => 0
//                   2.Byte => Seconds
//                   3.Byte => Minutes
//                   4.Byte => Hour
//           The Format of Date :
//                   1.Byte L => Day of Week
//                   1.Byte H & 2.Byte L => Day
//                   2.Byte H => Month
//                   3. and 4. Byte Year
//             The Day of week is calculated automatically if you
//             set the Date (Sunday is "0")
//
//     with the READ functions you get the values
//     with the WRITE functions you set the values
//
// ******************************************************************
//  created  : KO :    KW 38/01
//  tested   : BS :    KW 48/01 | Lasal V00.53 | OPS V4.00
// ******************************************************************
