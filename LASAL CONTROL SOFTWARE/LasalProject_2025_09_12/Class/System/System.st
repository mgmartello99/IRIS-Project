//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "System"
	Revision           = "0.1"
	GUID               = "{08928CAD-4DE1-11D5-A20D-00902771F8BE}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "true"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\System\CONTROL2.ICO"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "system service functions (memory management, port access, IRQs, aso.)">
	<Channels>
		<Server Name="Server0" GUID="{08928CAE-4DE1-11D5-A20D-00902771F8BE}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Source\code\OsiBase.h" Include="false"/>
			<File Path=".\GraphicTypes.h" Include="false"/>
			<File Path=".\St_grconst.h" Include="false"/>
			<File Path=".\St_graph.h" Include="false"/>
			<File Path=".\SystemTypes.h" Include="false"/>
			<File Path=".\Source\code\OsiBase.st"/>
		</Files>
	</Dependencies>
</Class>
*)
System : CLASS
  //Servers:
	Server0 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION System
		VAR_OUTPUT
			ret_code 	: ConfStates;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL InstallIRQ
		VAR_INPUT
			IRQNumber0 	: UINT;
			IRQFunction0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL InstallIRQObject
		VAR_INPUT
			IRQNumber0 	: UINT;
			thisPointer0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL CreateMailbox
		VAR_INPUT
			MailboxName0 	: ^CHAR;
			MailboxDataLen0 	: UDINT;
			MailboxSlots0 	: UDINT;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MailboxGetMsg
		VAR_INPUT
			Mailbox0 	: ^void;
			pMailboxData0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MailboxPutMsg
		VAR_INPUT
			Mailbox0 	: ^void;
			pMailboxData0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL DeleteMailbox
		VAR_INPUT
			Mailbox0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL CreateSemaphore
		VAR_INPUT
			SemName0 	: ^CHAR;
			SemType0 	: UINT;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL SignalSemaphore
		VAR_INPUT
			Semaphore0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL PulseSemaphore
		VAR_INPUT
			Semaphore0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL WaitSemaphore
		VAR_INPUT
			Semaphore0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL WaitCondSemaphore
		VAR_INPUT
			Semaphore0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL DeleteSemaphore
		VAR_INPUT
			Semaphore0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL OutW
		VAR_INPUT
			PortNumber0 	: UINT;
			Value0 	: UINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL OutB
		VAR_INPUT
			PortNumber0 	: UINT;
			Value0 	: UINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL InpW
		VAR_INPUT
			PortNumber0 	: UINT;
		END_VAR
		VAR_OUTPUT
			ret0 (AX) 	: UINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL InpB
		VAR_INPUT
			PortNumber0 	: UINT;
		END_VAR
		VAR_OUTPUT
			ret0 (AX) 	: UINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MemoryAccess
		VAR_INPUT
			Addr0 	: UDINT;
			Length0 	: UDINT;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL CanTxObj
		VAR_INPUT
			cannr0 	: USINT;
			objnr0 	: DINT;
			length0 	: USINT;
			data0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (AX) 	: INT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL AddCanObj
		VAR_INPUT
			cannr0 	: USINT;
			objnr0 	: DINT;
			length0 	: USINT;
			mode0 	: USINT;
			actionptr0 	: ^void;
			thisptr0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL Malloc
		VAR_INPUT
			size0 	: UDINT;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL Free
		VAR_INPUT
			ptr0 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL SetSysTime
		VAR_INPUT
			time0 	: ^SYSTIME;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL SetSysDate
		VAR_INPUT
			date0 	: ^SYSDATE;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL GetSysTime
		VAR_INPUT
			time0 	: ^SYSTIME;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL GetSysDate
		VAR_INPUT
			date0 	: ^SYSDATE;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL ReAlloc
		VAR_INPUT
			ptr0 	: ^void;
			size0 	: UDINT;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL InstallIRQLASAL
		VAR_INPUT
			IRQNumber0 	: UINT;
			IRQFunction0 	: ^void;
			thispointer0 	: ^void;
		END_VAR
		VAR_OUTPUT
			ret0 (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MemMove
		VAR_INPUT
			dest 	: ^void;
			source 	: ^void;
			size 	: _UDWORD;
		END_VAR
		VAR_OUTPUT
			retcode (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MemCpy
		VAR_INPUT
			dest 	: ^void;
			source 	: ^void;
			size 	: _UDWORD;
		END_VAR
		VAR_OUTPUT
			retcode (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MemSet
		VAR_INPUT
			pMemptr 	: ^void;
			fill 	: _UBYTE;
			size 	: _UDWORD;
		END_VAR
		VAR_OUTPUT
			retcode (EAX) 	: ^void;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL MemCmp
		VAR_INPUT
			pDestptr 	: ^void;
			pSourceptr 	: ^void;
			size 	: _UDWORD;
		END_VAR
		VAR_OUTPUT
			retcode (AL) 	: _UBYTE;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL LoginIntoCANNew
		VAR_INPUT
			cannr0 	: USINT;
			canstation0 	: USINT;
			txobjnr0 	: UINT;
		END_VAR
		VAR_OUTPUT
			ret0 (AX) 	: UINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL GetObjectInfo
		VAR_INPUT
			thisobj0 	: ^void;
			tasktype0 	: UDINT;
			objinfo 	: ^LSLOBJ_INFO;
		END_VAR
		VAR_OUTPUT
			retval (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_2;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_3;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_4;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_5;
	
	FUNCTION __CDECL VIRTUAL GLOBAL OS_Delay
		VAR_INPUT
			msecs0 	: UDINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL InstallDiasHandler
		VAR_INPUT
			INTfunction0 	: ^void;
			param0 	: ^void;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_6;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_7;
	
	FUNCTION VIRTUAL GLOBAL _Reserved_Space_8;
	
	FUNCTION __CDECL VIRTUAL GLOBAL EEPROM_Read
		VAR_INPUT
			addr0 	: UINT;
			data0 	: ^UINT;
		END_VAR
		VAR_OUTPUT
			retval (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL EEPROM_Write
		VAR_INPUT
			addr0 	: UINT;
			data0 	: UINT;
		END_VAR
		VAR_OUTPUT
			retval (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL ButtonPressed
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL SetTimerIntVal
		VAR_INPUT
			ClockTicks0 	: UDINT;
		END_VAR
		VAR_OUTPUT
			retval (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION __CDECL VIRTUAL GLOBAL GetTimerIntVal
		VAR_OUTPUT
			retval (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB System::@CT_
0$UINT,
2#0100000000001000$UINT, //TY_SYSTEM
0$UINT, 1$UINT, (SIZEOF(::System))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(968218125), "System", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::System.Server0.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2759080719), "Server0", 
//Clients:
END_FUNCTION


#define USER_CNT_System 47

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_System] OF ^Void;
	END_STRUCT;
END_TYPE



//{{LSL_IMPLEMENTATION


//*********************Inserted from .\code\System.st*********************



 


#include "..\..\Source\code\OsiBase.h"


FUNCTION  System::System
VAR_OUTPUT
	ret_code		: CONFSTATES;
END_VAR

	ret_code	:= InitOsiM(_lsl_pOS^.piSSR, USER_CNT_System);

END_FUNCTION // System::System

