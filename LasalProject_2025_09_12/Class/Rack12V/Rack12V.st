//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Rack12V"
	Revision           = "0.0"
	GUID               = "{DFEEDC0E-576F-483C-8BB1-291F4EA97973}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "100 ms"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(330,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{B19B7DAA-62A1-4076-89E1-2D44BE303246}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Command_Rack" GUID="{EC8E1043-5A49-4161-B30C-A9DC61C034F1}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="ToPLC" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
Rack12V : CLASS
	TYPE
	  t_CommandRack :  //! <Type Public="true" Name="t_CommandRack"/>
	  (
	    Idle:=10,
	    Command_On:=1,
	    Command_Off:=0
	  )$UDINT;
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Command_Rack 	: SvrCh_t_CommandRack_PTofCls_Rack12V;
  //Clients:
	ToPLC 	: CltCh_DINT;
  //Variables:
		v_CaseRack12V 	: t_CommandRack;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Command_Rack::Read
		VAR_OUTPUT
			output (EAX) 	: Rack12V::t_CommandRack;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Rack12V::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_RACK12V
0$UINT, 0$UINT, (SIZEOF(::Rack12V))$UINT, 
2$UINT, 1$UINT, 0$UINT, 
TO_UDINT(4105514139), "Rack12V", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Rack12V.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Rack12V.Command_Rack.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3364773425), "Command_Rack", 
//Clients:
(::Rack12V.ToPLC.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(392423662), "ToPLC", 
END_FUNCTION


#define USER_CNT_Rack12V 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Rack12V] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Rack12V::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Rack12V, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Command_Rack.pMeth			:= StoreMethod( #Command_Rack::Read(), #M_WR_DIRECT() );
	IF Command_Rack.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL Rack12V::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

  v_CaseRack12V:=Command_Rack.Read();
  

  case v_CaseRack12V of
  
    Idle:
    
    Command_Off:
      ToPLC.Write(input:=1);
      Command_Rack.Write(input:=Idle);
    
    Command_On:
      ToPLC.Write(input:=0);
      Command_Rack.Write(input:=Idle);
    
  end_case;



	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Rack12V::Init
v_CaseRack12V:=Idle;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Rack12V::Command_Rack::Read
	VAR_OUTPUT
		output (EAX) 	: Rack12V::t_CommandRack;
	END_VAR

	output := Command_Rack;

END_FUNCTION
