//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "InputRegister"
	Revision           = "0.0"
	GUID               = "{ED466040-D37C-42B1-9B3D-B65517E2CDA7}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{FAA53BD1-9E47-4C54-9219-EC1DE3C3CB37}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
</Class>
*)
InputRegister : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION TAB TableIR;
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB InputRegister::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_INPUTREGISTER
0$UINT, 0$UINT, (SIZEOF(::InputRegister))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(418069068), "InputRegister", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::InputRegister.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT_InputRegister 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_InputRegister] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION InputRegister::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_InputRegister, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION TAB InputRegister::TableIR

END_FUNCTION


FUNCTION VIRTUAL GLOBAL InputRegister::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := (#TableIR()$DINT);

END_FUNCTION
