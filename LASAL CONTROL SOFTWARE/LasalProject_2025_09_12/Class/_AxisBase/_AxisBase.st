//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_AxisBase"
	Revision           = "1.58"
	GUID               = "{F52EA0ED-F06F-4DF2-8326-9B4FEA0E0D45}"
	RealtimeTask       = "true"
	DefRealtime        = "1 ms"
	CyclicTask         = "false"
	DefCyclictime      = "100 ms"
	BackgroundTask     = "true"
	DefBackground      = "100 ms"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_AxisBase\LMCAxis.ico"
	SharedCommandTable = "true"
	Objectsize         = "(780,1080)"
	Comment            = "The CNC class represents a profile generator for 1 axis. It calculates the actual &#13;&#10;set position and provides with the set and actual values to the controller class.&#13;&#10;&#13;&#10;The CNC class also contains all the functions/interfaces needed to drive an axis.&#13;&#10;&#13;&#10;">
	<Channels>
		<Server Name="AxisStatus" GUID="{68B6CC31-3184-4BD8-9AEF-5517DF33D4FB}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Stateflags of the axis&#13;&#10;======================&#13;&#10;&#13;&#10;Bit 1: PowerOn - Set if the Axis is activated  &#13;&#10;Bit 2: IsReferenced - Set if the Axis is referenced&#13;&#10;Bit 3: InPosition - Set if the axis is in the correct position&#13;&#10;Bit 4: FiltRdy - Set if the Axis is in position and jerk filter is ready&#13;&#10;Bit 5: Decell - Set if the axis brakes; calculated by tic for tic&#13;&#10;Bit 6: PosLimActive - Set if the axis has achieved one of its end-positions&#13;&#10;Bit 7: SetFlg - Set by calling the SetPositon, CNCRefRun and NCRefRun functions Reset after activating the controller&#13;&#10;Bit 8: EnLesFlg - Set if the axis moves endless / infinitely&#13;&#10;Bit 9: DirFlg - Set if the Speed of the axis is negative&#13;&#10;Bit 10: EmergStop - Set if the axis stops, because an error occurs or the axis is deactivated&#13;&#10;Bit 11: Overflow- Set if a position overflow occurs&#13;&#10;Bit 12: MasterLock - Set if the slave-axis is coupled onto the master-axis&#13;&#10;Bit 13: AutoRun - Set if autotuning is running&#13;&#10;Bit 14: AutoStop - Set if autotuning is ready done&#13;&#10;Bit 15: ActDirFlag - Set if the Speed of the axis is negative&#13;&#10;Bit 16: HandFlag - Set if the function &quot;MoveHand&quot; or &quot;PowerOff&quot; is called.&#13;&#10;Bit 17: ModuloFlg - Set if the axis is defined as a modulo-axis&#13;&#10;Bit 18: NCMotion - Is set by the controller if the axis is in the NC positioning-mode&#13;&#10;Bit 19: NoActPosMeth - Set if the client &quot;ActPosition&quot; is not connected or the simulation mode is acting&#13;&#10;Bit 20: NoControlMeth - Set if the client &quot;LMCController&quot; is not connected or the simulation mode is acting&#13;&#10;Bit 21: NoRefMeth - Set if the client &quot;LMCReference&quot; is not connected or the Bit 19: &quot;NoActPosMeth&quot; is set&#13;&#10;Bit 22: NoActPosChk - Set if the client &quot;LMCSafety&quot; is not connected or HWReady is not connected (simulation mode is acting)&#13;&#10;Bit 23: NoPreCyclic - Set if the client &quot;LMCPreCyclicTrigger&quot; is not connected&#13;&#10;Bit 24: NoPostCyclic - Set if the client &quot;LMCPostCyclicTrigger&quot; is not connected&#13;&#10;Bit 25: DelayedMasterLock - configureable, alternative version of the MasterLock bit&#13;&#10;Bit 26: Standstill - Set if the axis is currently not moving.&#13;&#10;Bit 27: BrakeForPowerOff - Set, if the axis is currently stoping for power off.&#13;&#10;Bit 28: MasterError - Set, if some error of the master axis occured.&#13;&#10;Bit 29: SlaveError - Set, if some error of a coupled slave axis occured."/>
		<Server
			Name           = "Control"
			GUID           = "{813CA014-8D4F-4BB9-954A-F20F4611CBBF}"
			Visualized     = "true"
			Initialize     = "false"
			WriteProtected = "true"
			Retentive      = "false"
			Comment        = "This server is the interface to the user application, so that &#13;&#10;axis commands can be sent.&#13;&#10;&#13;&#10;Operation mode of the axis&#13;&#10;=========================&#13;&#10;&#13;&#10;PASSIVE_LMCAXIS  - The axis is in the passive rest state according to a reset&#13;&#10;WAITIDLE_LMCAXIS - The axis is in the passive rest state according to call of the methode &quot;PowerOn&quot;&#13;&#10;IDLE_LMCAXIS     - The axis is in an active rest state and ready for move-instructions&#13;&#10;MOVE_LMCAXIS     - The axis carries out a movement&#13;&#10;FOLLOW_LMCAXIS   - The axis is in the status: Follow&#13;&#10;STOPED_LMCAXIS   - The axis stops for the standstill&#13;&#10;LOCKED_LMCAXIS   - The slave axis couples to a master axis or is already coupled&#13;&#10;REFRUN_LMCAXIS   - The axis carries out a reference movement&#13;&#10;TUNEPOS_LMCAXIS  - The axis carries out a tune movement - in this case, it moves in the positive direction&#13;&#10;TUNENEG_LMCAXIS  - The axis carries out a tune movement - in this case, it moves in the negative direction&#13;&#10;ERROR_LMCAXIS    - An error occurred">
			<NewInst>
				<Function Name="IPRPowerOn" Comment="This command activates the position controller.">
					<InputParameter>
						<Parameter Name="Mode" Comment="Set direction of movement for the axis"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRPowerOff" Comment="This command deactivates the position controller.">
					<InputParameter>
						<Parameter Name="Mode" Comment="Shutdown mode&#13;&#10; --&gt; immediate shutdown of the controller&#13;&#10; --&gt; Ramp down after an emergency stop and subsequent shut-down of the controller"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRMoveRelative" Comment="axis relative position movement">
					<InputParameter>
						<Parameter Name="Position" Comment="distance of the movement [Application units]"/>
						<Parameter Name="Mode" Comment="MOVE_RELATIVE_TO_DESTINATION --&gt; Position is relative to the last target position&#13;&#10;MOVE_RELATIVE_TO_POSIITON    --&gt; Position is relative to the actual position"/>
						<Parameter Name="Speed" Comment="Axis speed of the movement [Application units / s]"/>
						<Parameter Name="Accel" Comment="Axis acceleration of the movement [Application units / s2]"/>
						<Parameter Name="Decel" Comment="Axis deceleration of the movement [Application units / s2]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRMoveAbsolute" Comment="axis movement to an absolute position">
					<InputParameter>
						<Parameter Name="Position" Comment="Targetposition for the axis [Application units]"/>
						<Parameter Name="Speed" Comment="Axis speed of the movement [Application units / s]"/>
						<Parameter Name="Accel" Comment="Axis acceleration of the movement [Application units / s2]"/>
						<Parameter Name="Decel" Comment="Axis deceleration of the movement [Application units / s2]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRMoveReference" Comment="Axis reference movement">
					<InputParameter>
						<Parameter Name="Mode" Comment="Defines the reference mode"/>
						<Parameter Name="Position" Comment="Reference position [Application units]"/>
						<Parameter Name="VRef1" Comment="Speed used when searching for the reference switch [Application units/s]"/>
						<Parameter Name="VRef2" Comment="Speed used when backing off from the reference switch [Application units/s]"/>
						<Parameter Name="Accel" Comment="Acceleration / deceleration used when searching for the reference switch and when backing off from it [Application units/s²]"/>
						<Parameter Name="PositionWindow" Comment="Distance within which the Z pulse must occur after leaving the reference switch [Application units]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRMoveEndless" Comment="Endless axis movement.">
					<InputParameter>
						<Parameter Name="Speed" Comment="Axis speed of the movement [Application units / s]"/>
						<Parameter Name="Accel" Comment="Axis acceleration of the movement [Application units / s2]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRMoveHand" Comment="This command is used for endless movement if no axis reference is done.">
					<InputParameter>
						<Parameter Name="Speed" Comment="Axis speed of the movement [Application units / s]"/>
						<Parameter Name="Accel" Comment="Axis acceleration of the movement [Application units / s2]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRStopMove" Comment="Stops axis movement.">
					<InputParameter>
						<Parameter Name="Decel" Comment="Axis deceleration of the movement [Application units / s2]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleGearVelocity" Comment="Speed coupling">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="pMaster" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleDeltaPos" Comment="Offset position coupling">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="DeltaPos" Comment="Position difference between the master axis and the slave axis [Application units]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleUserPos" Comment="Coupling to a user position">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="pMasterPos" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="DeltaPos" Comment="Position difference between the master axis and the slave axis [Application units]"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
						<Parameter Name="Mode" Comment="Mode = COUPLE_PROFILE_GEAR    --&gt; with gear&#13;&#10;Mode = COUPLE_PROFILE_NO_GEAR --&gt; without gear"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleProfilePos" Comment="This function is called from the class _LMCProfile for profile coupling">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="pMasterPos" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="DeltaPos" Comment="Position difference between the master axis and the slave axis [Application units]"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
						<Parameter Name="Mode" Comment="Mode = COUPLE_PROFILE_GEAR    -&gt; with gear ratio&#13;&#10;Mode = COUPLE_PROFILE_NO_GEAR -&gt; without gear ratio"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleGearRelative" Comment="Relative gear coupling">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="pMaster" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleGearAbsolute" Comment="Absolute gear coupling">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="DeltaPos" Comment="Position difference between the master axis and the slave axis [Application units]"/>
						<Parameter Name="pMaster" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleCurveTab" Comment="Electronic CAM coupling">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="DeltaPos" Comment="Position difference between the master axis and the slave axis [Application units]"/>
						<Parameter Name="pMaster" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
						<Parameter Name="Mode" Comment="Slave axis operating mode"/>
						<Parameter Name="pCurveData" Comment="Pointer to the curve data"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRSetSWEndPos" Comment="Set software end position.">
					<InputParameter>
						<Parameter Name="Mode" Comment="Type of the end position value"/>
						<Parameter Name="Position" Comment="Value for the corresponding SW end position. Depending on the parameter mode the units are either application units or internal units."/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRSetPosition" Comment="This method is used to set internal or external position">
					<InputParameter>
						<Parameter Name="Mode" Comment="Type of the position value"/>
						<Parameter Name="Position" Comment="Position value, depending on the parameter mode the units are either application units or internal units."/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRChangeCoupleSettings" Comment="Change coupling parameters">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="DeltaPos" Comment="Position difference between the master axis and the slave axis [Application units]"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRTuneAxis" Comment="Start tune function">
					<InputParameter>
						<Parameter Name="Position" Comment="Target or distance for the axis [Application units]"/>
						<Parameter Name="Speed" Comment="Maximum speed [Application units / s]"/>
						<Parameter Name="Accel" Comment="Axis acceleration [Application units / s2 ]"/>
						<Parameter Name="Mode" Comment=" INTERVALL__ACTPOSITION_POSITION          --&gt; Movement between the actual position and the position added to it.&#13;&#10; INTERVALL__ZERO_TO_POSITIVE_POSITION     --&gt; Movement between the specified position and 0&#13;&#10; INTERVALL__POSITON_IN_POSITIVE_DIRECTION --&gt; Relative movement in the positive direction&#13;&#10; INTERVALL__ZERO_TO_NEGATIVE_POSITION     --&gt; Movement between the specified negative position and 0&#13;&#10; INTERVALL__POSITON_IN_NEGATIVE_DIRECTION --&gt; Relative movement in the negative direction&#13;&#10;"/>
						<Parameter Name="WaitTime" Comment="A TuneTime is set [ms]. This Tunetime is simply a delay after each movement. "/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadPosition" Comment="Returns axis position depending on the selected mode">
					<InputParameter>
						<Parameter Name="Mode" Comment="Type of the position that should be read"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Position" Comment="Internal position of the axis depending on the selected mode"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadVelocity" Comment="Reads the axis velocity">
					<InputParameter>
						<Parameter Name="Mode" Comment="Type of the axis velocity that should be read"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Result" Comment="Axis velocity depending on the selected mode"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRInPosition" Comment="Checks whether the axis is in the position window.">
					<InputParameter>
						<Parameter Name="Mode" Comment="Position window unit&#13;&#10;0 --&gt; Position window in application units&#13;&#10;1 --&gt; Position window in internal units&#13;&#10;-1 --&gt; no Position window is used (Result = 1 if Flag InPosition and Flag FiltRdy is TRUE)"/>
						<Parameter Name="PositionWindow" Comment="value of the position window"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Result" Comment="0 --&gt; Axis not in position&#13;&#10;1 --&gt; Axis in position"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadAxisStatus" Comment="Provides the actual axis status.">
					<OutputParameter>
						<Parameter Name="Status" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadAxisError" Comment="Provides the actual profile status.">
					<OutputParameter>
						<Parameter Name="AxisErrorInfo" Comment="Profile status of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadMasterInfo" Comment="Purveys a pointer to the master structure">
					<InputParameter>
						<Parameter Name="usDelay" InitValue="0"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="MasterPtr" Comment="Pointer to the master structure"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRSetFollowMode" Comment="Activate or deactivate the modus &quot;FOLLOW_LMCAXIS&quot;&#13;&#10;See description of the server &quot;Control&quot;">
					<InputParameter>
						<Parameter Name="Mode" Comment="Mode = DEACTIVATE_FOLLOW_MODE -&gt; deactive the status &quot;FOLLOW_LMCAXIS&quot;&#13;&#10;Mode = ACTIVATE_FOLLOW_MODE   -&gt;   active the status &quot;FOLLOW_LMCAXIS&quot;"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReferenceReady" Comment="Command returns the information if the axis is referenced">
					<OutputParameter>
						<Parameter Name="Refready" Comment="TRUE .. axis is referenced"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRInpositionOk" Comment="Command returns BUSY if movement is still active and READY if movement is finished">
					<InputParameter>
						<Parameter Name="Mode" Comment="Position window unit&#13;&#10;0 --&gt; Position window in application units&#13;&#10;1 --&gt; Position window in internal units&#13;&#10;-1 --&gt; no Position window is used (Result = 1 if Flag InPosition and Flag FiltRdy is TRUE)"/>
						<Parameter Name="PosWindow" Comment="value of the position window"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Inposx"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCoupleGearPolynom" Comment="Method CoupleGearPolynom couples a slave axis to a master axis using a polynomial of higher order without jerks.&#13;&#10;  The slave starts with zero or non-zero velocity and should achieve a target velocity of vM*Multiplier/Divisor travelling sSlave units&#13;&#10;  while the master travels sMaster units with velocity vM. (Posmode=PolyCatch).&#13;&#10;  After the slave is catched it is locked (not permitted to go backwards) (PosMode=PolySync)&#13;&#10;  Method CoupleGearPolynom does the calculations which must be done only once, the cyclic calculations are done in method PolyLock.">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed of the axis for this movement [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum axis acceleration / deceleration [Application units / s2 ]"/>
						<Parameter Name="pMaster" Comment="pointer to the master axis information. use method ReadMasterInfo()"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
						<Parameter Name="sMaster" Comment="Distance coupled by the master"/>
						<Parameter Name="sSlave" Comment="Distance coupled by the slave"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRSetParameter" Comment="Sets the software parameters">
					<InputParameter>
						<Parameter Name="ParNr" Comment="Parameter number"/>
						<Parameter Name="Value" Comment="New value"/>
						<Parameter Name="Mode" Comment="For further information about the mode see the documentation of the class _LMCAxis"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRSetAdjustment" Comment="Sets server values">
					<InputParameter>
						<Parameter Name="No" Comment="Server-ID"/>
						<Parameter Name="Value" Comment="desired server value"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of the axis"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadParameter" Comment="Reads the software parameters.">
					<InputParameter>
						<Parameter Name="ParNr" Comment="Parameter number"/>
						<Parameter Name="Mode" Comment="Valid for paramters LMCAXIS_PAR_RD_V_MAX, LMCAXIS_PAR_RD_A_MAX, LMCAXIS_PAR_RD_REFPOS&#13;&#10;0 --&gt; Value is returned in [Application units]&#13;&#10;1 --&gt; Value is returned in [Internal units]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Result" Comment="Software parameter"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadSWEndPos" Comment="This command reads the software end position">
					<InputParameter>
						<Parameter Name="Mode" Comment="0 --&gt; Maximum SW end position with cResolution_Fact [Application units]&#13;&#10;1 --&gt; Minimum SW end position with cResolution_Fact [Application units]&#13;&#10;2 --&gt; Maximum SW software end position without cResolution_Fact [Internal units]&#13;&#10;3 --&gt; Minimum SW software end position without cResolution_Fact [Internal units]"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Position" Comment="Software end position Depending on the mode, either application units or internal units"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCalcMovingTime" Comment="Calculate the duration of a movement">
					<InputParameter>
						<Parameter Name="StartPos" Comment="Start-position in application units"/>
						<Parameter Name="EndPos" Comment="End-position in application units"/>
						<Parameter Name="Vstart" Comment="Start-velocity in application units"/>
						<Parameter Name="Vende" Comment="End-velocity in application units"/>
						<Parameter Name="Accel" Comment="Maximal allowed acceleration"/>
						<Parameter Name="Decel" Comment="Maximal allowed deceleration"/>
						<Parameter Name="Vmax" Comment="Maximal allowed velocity"/>
						<Parameter Name="pMovingTime" Comment="Pointer to the calculated result."/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CalcState" Comment="State of the calculation.&#13;&#10;0 -&gt; no error occured&#13;&#10;1 ... 19 -&gt; errorcodes"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRQuitError" Comment="Reset all axis errors">
				</Function>
				<Function Name="IPRCalcMaxSlavePath" Comment="Calculates the maximal possible slavepath for coupling by the function: &quot;CoupleGearPolynom&quot;">
					<InputParameter>
						<Parameter Name="MaxVel" Comment="Maximum speed [Application units / s]"/>
						<Parameter Name="MaxAcc" Comment="Maximum acceleration [application units / s²]"/>
						<Parameter Name="pMaster" Comment="pointer to the master axis information. use method ReadMaster()"/>
						<Parameter Name="GearMul" Comment="Multiplier for the gear ratio"/>
						<Parameter Name="GearDiv" Comment="Divisor for the gear ratio"/>
						<Parameter Name="sMaster" Comment="Distance coupled by the master"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="MaxSlavePath" Comment="Maximal possible slave path for successful coupling by the function &quot;CoupleGearPolynom&quot;"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRCalcExtToAppliPos" Comment="Calculates the internal position in application units&#13;&#10;of the input parameter">
					<InputParameter>
						<Parameter Name="Param" Comment="position to be converted"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="OutParam" Comment="internal position in application units"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRReadUserData">
					<InputParameter>
						<Parameter Name="index"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="Result"/>
					</OutputParameter>
				</Function>
				<Function Name="IPRGetMasterInformation">
					<InputParameter>
						<Parameter Name="pAxisID"/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="MasterErrorState"/>
						<Parameter Name="bProfileCoupled"/>
						<Parameter Name="bVjumpAllowed"/>
					</OutputParameter>
				</Function>
				<Function Name="IPR_SetErrorToMasterCoupleMonitoring">
					<InputParameter>
						<Parameter Name="AxisID"/>
					</InputParameter>
				</Function>
				<Function Name="IPRSetSafetyState">
					<InputParameter>
						<Parameter Name="Parameter" Comment="Parameter define safety state to interact."/>
						<Parameter Name="Mode" Comment="Mode defining specific type of method handling of given parameter."/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="CommandState" Comment="Status flags of command return value."/>
					</OutputParameter>
				</Function>
				<Function Name="IPRGetSafetyState">
					<InputParameter>
						<Parameter Name="Parameter" Comment="Parameter define safety state to interact."/>
						<Parameter Name="pPara1" Comment="Pointer to first return value"/>
						<Parameter Name="pPara2" Comment="Pointer to second return value"/>
						<Parameter Name="pPara3" Comment="Pointer to third return value"/>
						<Parameter Name="pPara4" Comment="Pointer to fourth return value"/>
						<Parameter Name="Mode" Comment="Mode defining specific type of method handling of given parameter."/>
					</InputParameter>
					<OutputParameter>
						<Parameter Name="QueryState" Comment="Query state of request&#13;&#10;READY ... Request successful - return values are valid&#13;&#10;BUSY ... Request ongoing - no values read&#13;&#10;ERROR ... Request failed - values invalid"/>
					</OutputParameter>
				</Function>
			</NewInst>
		</Server>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.57" Date="2022-09-30" Author="StePhi" Company="Sigmatek" Description="1. Improvement: Improved method comment that parameter NextTick of method CalcSpeedChangePath() is only in effect when _JERK_PROFILE is used in _LMCAxisBase implementation."/>
		<Dokumentation Revision="1.56" Date="2021-09-13" Author="StePhi" Company="Sigmatek" Description="1. Improvement: Updated comments of methods CalcSpeedChangePath and CoupleCAM."/>
		<Dokumentation Revision="1.55" Date="2019-10-09" Author="VelGer" Company="Sigmatek" Description="1. Improvement: ChangeMoveSettings() Comments updated.&#13;&#10;2. Improvement: Data type _LMCAXIS_READPARAMETER_LREAL adapted so that the current acceleration can be read."/>
		<Dokumentation Revision="1.54" Date="2019-01-09" Author="SatChr" Company="Sigmatek" Description="Improvement: Method CalcSpeedChangePath provides a new input parameter NextTick."/>
		<Dokumentation Revision="1.53" Date="2018-08-13" Author="SatChr" Company="Sigmatek" Description="1. Improvement: CalcSpeedChangePath() new parameter NextTick"/>
		<Dokumentation Revision="1.52" Date="2018-06-14" Author="RodMar" Company="Sigmatek" Description="1. Add function QuickStop()"/>
		<Dokumentation Revision="1.51" Date="2017-03-13" Author="SatChr" Company="Sigmatek" Description="1. Improvement: Missing method SetDynSwEndPos added."/>
		<Dokumentation Revision="1.50" Date="2017-01-27" Author="SatChr" Company="Sigmatek" Description="comment edited"/>
		<Dokumentation Revision="1.49" Date="2016-10-14" Author="SatChr" Company="Sigmatek" Description="Improvement: New method SetUserData() added."/>
		<Dokumentation Revision="1.48" Date="2016-03-22" Author="SatChr" Company="Sigmatek" Description="1. Improvement: All move commands have been expanded with a new input parameter MaxJerk for enabling different jerk values.&#13;&#10;2. CleanUp: Not used, private methods deleted.&#13;&#10;3. Improvement: new method ReadParameterLREAL added."/>
		<Dokumentation Revision="1.47" Date="2016-03-14" Author="SatChr" Company="Sigmatek" Description="1. Improvement: New method ReadSlavePosCam added."/>
		<Dokumentation Revision="1.46" Date="2015-12-03" Author="SatChr" Company="Sigmatek" Description="1. Improvement: New method CalcSpeedChangePath added."/>
		<Dokumentation Revision="1.45" Date="2015-09-25" Author="SatChr " Company="Sigmatek" Description="1. Improvement: add some comments and default-values"/>
		<Dokumentation Revision="1.44" Date="2015-06-24" Author="PalHar" Company="Sigmatek" Description="Improvement: new parameter &quot;Modus&quot; added to the method ChangeMoveSettings()"/>
		<Dokumentation Revision="1.43" Date="2015-05-05" Author="FucHer" Company="Sigmatek" Description="1. Add some comments to the methods and variables.&#13;&#10;2. Improvement: methods CoupleGearPolynom_v0(), PolynomLock_v0()  added.&#13;&#10;3: Improved comments for methods CoupleCurveTab(), CoupleCAM() and structure _LMCAXIS_CURVE."/>
		<Dokumentation Revision="1.42" Date="2014-12-15" Author="HasHan&#13;&#10;SatChr" Company="Sigmatek" Description="Improvement: methods ChangeMoveSettings(), GetPosInfoBeforeRampDown(), CoupleProfilePosExtended(), CoupleUserPosExtended(), and CoupleDeltaPosExtended() added."/>
		<Dokumentation Revision="1.40" Date="2014-07-07" Author="HasHan&#13;&#10;SatChr" Company="Sigmatek" Description="1. Improvement: methode CoupleAdditivePosDiff() added for easier belt-coupling&#13;&#10;2. Improvement: methode CoupleCAM() for easier usage of the CAM coupling added."/>
		<Dokumentation Revision="1.30" Date="2014-04-11" Author="SatChr" Company="Sigmatek" Description="1. Improvement: New methode MoveShortestWay()"/>
		<Dokumentation Revision="1.20" Date="2013-07-18" Author="SliMic" Company="Sigmatek" Description="1. the MasterPtr can now be delayed with the ReadMaster function&#13;&#10;2. Add some comments to the methodes and variables"/>
		<Dokumentation Revision="1.10" Date="2013-02-08" Author="HasHan&#13;&#10;RauAnd" Company="Sigmatek" Description="1. Bugfix: add ReadUserData() for fetching UserData via NewInst Command&#13;&#10;2. Bugfix: added new NewInst Commands and comments to the existing NewInst Commands. Now all global methods can be called with NewInst Commands"/>
		<Dokumentation Revision="1.0" Date="2012-09-27" Author="RauAnd" Company="Sigmatek" Description="creation"/>
	</RevDoku>
</Class>
*)
_AxisBase : CLASS
	TYPE
	  _LMCAXIS_POSINFOMODE :  //! <Type Public="true" Name="_LMCAXIS_POSINFOMODE"/>
	  (
	    POSINFO_TIME,
	    POSINFO_DISTANCE
	  )$UDINT;
	  _LMCAXIS_READPARAMETER_LREAL :  //! <Type Public="true" Name="_LMCAXIS_READPARAMETER_LREAL"/>
	  (
	    LMCAXIS_PAR_RD2_JMAX,  //! <Type Comment="Reads the jerk [application units / sec^3 / 1000]&#13;&#10;mode=0: maximal jerk of the axis&#13;&#10;mode=1: jerk of the active move command" Name="_LMCAXIS_READPARAMETER_LREAL.LMCAXIS_PAR_RD2_JMAX"/>
	    LMCAXIS_PAR_RD2_ACC  //! <Type Comment="Reads the actual acceleration. If MoveType is not Jerk, zero is delivered." Name="_LMCAXIS_READPARAMETER_LREAL.LMCAXIS_PAR_RD2_ACC"/>
	  )$UDINT;
	  CmdControl :  //! <Type Public="true" Name="CmdControl"/>
	  (
	    IPRPowerOn,
	    IPRPowerOff,
	    IPRMoveRelative,
	    IPRMoveAbsolute,
	    IPRMoveReference,
	    IPRMoveEndless,
	    IPRMoveHand,
	    IPRStopMove,
	    IPRCoupleGearVelocity,
	    IPRCoupleDeltaPos,
	    IPRCoupleUserPos,
	    IPRCoupleProfilePos,
	    IPRCoupleGearRelative,
	    IPRCoupleGearAbsolute,
	    IPRCoupleCurveTab,
	    IPRSetSWEndPos,
	    IPRSetPosition,
	    IPRChangeCoupleSettings,
	    IPRTuneAxis,
	    IPRReadPosition,
	    IPRReadVelocity,
	    IPRInPosition,
	    IPRReadAxisStatus,
	    IPRReadAxisError,
	    IPRReadMasterInfo,
	    IPRSetFollowMode,
	    IPRReferenceReady,
	    IPRInpositionOk,
	    IPRCoupleGearPolynom,
	    IPRSetParameter,
	    IPRSetAdjustment,
	    IPRReadParameter,
	    IPRReadSWEndPos,
	    IPRCalcMovingTime,
	    IPRQuitError,
	    IPRCalcMaxSlavePath,
	    IPRCalcExtToAppliPos,
	    IPRReadUserData,
	    IPRGetMasterInformation,
	    IPR_SetErrorToMasterCoupleMonitoring,
	    IPRSetSafetyState,
	    IPRGetSafetyState
	  )$UINT;
	  t_e_LMCAXIS_GETSAFETYPARAMETER :  //! <Type Public   = "true" Comment  = "Public type which defines the allowed parameters of method GetSafetyData(). Check the comments of the single enum entries for more detailed information of the parameter.&#13;&#10;Available parameters:&#13;&#10;LMCAXIS_PAR_GET_SAFETY_SAFETYERROR - Reads the safety error information from either safety core 1 or safety core 2 (use mode to choose)&#13;&#10;LMCAXIS_PAR_GET_SAFETY_VERIFYSTATE - Reads the verify state of the connected axis. Does no trigger reading the a new value - the stored result of the hardware class is returned.&#13;&#10;LMCAXIS_PAR_GET_SAFETY_REFERENCESTATE - Reads the reference state of the connected axis. Does no trigger reading the a new value - the stored result of the hardware class is returned.&#13;&#10;LMCAXIS_PAR_GET_SAFETY_SBTSTATE - Reads the SBT state of the connected axis. Command triggers reading a new value by itself." Revision = "1.0" Name     = "t_e_LMCAXIS_GETSAFETYPARAMETER"> <RevDoku>  <Owner Company="Sigmatek"/>  <Dokumentation Revision="1.0" Date="2023-07-17" Author="StePhi" Company="Sigmatek" Description="Initial version of type"/> </RevDoku></Type>
	  (
	    LMCAXIS_PAR_GET_SAFETY_SAFETYERROR,  //! <Type Comment="The parameter mode can be used to choose if the safety error information of SC1 (Mode = 0) or SC2 (Mode = 2) should be returned.&#13;&#10;para1 = Safety Error Code&#13;&#10;para2 = Safety Error Information 1&#13;&#10;para3 = Safety Error Information 2&#13;&#10;para4 = Safety Error Information 3" Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_SAFETYERROR"/>
	    LMCAXIS_PAR_GET_SAFETY_SAFETYFUNCERROR,  //! <Type Comment="Parameter to read the safety function error info &#13;&#10;para1 = SafeErrorWord&#13;&#10;para2 = SafeFunctionErrorID&#13;&#10;para3 = SafeFunctionInErrID&#13;&#10;para4 = SafeFunctionErrSubID&#13;&#10;Mode is not used for this parameter" Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_SAFETYFUNCERROR"/>
	    LMCAXIS_PAR_GET_SAFETY_VERIFYSTATE,  //! <Type Comment="The parameter is used to read the verify state of the connected axis. The Mode parameter can be used to decide if the value from hardware class should be returned or the values should be read from the drive.&#13;&#10;para1 = Command State of request&#13;&#10; READY ... the command was processed successfully&#13;&#10; BUSY ... the command is still processed&#13;&#10; ERROR ... the command failed or no async communication is available / possible&#13;&#10;&#13;&#10;para2 = Verify Command state -  when command state is valid (READY) returns the actual state of the command. See the possible return values in DriveSafetyIF.h file.&#13;&#10; 16#0000000B ... response to command not yet received&#13;&#10; 16#40000000 ... command successfully processed&#13;&#10; 16#40000001 ... not all axes requiring verification have been verified&#13;&#10; 16#40000002 ... saving the HDSL verification state failed&#13;&#10; 16#40000003 ... command not allowed in current run state of drive&#13;&#10; 16#40000004 ... command executed but verification is not needed&#13;&#10; 16#40000005 ... programming of encoder index failed&#13;&#10;&#13;&#10;para3 = Execution State of request&#13;&#10; READY ... the verification is finished and the execution state is valid&#13;&#10; BUSY ... the verification is either still ongoing or the command is not processed already&#13;&#10; ERROR ... the command failed or no async communication is available / possible&#13;&#10;&#13;&#10;para4 = Verify Execution state -  when execution state is valid (READY) returns the actual state of the command. See the possible return values in DriveSafetyIF.h file.&#13;&#10; 16#00000000 ... state is unknown and not read&#13;&#10; 16#0000000B ... reading the state is busy&#13;&#10; 16#1A8C5E7B ... axis is not verified and verification is necessary&#13;&#10; 16#2B9D6F8C ... drive (all associated axis) are verified&#13;&#10; 16#30000000 ... no verification necessary for this axis&#13;&#10; 16#30000001 ... verification process started but programming of index not finished already&#13;&#10; 16#30000002 ... verification of axis complete - encoder index successfully programmed." Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_VERIFYSTATE"/>
	    LMCAXIS_PAR_GET_SAFETY_REFERENCESTATE,  //! <Type Comment="The parameter is used to read the reference state of the connected axis. The Mode parameter can be used to decide if the value from hardware class should be returned or the values should be read from the drive.&#13;&#10;para1 = Command State of request&#13;&#10; READY ... the command was processed successfully&#13;&#10; BUSY ... the command is still processed&#13;&#10; ERROR ... the command failed or no async communication is available / possible&#13;&#10;&#13;&#10;para2 = Reference Command state -  when command state is valid (READY) returns the actual state of the command. See the possible return values in DriveSafetyIF.h file.&#13;&#10; 16#0000000B ... response to command not yet received&#13;&#10; 16#40000000 ... command successfully processed &#13;&#10; 16#40000002 ... Saving of offset or the reference state has failed.&#13;&#10; 16#40000003 ... command not allowed in current run state of drive&#13;&#10; 16#40000004 ... command executed but safe reference is not needed&#13;&#10; 16#40000005 ... programming of encoder index failed&#13;&#10; 16#40000010 ... safe reference was not started and command is not allowed at the moment&#13;&#10; 16#40000011 ... position has not moved far enough from zero position after start of safe reference&#13;&#10; 16#40000012 ... Acknowledged zero position deviates more than permitted from set safe position&#13;&#10;&#13;&#10;para3 = Execution State of request&#13;&#10; READY ... the verification is finished and the execution state is valid&#13;&#10; BUSY ... the verification is either still ongoing or the command is not processed already&#13;&#10; ERROR ... the command failed or no async communication is available / possible&#13;&#10;&#13;&#10;para4 = Reference Execution state -  when execution state is valid (READY) returns the actual state of the command. See the possible return values in DriveSafetyIF.h file.&#13;&#10; 16#00000000 ... state is unknown and not read&#13;&#10; 16#0000000B ... reading the state is busy&#13;&#10; 16#1A8C5E7B ... axis is not verified and verification is necessary&#13;&#10; 16#2B9D6F8C ... axis fully referenced&#13;&#10; 16#30000000 ... no safe reference necessary for this axis&#13;&#10; 16#30000001 ... safe referencing process started but process is waiting for axis movement&#13;&#10; 16#30000002 ... safe referencing process started but process is waiting for acknowledge of safe zero position&#13;&#10; 16#30000003 ... safe referencing of axis complete - zero position successfully programmed." Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_REFERENCESTATE"/>
	    LMCAXIS_PAR_GET_SAFETY_SBTSTATE,  //! <Type Comment="This parameter is used to read the sbt state of the connected axis. The Mode parameter can be used to decide if the value from hardware class should be returned or the values should be read from the drive.&#13;&#10;para1 = safe brake test status - SBT state from safety fw&#13;&#10;&#13;&#10;para2 = brake test status -  SBT state from control fw&#13;&#10;&#13;&#10;para3 = brake test error info - error information from control fw&#13;&#10;&#13;&#10;para4 = time till next test -  countdown until next SBT test must be done" Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_SBTSTATE"/>
	    LMCAXIS_PAR_GET_SAFETY_RUNSTATE,  //! <Type Comment="This parameter can be used to read the safety run state of the connected drive. The safety run state is returned casted to a DINT value.&#13;&#10;Mode := 0 ... Returns the safety run state stored in the _LMCAxis (default). The safety run state is updated via callback automatically.&#13;&#10;Mode := 1 ... Requests the actual safety run state from the hardware class. Only necessary when callback is not active." Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_RUNSTATE"/>
	    LMCAXIS_PAR_GET_SAFETY_CNTRLSTATEWORD  //! <Type Comment="This parameter can be used to receive the current safe control word, safe state word, the active safety function and if the active safety function information is valid. This can be used to react to the currently active safe functions in the application. Especially when no automatic SS2 is done by the _LMCAxis object.&#13;&#10;pPara1 = SafeControlWord / DINT only lower two bytes are used&#13;&#10;pPara2 = SafeStateWord / DINT only lower two bytes are used&#13;&#10;pPara3 = ActiveSafeFnct / t_e_DRIVESAFETYIF_ActiveSafeFnct with bitwise mapping which safe function is currently active&#13;&#10;pPara4 = ActiveSafeFnctValid / iprStates to mark if pPara3 is valid." Name="t_e_LMCAXIS_GETSAFETYPARAMETER.LMCAXIS_PAR_GET_SAFETY_CNTRLSTATEWORD"/>
	  )$UDINT;
	  t_e_LMCAXIS_SETSAFETYPARAMETER :  //! <Type Public   = "true" Comment  = "Public type which defines the allowed parameters of method SetSafetyData(). Check the comments of the single enum entries for more detailed information of the parameter.&#13;&#10;Available parameters:&#13;&#10;LMCAXIS_PAR_SET_SAFETY_SETVERIFY - Command sends a verify command to the connected axis. The command automatically reads the verify state afterwards.&#13;&#10;LMCAXIS_PAR_SET_SAFETY_CLEARVERIFY - Command sends a clear verify command to the connected axis. The command automatically reads the reference state afterwards.&#13;&#10;LMCAXIS_PAR_SET_SAFETY_CLEARREFERENCE - Command sends a clear reference command to the connected axis. The command automatically reads the reference state afterwards." Revision = "1.0" Name     = "t_e_LMCAXIS_SETSAFETYPARAMETER"> <RevDoku>  <Owner Company="Sigmatek"/>  <Dokumentation Revision="1.0" Date="2023-07-17" Author="StePhi" Company="Sigmatek" Description="Initial version of type"/> </RevDoku></Type>
	  (
	    LMCAXIS_PAR_SET_SAFETY_SETVERIFY,  //! <Type Comment="With this parameter the verify state of the axis can be confirmed. The parameter Mode is not used." Name="t_e_LMCAXIS_SETSAFETYPARAMETER.LMCAXIS_PAR_SET_SAFETY_SETVERIFY"/>
	    LMCAXIS_PAR_SET_SAFETY_CLEARVERIFY,  //! <Type Comment="With this parameter the verify state of the axis can be cleared.&#13;&#10;Two different modes are available&#13;&#10;Mode = 0 ... Clears the verification of all axes (of this drive) and additionally resets the safe reference of the axis&#13;&#10;Mode = 1 ... Clears the verification of all axes (of this drive)" Name="t_e_LMCAXIS_SETSAFETYPARAMETER.LMCAXIS_PAR_SET_SAFETY_CLEARVERIFY"/>
	    LMCAXIS_PAR_SET_SAFETY_CLEARREFERENCE,  //! <Type Comment="With this parameter the reference state of the axis can be cleared. The parameter Mode is not used." Name="t_e_LMCAXIS_SETSAFETYPARAMETER.LMCAXIS_PAR_SET_SAFETY_CLEARREFERENCE"/>
	    LMCAXIS_PAR_SET_SAFETY_QUITERROR,  //! <Type Comment="Parameter to perform an safety error quit with the given level. The wanted reset level is given via the Mode parameter of the method.&#13;&#10;Available reset level:&#13;&#10;Mode = 1 .. Restart drive and acknowledge the error of a stop function (e.g. STO, SS1, SS2, SOS)&#13;&#10;Mode = 2 ... Quits safety error of safety function&#13;&#10;Mode = 4 ... Quits safety error of safety firmware (SafetyRunState = ERROR)" Name="t_e_LMCAXIS_SETSAFETYPARAMETER.LMCAXIS_PAR_SET_SAFETY_QUITERROR"/>
	    LMCAXIS_PAR_SET_SAFETY_CHANGESERVICEMODE  //! <Type Comment="The parameter can be used to change the service mode state of the connected drive.&#13;&#10;Mode := 1 ... Enter Service Mode&#13;&#10;Mode := 2 ... Leave Service Mode" Name="t_e_LMCAXIS_SETSAFETYPARAMETER.LMCAXIS_PAR_SET_SAFETY_CHANGESERVICEMODE"/>
	  )$UDINT;
	END_TYPE
  //Servers:
	Control 	: SvrChCmd__LMCAXIS_OPMODE;
	AxisStatus 	: SvrCh__LMCAXIS_STATUS;
  //Clients:
  //Variables:
		InstrSema 	: DINT;
		CmdFlags 	: _LMCAXIS_CMDERROR;
  //Functions:
				//! <Function Comment="init routine" Name="Init"/>
	FUNCTION VIRTUAL GLOBAL Init;
				//! <Function Comment="Real time work&#13;&#10;" Name="RtWork"/>
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT := EAX;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
				//! <Function Comment="for updating server data" Name="Background"/>
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
				//! <Function Comment="This method activates the position controller." Name="PowerOn"/>
	FUNCTION VIRTUAL GLOBAL PowerOn
		VAR_INPUT
			Mode 	: _LMCAXIS_MOVEDIRECTION;			//! <Variable Comment="Set direction of movement for the axis&#13;&#10;" Name="PowerOn.Mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="PowerOn.CommandState"/>
		END_VAR;
				//! <Function Comment="This method deactivates the position controller." Name="PowerOff"/>
	FUNCTION VIRTUAL GLOBAL PowerOff
		VAR_INPUT
			Mode 	: _LMCAXIS_POWER_OFF_MODE;			//! <Variable Comment="Shutdown mode&#13;&#10; --&gt; immediate shutdown of the controller&#13;&#10; --&gt; Ramp down after an emergency stop and subsequent shut-down of the controller" Name="PowerOff.Mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="PowerOff.CommandState"/>
		END_VAR;
				//! <Function Comment="This method is used for endless movement if no axis reference is done." Name="MoveHand"/>
	FUNCTION VIRTUAL GLOBAL MoveHand
		VAR_INPUT
			Speed 	: DINT;			//! <Variable Comment="Axis speed of the movement [Application units / s]" Name="MoveHand.Speed"/>
			Accel 	: DINT;			//! <Variable Comment="Axis acceleration of the movement [Application units / s²]" Name="MoveHand.Accel"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="MoveHand.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="MoveHand.CommandState"/>
		END_VAR;
				//! <Function Comment="Endless axis movement." Name="MoveEndless"/>
	FUNCTION VIRTUAL GLOBAL MoveEndless
		VAR_INPUT
			Speed 	: DINT;			//! <Variable Comment="Axis speed of the movement [Application units / s]" Name="MoveEndless.Speed"/>
			Accel 	: DINT;			//! <Variable Comment="Axis acceleration of the movement [Application units / s²]" Name="MoveEndless.Accel"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="MoveEndless.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="MoveEndless.CommandState"/>
		END_VAR;
				//! <Function Comment="axis movement to an absolute position" Name="MoveAbsolute"/>
	FUNCTION VIRTUAL GLOBAL MoveAbsolute
		VAR_INPUT
			Position 	: DINT;			//! <Variable Comment="Targetposition for the axis [Application units]" Name="MoveAbsolute.Position"/>
			Speed 	: DINT;			//! <Variable Comment="Axis speed of the movement [Application units / s]" Name="MoveAbsolute.Speed"/>
			Accel 	: DINT;			//! <Variable Comment="Axis acceleration of the movement [Application units / s²]" Name="MoveAbsolute.Accel"/>
			Decel 	: DINT := 0;			//! <Variable Comment="Axis deceleration of the movement [Application units / s²]" Name="MoveAbsolute.Decel"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="MoveAbsolute.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="MoveAbsolute.CommandState"/>
		END_VAR;
				//! <Function Comment="axis movement to an absolute position. Chooses the shortest way for a modulo axis." Name="MoveShortestWay"/>
	FUNCTION VIRTUAL GLOBAL MoveShortestWay
		VAR_INPUT
			Position 	: DINT;			//! <Variable Comment="Target position for the axis [application units]" Name="MoveShortestWay.Position"/>
			Speed 	: DINT;			//! <Variable Comment="Speed of the axis [application units / sec]" Name="MoveShortestWay.Speed"/>
			Accel 	: DINT;			//! <Variable Comment="acceleration of the axis [application units / s²]" Name="MoveShortestWay.Accel"/>
			Decel 	: DINT := 0;			//! <Variable Comment="deceleration of the axis [application units / s²]" Name="MoveShortestWay.Decel"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="MoveShortestWay.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis." Name="MoveShortestWay.CommandState"/>
		END_VAR;
				//! <Function Comment="Axis reference movement" Name="MoveReference"/>
	FUNCTION VIRTUAL GLOBAL MoveReference
		VAR_INPUT
			Mode 	: _LMCAXIS_REFMODE;			//! <Variable Comment="Defines the reference mode" Name="MoveReference.Mode"/>
			Position 	: DINT;			//! <Variable Comment="Reference position [Application units]" Name="MoveReference.Position"/>
			VRef1 	: DINT;			//! <Variable Comment="Speed used when searching for the reference switch [Application units/s]" Name="MoveReference.VRef1"/>
			VRef2 	: DINT;			//! <Variable Comment="Speed used when backing off from the reference switch [Application units/s]" Name="MoveReference.VRef2"/>
			Accel 	: DINT;			//! <Variable Comment="Acceleration / deceleration used when searching for the reference switch and when backing off from it [Application units/s²]" Name="MoveReference.Accel"/>
			PositionWindow 	: DINT;			//! <Variable Comment="Distance within which the Z pulse must occur after leaving the reference switch [Application units]" Name="MoveReference.PositionWindow"/>
			RefJerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="MoveReference.RefJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="MoveReference.CommandState"/>
		END_VAR;
				//! <Function Comment="axis relative position movement" Name="MoveRelative"/>
	FUNCTION VIRTUAL GLOBAL MoveRelative
		VAR_INPUT
			Position 	: DINT;			//! <Variable Comment="distance of the movement [Application units]" Name="MoveRelative.Position"/>
			Mode 	: _LMCAXIS_MOVE_RELATIVE_MODE;			//! <Variable Comment="MOVE_RELATIVE_TO_DESTINATION --&gt; Position is relative to the last target position&#13;&#10;MOVE_RELATIVE_TO_POSIITON    --&gt; Position is relative to the actual position" Name="MoveRelative.Mode"/>
			Speed 	: DINT;			//! <Variable Comment="Axis speed of the movement [Application units / s]" Name="MoveRelative.Speed"/>
			Accel 	: DINT;			//! <Variable Comment="Axis acceleration of the movement [Application units / s²]" Name="MoveRelative.Accel"/>
			Decel 	: DINT := 0;			//! <Variable Comment="Axis deceleration of the movement [Application units / s²]" Name="MoveRelative.Decel"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="MoveRelative.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="MoveRelative.CommandState"/>
		END_VAR;
				//! <Function Comment="Stops axis movement." Name="StopMove"/>
	FUNCTION VIRTUAL GLOBAL StopMove
		VAR_INPUT
			Decel 	: DINT;			//! <Variable Comment="Axis deceleration of the movement [Application units / s²]" Name="StopMove.Decel"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="StopMove.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="StopMove.CommandState"/>
		END_VAR;
				//! <Function Comment="Stop Axis Movement intended for the MoveType _SCURVE_PROFILE. Other profiles behaive ident to StopMove. When calling  QuickStop the &#13;&#10;stop in MoveType _SCURVE_PROFILE corresponds to a _RAMP_PROFILE.&#13;&#10;" Name="QuickStop"/>
	FUNCTION VIRTUAL GLOBAL QuickStop
		VAR_INPUT
			Decel 	: DINT;			//! <Variable Comment="Axis deceleration of the movement [Application units / s²]" Name="QuickStop.Decel"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis&#13;&#10;" Name="QuickStop.CommandState"/>
		END_VAR;
				//! <Function Comment="Start tune function" Name="TuneAxis"/>
	FUNCTION VIRTUAL GLOBAL TuneAxis
		VAR_INPUT
			Position 	: DINT;			//! <Variable Comment="Target or distance for the axis [Application units]" Name="TuneAxis.Position"/>
			Speed 	: DINT;			//! <Variable Comment="Maximum speed [Application units / s]" Name="TuneAxis.Speed"/>
			Accel 	: DINT;			//! <Variable Comment="Axis acceleration [Application units / s² ]" Name="TuneAxis.Accel"/>
			Mode 	: _LMCAXIS_TUNE_MODE;			//! <Variable Comment=" INTERVALL__ACTPOSITION_POSITION          --&gt; Movement between the actual position and the position added to it.&#13;&#10; INTERVALL__ZERO_TO_POSITIVE_POSITION     --&gt; Movement between the specified position and 0&#13;&#10; INTERVALL__POSITON_IN_POSITIVE_DIRECTION --&gt; Relative movement in the positive direction&#13;&#10; INTERVALL__ZERO_TO_NEGATIVE_POSITION     --&gt; Movement between the specified negative position and 0&#13;&#10; INTERVALL__POSITON_IN_NEGATIVE_DIRECTION --&gt; Relative movement in the negative direction&#13;&#10;" Name="TuneAxis.Mode"/>
			WaitTime 	: UDINT;			//! <Variable Comment="A TuneTime is set [ms]. This Tunetime is simply a delay after each movement. " Name="TuneAxis.WaitTime"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Axis jerk of the movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="TuneAxis.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="TuneAxis.CommandState"/>
		END_VAR;
				//! <Function Comment="Checks whether the axis is in the position window." Name="InPosition"/>
	FUNCTION VIRTUAL GLOBAL InPosition
		VAR_INPUT
			Mode 	: _LMCAXIS_QUERY_POSITION_MODE;			//! <Variable Comment="Position window unit&#13;&#10;0 --&gt; Position window in application units&#13;&#10;1 --&gt; Position window in internal units&#13;&#10;-1 --&gt; no Position window is used (Result = 1 if Flag InPosition and Flag FiltRdy is TRUE)" Name="InPosition.Mode"/>
			PositionWindow 	: DINT;			//! <Variable Comment="value of the position window" Name="InPosition.PositionWindow"/>
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;			//! <Variable Comment="0 --&gt; Axis not in position&#13;&#10;1 --&gt; Axis in position" Name="InPosition.Result"/>
		END_VAR;
				//! <Function Comment="Absolute gear coupling" Name="CoupleGearAbsolute"/>
	FUNCTION VIRTUAL GLOBAL CoupleGearAbsolute
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleGearAbsolute.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleGearAbsolute.MaxAcc"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position difference between the master axis and the slave axis [internal units]" Name="CoupleGearAbsolute.DeltaPos"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="pointer to the master axis information. use method ReadMasterInfo()" Name="CoupleGearAbsolute.pMaster"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleGearAbsolute.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleGearAbsolute.GearDiv"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleGearAbsolute.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleGearAbsolute.CommandState"/>
		END_VAR;
				//! <Function Comment="Relative gear coupling" Name="CoupleGearRelative"/>
	FUNCTION VIRTUAL GLOBAL CoupleGearRelative
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleGearRelative.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleGearRelative.MaxAcc"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="pointer to the master axis information. use method ReadMasterInfo()" Name="CoupleGearRelative.pMaster"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleGearRelative.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleGearRelative.GearDiv"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleGearRelative.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleGearRelative.CommandState"/>
		END_VAR;
				//! <Function Comment="Speed coupling" Name="CoupleGearVelocity"/>
	FUNCTION VIRTUAL GLOBAL CoupleGearVelocity
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleGearVelocity.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleGearVelocity.MaxAcc"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="pointer to the master axis information. use method ReadMasterInfo()" Name="CoupleGearVelocity.pMaster"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleGearVelocity.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleGearVelocity.GearDiv"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleGearVelocity.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleGearVelocity.CommandState"/>
		END_VAR;
				//! <Function Comment="Electronic CAM coupling (new version)" Name="CoupleCAM"/>
	FUNCTION VIRTUAL GLOBAL CoupleCAM
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleCAM.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleCAM.MaxAcc"/>
			DeltaPosMaster 	: DINT;			//! <Variable Comment="Position offset in the master axis of the cam definition [CAM Master units].&#13;&#10;Added to the master axis position before searching the table." Name="CoupleCAM.DeltaPosMaster"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="Pointer to the master axis information (MasterStruct). Use method ReadMasterInfo()." Name="CoupleCAM.pMaster"/>
			GearMulMaster 	: DINT;			//! <Variable Comment="Numerator of the master axis scale factor.&#13;&#10;The scale factor is used on the master axis before searching the table." Name="CoupleCAM.GearMulMaster"/>
			GearDivMaster 	: DINT;			//! <Variable Comment="Denominator of the master axis scale factor.&#13;&#10;The scale factor is used on the master axis before searching the table." Name="CoupleCAM.GearDivMaster"/>
			Modulo 	: DINT;			//! <Variable Comment="Modulo value of the master.&#13;&#10;If the master is no modulo axis, then set Modulo=0." Name="CoupleCAM.Modulo"/>
			GearMulSlave 	: DINT;			//! <Variable Comment="Numerator of the slave axis scale factor.&#13;&#10;The scale factor is used on the slave value of the cam table." Name="CoupleCAM.GearMulSlave"/>
			GearDivSlave 	: DINT;			//! <Variable Comment="Denominator of the slave axis scale factor.&#13;&#10;The scale factor is used on the slave value of the cam table." Name="CoupleCAM.GearDivSlave"/>
			OffsetSlave 	: DINT;			//! <Variable Comment="Position offset in the slave axis of the cam definition [Internal units].&#13;&#10;Added to the slave value of the cam table." Name="CoupleCAM.OffsetSlave"/>
			Mode 	: _LMCAXIS_CURVETABMODE;			//! <Variable Comment="Slave axis operating mode" Name="CoupleCAM.Mode"/>
			pCurveTable 	: DINT;			//! <Variable Comment="Pointer to the cam table casted to DINT.&#13;&#10;Use the ClassSvr.Read()-method of the class, which has been generated by the Lasal CAM Designer or cast the result of _LMCCAM.calcCAMData().&#13;&#10;It is important that the memory range of the given CAM Table is not changed since the class uses the given table and does not create a local copy." Name="CoupleCAM.pCurveTable"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleCAM.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleCAM.CommandState"/>
		END_VAR;
				//! <Function Comment="Electronic CAM coupling" Name="CoupleCurveTab"/>
	FUNCTION VIRTUAL GLOBAL CoupleCurveTab
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleCurveTab.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleCurveTab.MaxAcc"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position offset in the master axis of the cam definition [CAM Master units].&#13;&#10;Added to the master axis position before searching the table." Name="CoupleCurveTab.DeltaPos"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="Pointer to the master axis information (MasterStruct). Use method ReadMasterInfo()." Name="CoupleCurveTab.pMaster"/>
			GearMul 	: DINT;			//! <Variable Comment="Numerator of the master axis scale factor.&#13;&#10;The scale factor is used on the master axis before searching the table." Name="CoupleCurveTab.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Denominator of the master axis scale factor.&#13;&#10;The scale factor is used on the master axis before searching the table." Name="CoupleCurveTab.GearDiv"/>
			Mode 	: _LMCAXIS_CURVETABMODE;			//! <Variable Comment="Slave axis operating mode" Name="CoupleCurveTab.Mode"/>
			pCurveData 	: ^_LMCAXIS_CURVE;			//! <Variable Comment="Pointer to the curve data" Name="CoupleCurveTab.pCurveData"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleCurveTab.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleCurveTab.CommandState"/>
		END_VAR;
				//! <Function Comment="Method CoupleGearPolynom couples a slave axis to a master axis using a higher order polynomial or splines without jerks.&#13;&#10;  The master starts with velocity zero or unequal zero. The slave starts with velocity zero or unequal zero, acceleration zero or&#13;&#10;  unequal zero  and should achieve a target velocity of vM*Multiplier/Divisor travelling sSlave units while the master travels&#13;&#10;  sMaster units with velocity vM. (Posmode=_StartPolynomPositioning). Target acceleration and jerk of the slave is zero.&#13;&#10;  After the master is catched, the slave is locked (not permitted to go backwards) (PosMode=_SyncPolynomPositioning)." Name="CoupleGearPolynom"/>
	FUNCTION VIRTUAL GLOBAL CoupleGearPolynom
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleGearPolynom.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleGearPolynom.MaxAcc"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="Pointer to the master axis information (MasterStruct). Use method ReadMasterInfo()." Name="CoupleGearPolynom.pMaster"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleGearPolynom.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleGearPolynom.GearDiv"/>
			sMaster 	: DINT;			//! <Variable Comment="Distance travelled by the master axis during coupling [Application units]" Name="CoupleGearPolynom.sMaster"/>
			sSlave 	: DINT;			//! <Variable Comment="Distance travelled by the slave axis during coupling [Application units]" Name="CoupleGearPolynom.sSlave"/>
			TargetMaster 	: BOOL := TRUE;			//! <Variable Comment="Select whether the slave axis is coupled or decoupled.&#13;&#10;TRUE  ... (default) vOut = velocity of the master * GearMul / GearDiv&#13;&#10;FALSE ... vOut = 0" Name="CoupleGearPolynom.TargetMaster"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleGearPolynom.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleGearPolynom.CommandState"/>
		END_VAR;
				//! <Function Comment="This function is called from the class _LMCProfile for profile coupling" Name="CoupleProfilePos"/>
	FUNCTION VIRTUAL GLOBAL CoupleProfilePos
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed [Application units / s]" Name="CoupleProfilePos.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum acceleration [application units / s²]" Name="CoupleProfilePos.MaxAcc"/>
			pMasterPos 	: ^DINT;			//! <Variable Comment="Pointer to the master position" Name="CoupleProfilePos.pMasterPos"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position difference between the master axis and the slave axis [internal units]" Name="CoupleProfilePos.DeltaPos"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleProfilePos.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleProfilePos.GearDiv"/>
			Mode 	: _LMCAXIS_COUPLE_GEAR_MODE;			//! <Variable Comment="Mode = COUPLE_PROFILE_GEAR    -&gt; with gear ratio&#13;&#10;Mode = COUPLE_PROFILE_NO_GEAR -&gt; without gear ratio" Name="CoupleProfilePos.Mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleProfilePos.CommandState"/>
		END_VAR;
				//! <Function Comment="This function is called from the class _LMCProfile for profile coupling (for MoveType=_JERK_PROFILE only)" Name="CoupleProfilePosExtended"/>
	FUNCTION VIRTUAL GLOBAL CoupleProfilePosExtended
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleProfilePosExtended.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleProfilePosExtended.MaxAcc"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position difference between the master axis and the slave axis [internal units]" Name="CoupleProfilePosExtended.DeltaPos"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleProfilePosExtended.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleProfilePosExtended.GearDiv"/>
			Mode 	: _LMCAXIS_COUPLE_GEAR_MODE;			//! <Variable Comment="Mode = COUPLE_PROFILE_GEAR    -&gt; with gear ratio&#13;&#10;Mode = COUPLE_PROFILE_NO_GEAR -&gt; without gear ratio" Name="CoupleProfilePosExtended.Mode"/>
			pMasterPos 	: ^LREAL;			//! <Variable Comment="Pointer to the master position" Name="CoupleProfilePosExtended.pMasterPos"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;
		END_VAR;
				//! <Function Comment="add an additional positiondifference&#13;&#10;every cycle, when&#13;&#10;PosMode = _ProfileSyncPositioning" Name="CoupleAdditivePosDiff"/>
	FUNCTION VIRTUAL GLOBAL CoupleAdditivePosDiff
		VAR_INPUT
			pPosDiff 	: ^DINT;			//! <Variable Comment="pointer to the positiondifference [internal units]" Name="CoupleAdditivePosDiff.pPosDiff"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleAdditivePosDiff.CommandState"/>
		END_VAR;
				//! <Function Comment="Coupling to a user position" Name="CoupleUserPos"/>
	FUNCTION VIRTUAL GLOBAL CoupleUserPos
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleUserPos.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleUserPos.MaxAcc"/>
			pMasterPos 	: ^DINT;			//! <Variable Comment="pointer to the setvalue of the master [internal units]" Name="CoupleUserPos.pMasterPos"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position difference between the master position and the slave axis [internal units]" Name="CoupleUserPos.DeltaPos"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleUserPos.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CoupleUserPos.GearDiv"/>
			Mode 	: _LMCAXIS_COUPLE_GEAR_MODE;			//! <Variable Comment="Mode = COUPLE_PROFILE_GEAR    --&gt; with gear&#13;&#10;Mode = COUPLE_PROFILE_NO_GEAR --&gt; without gear" Name="CoupleUserPos.Mode"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleUserPos.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleUserPos.CommandState"/>
		END_VAR;
				//! <Function Comment="Coupling to a LREAL user position (for MoveType=_JERK_PROFILE only)" Name="CoupleUserPosExtended"/>
	FUNCTION VIRTUAL GLOBAL CoupleUserPosExtended
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleUserPosExtended.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleUserPosExtended.MaxAcc"/>
			pMasterPos 	: ^LREAL;			//! <Variable Comment="pointer to the set value (LREAL) of the master [internal units]" Name="CoupleUserPosExtended.pMasterPos"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position difference between the master position and the slave axis [internal units]" Name="CoupleUserPosExtended.DeltaPos"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CoupleUserPosExtended.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="divisor for the gear ratio" Name="CoupleUserPosExtended.GearDiv"/>
			Mode 	: _LMCAXIS_COUPLE_GEAR_MODE;			//! <Variable Comment="Mode = COUPLE_PROFILE_GEAR    --&gt; with gear&#13;&#10;Mode = COUPLE_PROFILE_NO_GEAR --&gt; without gear" Name="CoupleUserPosExtended.Mode"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleUserPosExtended.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleUserPosExtended.CommandState"/>
		END_VAR;
				//! <Function Comment="Offset position coupling" Name="CoupleDeltaPos"/>
	FUNCTION VIRTUAL GLOBAL CoupleDeltaPos
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleDeltaPos.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleDeltaPos.MaxAcc"/>
			DeltaPos 	: ^DINT;			//! <Variable Comment="Pointer to the position difference value of the master axis [internal units]" Name="CoupleDeltaPos.DeltaPos"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleDeltaPos.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleDeltaPos.CommandState"/>
		END_VAR;
				//! <Function Comment="Offset position coupling with a LREAL value (for MoveType=_JERK_PROFILE only)&#13;&#10;" Name="CoupleDeltaPosExtended"/>
	FUNCTION VIRTUAL GLOBAL CoupleDeltaPosExtended
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="CoupleDeltaPosExtended.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="CoupleDeltaPosExtended.MaxAcc"/>
			DeltaPos 	: ^LREAL;			//! <Variable Comment="Pointer to the position difference value of the master axis (LREAL) [internal units]" Name="CoupleDeltaPosExtended.DeltaPos"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CoupleDeltaPosExtended.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="CoupleDeltaPosExtended.CommandState"/>
		END_VAR;
				//! <Function Comment="Change coupling parameters" Name="ChangeCoupleSettings"/>
	FUNCTION VIRTUAL GLOBAL ChangeCoupleSettings
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed of the axis for this movement [Application units / s]" Name="ChangeCoupleSettings.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum axis acceleration / deceleration [Application units / s² ]" Name="ChangeCoupleSettings.MaxAcc"/>
			DeltaPos 	: DINT;			//! <Variable Comment="Position difference between the master axis and the slave axis [internal units]" Name="ChangeCoupleSettings.DeltaPos"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="ChangeCoupleSettings.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="ChangeCoupleSettings.GearDiv"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximum jerk of the axis for this movement [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="ChangeCoupleSettings.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="ChangeCoupleSettings.CommandState"/>
		END_VAR;
				//! <Function Comment="This method is used to set internal or external position" Name="SetPosition"/>
	FUNCTION VIRTUAL GLOBAL SetPosition
		VAR_INPUT
			Mode 	: _LMCAXIS_SETPOSITION;			//! <Variable Comment="Type of the position value" Name="SetPosition.Mode"/>
			Position 	: DINT;			//! <Variable Comment="Position value, depending on the parameter mode the units are either application units or internal units." Name="SetPosition.Position"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="SetPosition.CommandState"/>
		END_VAR;
				//! <Function Comment="Sets the software parameters" Name="SetParameter"/>
	FUNCTION VIRTUAL GLOBAL SetParameter
		VAR_INPUT
			ParNr 	: _LMCAXIS_SETPARAMETER;			//! <Variable Comment="Parameter number" Name="SetParameter.ParNr"/>
			Value 	: DINT;			//! <Variable Comment="New value" Name="SetParameter.Value"/>
			mode 	: DINT;			//! <Variable Comment="For further information about the mode see the documentation of the class _LMCAxis" Name="SetParameter.mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="SetParameter.CommandState"/>
		END_VAR;
				//! <Function Comment="Set software end position." Name="SetSWEndPos"/>
	FUNCTION VIRTUAL GLOBAL SetSWEndPos
		VAR_INPUT
			Mode 	: _LMCAXIS_SETSWENDPOS;			//! <Variable Comment="Type of the end position value" Name="SetSWEndPos.Mode"/>
			Position 	: DINT;			//! <Variable Comment="Value for the corresponding SW end position. Depending on the parameter mode the units are either application units or internal units." Name="SetSWEndPos.Position"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="SetSWEndPos.CommandState"/>
		END_VAR;
				//! <Function Comment="Sets server values" Name="SetAdjustment"/>
	FUNCTION VIRTUAL GLOBAL SetAdjustment
		VAR_INPUT
			No 	: _LMCAXIS_SETSERVER;			//! <Variable Comment="Server-ID" Name="SetAdjustment.No"/>
			Value 	: DINT;			//! <Variable Comment="desired server value" Name="SetAdjustment.Value"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="0 --&gt; Value was not accepted&#13;&#10;Possible Causes: - Value does not exist&#13;&#10;                 - Controller is enabled&#13;&#10;1 --&gt; Value has been accepted" Name="SetAdjustment.CommandState"/>
		END_VAR;
				//! <Function Comment="Returns axis position depending on the selected mode" Name="ReadPosition"/>
	FUNCTION VIRTUAL GLOBAL ReadPosition
		VAR_INPUT
			Mode 	: _LMCAXIS_READPOS;			//! <Variable Comment="Type of the position that should be read" Name="ReadPosition.Mode"/>
		END_VAR
		VAR_OUTPUT
			Position 	: DINT;			//! <Variable Comment="Internal position of the axis depending on the selected mode" Name="ReadPosition.Position"/>
		END_VAR;
				//! <Function Comment="Reads the axis velocity" Name="ReadVelocity"/>
	FUNCTION VIRTUAL GLOBAL ReadVelocity
		VAR_INPUT
			Mode 	: _LMCAXIS_READVELOCITY;			//! <Variable Comment="Type of the axis velocity that should be read" Name="ReadVelocity.Mode"/>
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;			//! <Variable Comment="Axis velocity depending on the selected mode" Name="ReadVelocity.Result"/>
		END_VAR;
				//! <Function Comment="Reads the software parameters." Name="ReadParameter"/>
	FUNCTION VIRTUAL GLOBAL ReadParameter
		VAR_INPUT
			ParNr 	: _LMCAXIS_READPARAMETER;			//! <Variable Comment="Parameter number" Name="ReadParameter.ParNr"/>
			mode 	: DINT;			//! <Variable Comment="Valid for paramters LMCAXIS_PAR_RD_V_MAX, LMCAXIS_PAR_RD_A_MAX, LMCAXIS_PAR_RD_REFPOS&#13;&#10;0 --&gt; Value is returned in [Application units]&#13;&#10;1 --&gt; Value is returned in [Internal units]" Name="ReadParameter.mode"/>
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;			//! <Variable Comment="Software parameter" Name="ReadParameter.Result"/>
		END_VAR;
				//! <Function Comment="Reads software parameters with floating point result." Name="ReadParameterLREAL"/>
	FUNCTION VIRTUAL GLOBAL ReadParameterLREAL
		VAR_INPUT
			ParNo 	: _LMCAXIS_READPARAMETER_LREAL;			//! <Variable Comment="parameter number" Name="ReadParameterLREAL.ParNo"/>
			mode 	: DINT;			//! <Variable Comment="sub parameter number" Name="ReadParameterLREAL.mode"/>
		END_VAR
		VAR_OUTPUT
			Result 	: LREAL;			//! <Variable Comment="software parameter" Name="ReadParameterLREAL.Result"/>
		END_VAR;
				//! <Function Comment="This method reads the software end position" Name="ReadSWEndPos"/>
	FUNCTION VIRTUAL GLOBAL ReadSWEndPos
		VAR_INPUT
			Mode 	: _LMCAXIS_READSWENDPOS;			//! <Variable Comment="0 --&gt; Maximum SW end position with cResolution_Fact [Application units]&#13;&#10;1 --&gt; Minimum SW end position with cResolution_Fact [Application units]&#13;&#10;2 --&gt; Maximum SW software end position without cResolution_Fact [Internal units]&#13;&#10;3 --&gt; Minimum SW software end position without cResolution_Fact [Internal units]" Name="ReadSWEndPos.Mode"/>
		END_VAR
		VAR_OUTPUT
			Position 	: DINT;			//! <Variable Comment="Software end position Depending on the mode, either application units or internal units" Name="ReadSWEndPos.Position"/>
		END_VAR;
				//! <Function Comment="Provides the actual profile status." Name="ReadAxisError"/>
	FUNCTION VIRTUAL GLOBAL ReadAxisError
		VAR_OUTPUT
			AxisErrorInfo 	: _LMCAXIS_ERROR;			//! <Variable Comment="Profile status of the axis" Name="ReadAxisError.AxisErrorInfo"/>
		END_VAR;
				//! <Function Comment="Provides the actual axis status." Name="ReadAxisStatus"/>
	FUNCTION VIRTUAL GLOBAL ReadAxisStatus
		VAR_OUTPUT
			Status 	: _LMCAXIS_STATUS;			//! <Variable Comment="Status flags of the axis" Name="ReadAxisStatus.Status"/>
		END_VAR;
				//! <Function Comment="Purveys a pointer to the master structure" Name="ReadMasterInfo"/>
	FUNCTION VIRTUAL GLOBAL ReadMasterInfo
		VAR_INPUT
			usDelay 	: USINT := 0;			//! <Variable Comment="delay of the Master" Name="ReadMasterInfo.usDelay"/>
		END_VAR
		VAR_OUTPUT
			MasterPtr 	: ^MasterStruct;			//! <Variable Comment="Pointer to the master structure" Name="ReadMasterInfo.MasterPtr"/>
		END_VAR;
				//! <Function Comment="For internal use only." Name="ReadUserData"/>
	FUNCTION VIRTUAL GLOBAL ReadUserData
		VAR_INPUT
			index 	: DINT;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SetUserData
		VAR_INPUT
			index 	: DINT;
			value 	: DINT;
			mode 	: DINT;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
				//! <Function Comment="Calculate the duration of a movement" Name="CalcMovingTime"/>
	FUNCTION VIRTUAL GLOBAL CalcMovingTime
		VAR_INPUT
			StartPos 	: DINT;			//! <Variable Comment="Start-position [Application units]" Name="CalcMovingTime.StartPos"/>
			EndPos 	: DINT;			//! <Variable Comment="End-position [Application units]" Name="CalcMovingTime.EndPos"/>
			Vstart 	: DINT;			//! <Variable Comment="Start-velocity [Application units / s]" Name="CalcMovingTime.Vstart"/>
			Vende 	: DINT;			//! <Variable Comment="End-velocity [Application units / s]" Name="CalcMovingTime.Vende"/>
			Accel 	: DINT;			//! <Variable Comment="Maximal allowed acceleration [Application units / s²]" Name="CalcMovingTime.Accel"/>
			Decel 	: DINT;			//! <Variable Comment="Maximal allowed deceleration [Application units / s²]" Name="CalcMovingTime.Decel"/>
			Vmax 	: DINT;			//! <Variable Comment="Maximal allowed velocity [Application units / s]" Name="CalcMovingTime.Vmax"/>
			pMovingTime 	: ^UDINT;			//! <Variable Comment="Pointer to the calculated result [Milliseconds]." Name="CalcMovingTime.pMovingTime"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="Maximal allowed jerk [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CalcMovingTime.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CalcState 	: _LMCAXIS_MOVINGTIMEERROR;			//! <Variable Comment="State of the calculation.&#13;&#10;0 -&gt; no error occured&#13;&#10;1 ... 19 -&gt; errorcodes" Name="CalcMovingTime.CalcState"/>
		END_VAR;
				//! <Function Comment="Activate or deactivate the modus &quot;FOLLOW_LMCAXIS&quot;&#13;&#10;See description of the server &quot;Control&quot;" Name="SetFollowMode"/>
	FUNCTION VIRTUAL GLOBAL SetFollowMode
		VAR_INPUT
			Mode 	: _LMCAXIS_FOLLOW_MODE;			//! <Variable Comment="Mode = DEACTIVATE_FOLLOW_MODE -&gt; deactive the status &quot;FOLLOW_LMCAXIS&quot;&#13;&#10;Mode = ACTIVATE_FOLLOW_MODE   -&gt;   active the status &quot;FOLLOW_LMCAXIS&quot;" Name="SetFollowMode.Mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis" Name="SetFollowMode.CommandState"/>
		END_VAR;
				//! <Function Comment="Reset all axis errors" Name="QuitError"/>
	FUNCTION VIRTUAL GLOBAL QuitError;
				//! <Function Comment="Calculates the maximal possible slavepath for coupling by the function: &quot;CoupleGearPolynom&quot;" Name="CalcMaxSlavePath"/>
	FUNCTION VIRTUAL GLOBAL CalcMaxSlavePath
		VAR_INPUT
			MaxVel 	: DINT;			//! <Variable Comment="Maximum speed [Application units / s]" Name="CalcMaxSlavePath.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="Maximum acceleration [application units / s²]" Name="CalcMaxSlavePath.MaxAcc"/>
			pMaster 	: ^MasterStruct;			//! <Variable Comment="pointer to the master axis information. use method ReadMasterInfo()" Name="CalcMaxSlavePath.pMaster"/>
			GearMul 	: DINT;			//! <Variable Comment="Multiplier for the gear ratio" Name="CalcMaxSlavePath.GearMul"/>
			GearDiv 	: DINT;			//! <Variable Comment="Divisor for the gear ratio" Name="CalcMaxSlavePath.GearDiv"/>
			sMaster 	: DINT;			//! <Variable Comment="Distance coupled by the master" Name="CalcMaxSlavePath.sMaster"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximal allowed jerk [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CalcMaxSlavePath.MaxJerk"/>
		END_VAR
		VAR_OUTPUT
			MaxSlavePath 	: DINT;			//! <Variable Comment="Maximal possible slave path for successful coupling by the function &quot;CoupleGearPolynom&quot;" Name="CalcMaxSlavePath.MaxSlavePath"/>
		END_VAR;
				//! <Function Comment="Calculates the internal position in application units&#13;&#10;of the input parameter" Name="CalcExtToAppliPos"/>
	FUNCTION VIRTUAL GLOBAL CalcExtToAppliPos
		VAR_INPUT
			Param 	: DINT;			//! <Variable Comment="position to be converted" Name="CalcExtToAppliPos.Param"/>
		END_VAR
		VAR_OUTPUT
			OutParam 	: DINT;			//! <Variable Comment="internal position in application units" Name="CalcExtToAppliPos.OutParam"/>
		END_VAR;
				//! <Function Comment="Is used to stop the axis." Name="User_Kill"/>
	FUNCTION VIRTUAL User_Kill
		VAR_OUTPUT
			ret_code 	: iprStates;
		END_VAR;
				//! <Function Comment="Computes the distance, which will be covered until a new target velocity is reached." Name="CalcSpeedChangePath"/>
	FUNCTION VIRTUAL GLOBAL CalcSpeedChangePath
		VAR_INPUT
			NewVel 	: DINT;			//! <Variable Comment="new target velocity [application units / sec]" Name="CalcSpeedChangePath.NewVel"/>
			MaxAccel 	: DINT := 0;			//! <Variable Comment="maximal acceleration [application units / sec^2]" Name="CalcSpeedChangePath.MaxAccel"/>
			MaxDecel 	: DINT := 0;			//! <Variable Comment="maximal deceleration [application units / sec^2]&#13;&#10;In the case of _RAMP_Profile, 1,25 times the deceleration is used for calculation. " Name="CalcSpeedChangePath.MaxDecel"/>
			MaxJerk 	: DINT := 0;			//! <Variable Comment="Maximal jerk [Application units / sec^3 / 1000] (for MoveType=_JERK_PROFILE only)" Name="CalcSpeedChangePath.MaxJerk"/>
			NextTick 	: USINT := 0;			//! <Variable Comment="If this parameter is 0, the speed change path is calculation from the actual tick.&#13;&#10;If this parameter is not 0, the speed change path is calculated from the subsequent tick (1 tick in the future).&#13;&#10;This parameter is only available for MoveType = _JERK_PROFILE." Name="CalcSpeedChangePath.NextTick"/>
		END_VAR
		VAR_OUTPUT
			DeltaPos 	: DINT;			//! <Variable Comment="distance, which is covered until we reach the new velocity. [application units]" Name="CalcSpeedChangePath.DeltaPos"/>
		END_VAR;
				//! <Function Comment="This method allows the user to change the move settings (limits) of an active move command.&#13;&#10;The change in settings can also be activated for a specified distance, after the distance has been travelled, the previous settings are restored." Name="ChangeMoveSettings"/>
	FUNCTION VIRTUAL GLOBAL ChangeMoveSettings
		VAR_INPUT
			MaxVel 	: UDINT;			//! <Variable Comment="This input variable is used to set the Velocity Limit of the active Move Command:&#13;&#10;&#13;&#10;Possible Values:&#13;&#10;Mode = 0&#13;&#10;Percentage reduction of the actual speed limit.&#13;&#10;(1000 = 100.0%)&#13;&#10;&#13;&#10;Mode = 1&#13;&#10;Velocity Limit in Application Units / Sec." Name="ChangeMoveSettings.MaxVel"/>
			MaxAcc 	: DINT;			//! <Variable Comment="This input variable is used to set the Acceleration Limit of the active Move Command in Application Units / s².&#13;&#10;&#13;&#10;Possible Values:&#13;&#10;MaxAcc &gt; 0 - The new limit is activated.&#13;&#10;MaxAcc = 0 - The actual value is taken as the new Limit.&#13;&#10;MaxAcc &lt; 0 - The acceleration limit is not changed." Name="ChangeMoveSettings.MaxAcc"/>
			MaxDec 	: DINT;			//! <Variable Comment="This input variable is used to set the Deceleration Limit of the active Move Command in Application Units / s².&#13;&#10;&#13;&#10;Possible Values:&#13;&#10;MaxDec &gt; 0 - The new limit is activated.&#13;&#10;MaxDec = 0 - The actual value is taken as the new Limit.&#13;&#10;MaxDec &lt; 0 - The Deceleration limit is not changed." Name="ChangeMoveSettings.MaxDec"/>
			Dist 	: DINT;			//! <Variable Comment="This input variable can be used to supply a distance over which the new limits must be effective, after the axis has travelled this distance, the old limits are effective.&#13;&#10;&#13;&#10;Possible Values:&#13;&#10;Dist &gt; 0 - The distance is limit is observed.&#13;&#10;Dist = 0 - The distance is limit is ignored." Name="ChangeMoveSettings.Dist"/>
			Modus 	: DINT := 0;			//! <Variable Comment="This input variable allows the user to specify the velocity limit in either Per Mill or Application Units / s.&#13;&#10;See the description of MaxVel for further information.&#13;&#10;&#13;&#10;Possible Values:&#13;&#10;Modus=0 - MaxVel is specified as per mill of the active maximal velocity (1000 = 100.0%)&#13;&#10;Modus=1 - MaxVel is specified as velocity [application units / sec]" Name="ChangeMoveSettings.Modus"/>
			Jerk 	: DINT := 0;			//! <Variable Comment="This input variable is used to set the Jerk of the active Move Command in Application Units / s^3.&#13;&#10;&#13;&#10;Possible Values:&#13;&#10;Jerk &gt; 0 - The new Jerk setting is activated.&#13;&#10;Jerk &lt;= 0 - The Jerk setting is not changed." Name="ChangeMoveSettings.Jerk"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="The retcode specifies the status of the command.&#13;&#10;&#13;&#10;Possible values are:&#13;&#10;&lt;&gt; 0 - An Error Occurred. (See flags for further details)&#13;&#10;= 0 - No Error Occurred." Name="ChangeMoveSettings.CommandState"/>
		END_VAR;
				//! <Function Comment="This method delivers 0 until a special point is reached defined by used mode and value.&#13;&#10;Can be used to trigger external actions previous depending on the movement to cancel out delays or similar things." Name="GetPosInfoBeforeRampDown"/>
	FUNCTION VIRTUAL GLOBAL GetPosInfoBeforeRampDown
		VAR_INPUT
			Mode 	: _LMCAXIS_POSINFOMODE;			//! <Variable Comment=" 0 ... time&#13;&#10; 1 ... distance" Name="GetPosInfoBeforeRampDown.Mode"/>
			Value 	: DINT;			//! <Variable Comment="Value of time [Milliseconds], or distance [Application units]" Name="GetPosInfoBeforeRampDown.Value"/>
		END_VAR
		VAR_OUTPUT
			RetValue 	: DINT;			//! <Variable Comment=" 0 ... point not reached&#13;&#10; 1 ... point reached" Name="GetPosInfoBeforeRampDown.RetValue"/>
		END_VAR;
				//! <Function Comment="Method to receive safety settings from the hardware axis. The method allows to directly read data, which are safety specific from the hardware." Name="GetSafetyState"/>
	FUNCTION VIRTUAL GLOBAL GetSafetyState
		VAR_INPUT
			Parameter 	: t_e_LMCAXIS_GETSAFETYPARAMETER;			//! <Variable Comment="The parameter defines which safety data should be read from the hardware. See the description of the ENUM values of the connected type." Name="GetSafetyState.Parameter"/>
			pPara1 	: ^DINT;			//! <Variable Comment="First return value of the read safety data from the drive. See the comment or description of the used ENUM entry to see the details which value is returned." Name="GetSafetyState.pPara1"/>
			pPara2 	: ^DINT;			//! <Variable Comment="Second return value of the read safety data from the drive. See the comment or description of the used ENUM entry to see the details which value is returned." Name="GetSafetyState.pPara2"/>
			pPara3 	: ^DINT;			//! <Variable Comment="Third return value of the read safety data from the drive. See the comment or description of the used ENUM entry to see the details which value is returned." Name="GetSafetyState.pPara3"/>
			pPara4 	: ^DINT;			//! <Variable Comment="Fourth return value of the read safety data from the drive. See the comment or description of the used ENUM entry to see the details which value is returned." Name="GetSafetyState.pPara4"/>
			Mode 	: DINT;			//! <Variable Comment="Additional input parameter to define the specific request for the given input parameter. See the description of the ENUM entry which modes are available for the choosen parameter." Name="GetSafetyState.Mode"/>
		END_VAR
		VAR_OUTPUT
			QueryState 	: iprStates;			//! <Variable Comment="Return value of the command. The query state marks if the returned values are already valid or reading of the value is still ongoing or failed.&#13;&#10;READY ... the returned values are valid and the read request is finished. It is possible to trigger a new read command afterwards.&#13;&#10;ERROR ... reading the requested data failed. The values on the return parameters are not valid.&#13;&#10;BUSY ... reading the requested data is still ongoing. Keep calling the method to read the desired data." Name="GetSafetyState.QueryState"/>
		END_VAR;
				//! <Function Comment="Calculates the correct start position of a slave axis for cam coupling from the master position and the cam. [application units]" Name="ReadSlavePosCam"/>
	FUNCTION VIRTUAL GLOBAL ReadSlavePosCam
		VAR_INPUT
			MasterPos 	: DINT;			//! <Variable Comment="Position of the master axis in internal units of the master axis." Name="ReadSlavePosCam.MasterPos"/>
			DeltaPosMaster 	: DINT;			//! <Variable Comment="Position offset in the master axis of the cam definition [CAM Master units].&#13;&#10;Added to the master axis position before searching the table." Name="ReadSlavePosCam.DeltaPosMaster"/>
			GearMulMaster 	: DINT;			//! <Variable Comment="Numerator of the master axis scale factor." Name="ReadSlavePosCam.GearMulMaster"/>
			GearDivMaster 	: DINT;			//! <Variable Comment="Denominator of the master axis scale factor." Name="ReadSlavePosCam.GearDivMaster"/>
			Modulo 	: DINT;			//! <Variable Comment="Modulo value of the master.&#13;&#10;If the master is no modulo axis, then set Modulo=0." Name="ReadSlavePosCam.Modulo"/>
			GearMulSlave 	: DINT;			//! <Variable Comment="Numerator of the slave axis scale factor.&#13;&#10;The scale factor is used on the slave value of the cam table." Name="ReadSlavePosCam.GearMulSlave"/>
			GearDivSlave 	: DINT;			//! <Variable Comment="Denominator of the slave axis scale factor.&#13;&#10;The scale factor is used on the slave value of the cam table." Name="ReadSlavePosCam.GearDivSlave"/>
			OffsetSlave 	: DINT;			//! <Variable Comment="Position offset in the slave axis of the cam definition [Internal units].&#13;&#10;Added to the slave value of the cam table." Name="ReadSlavePosCam.OffsetSlave"/>
			pCurveTable 	: DINT;			//! <Variable Comment="Pointer to the cam table casted to DINT.&#13;&#10;Use the ClassSvr.Read()-method of the class, which has been generated by the Lasal CAM Designer." Name="ReadSlavePosCam.pCurveTable"/>
		END_VAR
		VAR_OUTPUT
			SlavePos 	: DINT;			//! <Variable Comment="Position of the slave axis from the cam table [application units]" Name="ReadSlavePosCam.SlavePos"/>
		END_VAR;
				//! <Function Comment="Set or delete a dynamic software end position for this axis" Name="SetDynSwEndPos"/>
	FUNCTION VIRTUAL GLOBAL SetDynSwEndPos
		VAR_INPUT
			pSWEndPos 	: ^DINT;			//! <Variable Comment="Pointer to the dynamic SW end position.&#13;&#10;To delete a dynamic SW end position set this pointer to NIL." Name="SetDynSwEndPos.pSWEndPos"/>
			Mode 	: _LMC_DYN_SWLIMITS;			//! <Variable Comment="Choose maximum or minimum dynamic position" Name="SetDynSwEndPos.Mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Status flags of the axis." Name="SetDynSwEndPos.CommandState"/>
		END_VAR;
				//! <Function Comment="Method to send safety settings to the hardware axis. The method allows to directly send commands, which are safety specific to the hardware." Name="SetSafetyState"/>
	FUNCTION VIRTUAL GLOBAL SetSafetyState
		VAR_INPUT
			Parameter 	: t_e_LMCAXIS_SETSAFETYPARAMETER;			//! <Variable Comment="The parameter defines which safety command should be sent to the hardware. See the description of the ENUM values of the connected type." Name="SetSafetyState.Parameter"/>
			Mode 	: DINT;			//! <Variable Comment="Additional parameter to alter the command defined by the parameter. See the documentation and type description of the parameter to see options offered by &quot;Mode&quot;." Name="SetSafetyState.Mode"/>
		END_VAR
		VAR_OUTPUT
			CommandState 	: _LMCAXIS_CMDERROR;			//! <Variable Comment="Returns if the request was successul:&#13;&#10;CommandState = 0 ... No error, command successful&#13;&#10;CommandState.GlobalError = 1 ... Command failed (CommandState &lt;&gt; 0)." Name="SetSafetyState.CommandState"/>
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Control::GetState
		VAR_INPUT
			pPara 	: ^CmdStruct;
			pResult 	: ^results;
		END_VAR
		VAR_OUTPUT
			ret_code 	: iprStates;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Control::Kill
		VAR_OUTPUT
			ret_code (EAX) 	: iprStates;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Control::NewInst
		VAR_INPUT
			pPara 	: ^CmdStruct;
			pResult 	: ^results;
		END_VAR
		VAR_OUTPUT
			ret_code 	: iprStates;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _AxisBase::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__AXISBASE
1$UINT, 58$UINT, (SIZEOF(::_AxisBase))$UINT, 
2$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1047453148), "_AxisBase", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_AxisBase.Control.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(3533623889), "Control", 
(::_AxisBase.AxisStatus.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1169018451), "AxisStatus", 
//Clients:
END_FUNCTION


#define USER_CNT__AxisBase 54

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__AxisBase] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _AxisBase::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__AxisBase, pCmd := #vmt.CmdTable);
	vmt.CmdTable.GetState		:= #GetState();
	vmt.CmdTable.Kill		:= #Kill();
	vmt.CmdTable.NewInstr		:= #NewInst();
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.RtWork		:= #RtWork();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #PowerOn();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #PowerOff();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #MoveHand();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #MoveEndless();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[5]		:= #MoveAbsolute();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[6]		:= #MoveShortestWay();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[7]		:= #MoveReference();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[8]		:= #MoveRelative();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[9]		:= #StopMove();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[10]		:= #QuickStop();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[11]		:= #TuneAxis();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[12]		:= #InPosition();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[13]		:= #CoupleGearAbsolute();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[14]		:= #CoupleGearRelative();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[15]		:= #CoupleGearVelocity();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[16]		:= #CoupleCAM();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[17]		:= #CoupleCurveTab();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[18]		:= #CoupleGearPolynom();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[19]		:= #CoupleProfilePos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[20]		:= #CoupleProfilePosExtended();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[21]		:= #CoupleAdditivePosDiff();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[22]		:= #CoupleUserPos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[23]		:= #CoupleUserPosExtended();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[24]		:= #CoupleDeltaPos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[25]		:= #CoupleDeltaPosExtended();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[26]		:= #ChangeCoupleSettings();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[27]		:= #SetPosition();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[28]		:= #SetParameter();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[29]		:= #SetSWEndPos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[30]		:= #SetAdjustment();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[31]		:= #ReadPosition();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[32]		:= #ReadVelocity();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[33]		:= #ReadParameter();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[34]		:= #ReadParameterLREAL();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[35]		:= #ReadSWEndPos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[36]		:= #ReadAxisError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[37]		:= #ReadAxisStatus();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[38]		:= #ReadMasterInfo();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[39]		:= #ReadUserData();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[40]		:= #SetUserData();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[41]		:= #CalcMovingTime();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[42]		:= #SetFollowMode();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[43]		:= #QuitError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[44]		:= #CalcMaxSlavePath();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[45]		:= #CalcExtToAppliPos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[46]		:= #User_Kill();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[47]		:= #CalcSpeedChangePath();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[48]		:= #ChangeMoveSettings();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[49]		:= #GetPosInfoBeforeRampDown();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[50]		:= #GetSafetyState();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[51]		:= #ReadSlavePosCam();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[52]		:= #SetDynSwEndPos();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[53]		:= #SetSafetyState();

#pragma warning (default : 74)
	Control.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Control.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//{{LSL_ENCRYPTION 16#800
F6488DA8F342212FF2412A957A14F9957B1CFBADA104B09EBB4E22E9093505AC569DF3E5BCF2A9C67B10A1D89FB228AFF0FD7F495FC9F3CD67347B909EA23A9329893F3C27392DD5B26E2856B283B706262C264307B112E1C64BFD5727AA93527BDA4008
C2D3F4977966D5E791779A2817EE032DD0E9F3B25A396364FFC32304B684B6370AFC8D1A4EE3CD14F9F6DCAEDEFDFC83AEBA758DA7FEAECC9B2D248C242C40D5B1A67E74D10FBBCE93EA8CB025DEFFF60FEBDB72A875C4406D9E5623E539E6905BE31017
6F9EDE1A8F8EAA8CB053456BFC97CA1D42BF2AE82D835F55A1E34402337E651E9B2F7BC5900E6A01C573F52F2F7FC43C1E20B56F70685EC73F546B9300E14B82090E2343F15A31A40C060CBBBC4C6FF0ADF200067D26008D9B7F58A20CA6836575E4F51B
D5E7DAB829A1EA8B3D97880CB5AD896C08E0E48C75086B1A93F665E67D1BC909757CD5938CFE4240B51C4C8E530C0639248DBCC1DE0418D11694E2929752DA46C78C5B5AD312B1941CD47C54AC6090709AE3013BAD4AE67B8841B8DA7F3B303EE455EAB4
3091173E3A8ADF4A80F6B93664E0519669CCADF048B92539FE535389B93E7F8A014084F73B9BBEE90E8C8D726AF2CD8F80038B4C95C3825EAB4151F6A8542B1CD13DF65ADD665631CCEDA6020373DF6BCF209C1E44AC6B3E55A731242ACD67D9823E9758
D27E7EB482D382578FE09E2B2DF0076D6CA4F4B8EC682E7CC130499A0470087913251C3520BA433433B6217845F0443E924D29295FA4D3A3DB28C4AB4AEE6AC99C36AD292651B0F7D90C186A3A4EE1624D832C03085FF7840E52B943BE47E16CD19A3F1C
EFAB18A6331C2341D8513FDAAAD423CE55670183609CB03461B9183333CB9126F01B4FE33DC2608D65728F6582886D21D5904EEFF41648033BF5264FBACAF23FEB2B56B99EFC070C5D98F7C4CAFA677A3111113952324BAF0B7B2C20DC42F2A5921CFD0F
EC5A8AAD06B48EC42E4D4B41066B830032AA92645F74A5C4059C3D675ECDCA4190B671CB6A16A1AF9AFCE94097124F35953E9471167DAF90B4AC670223E130F17621E4BD4E92F83050619E2B48EC5F8D39744D7A08B4819B01E5686F1B8712CCEBE19802
264713C19B1FE50556A0D73DDB6C5B33065C51CA5709E9633F3A9B24331CD1B9A2BABF82825979786629005A0E7A37815C3A9B58AA59166844B1F3B7460B9BBF3FBDE94C9B527C0BCA0228E7B742FAC0F685C61120558B1EAAD9747DA6C3C3A3DA1A9B72
9D20F179410EC1D00F66750C323B73CB28A585FB530F5FF2B592BF1445A8162676083B82FF1C7C120435B9E278B23461CCD6CD070BF9B8430D0D9C2F33DABFA09FD93CCC669227A9F434FA2402D88670E40092CA6706F60022623F3296DB4344F34B34CE
BAB96311AE6BB6EFBBC8A7B2C6EBC8A17DEDE43879D032D3C3460F6B5A5800A9C2261B3C2A321E4FCF730F2D30F08770395B7F07D7AA2CA9C1E913B09F770E3ADC29FFC476FD4C4C8A4083ECA7D6A735786298B05F09869FE0164D047FF22FF46E6E77A3
01FFFB2E65A1D631A83F0318A1A42C19293499C7E001E7F4F2C5A62A38FA20BB45D2822CB980E2C5B05DA0D54604A279C3008622B873B827F46048ABB4858DA7623A23599A0D61832F1A7829B32ACB91E3D9E8933FC736FA23AC76A4DA4D5CB56615D782
551A252D7BCCCCD5AB9EBF6BBAFE4E7D119685E1F22221BCE9014AC311201BBE3E7E693943B34F93F8CEC3101026E1E8605F70BAE5FC4B59C5841868533AB06355BA42E3C4699FFA82DAC466B5EC7BB81807501021415FC866A338C6F48B0A6BFE2F8C96
7D3495309773AE03E8C8BD88E42D9207503803ED4038BEFD998CDA7D94D6D659A3EE90D9D1D3696EDF8D0A6AC11FA31EC9B2BB5852B965E64BC93C7F5DCCBBC7829E39D57386D9ACC591D96A4124BB31876B1DF80DBD4E7DB411DE35A8FD57591CD9D5CD
14DE7F7D62F3CFF831BDB517FB07FD02ACB74557B43FF5871C761490CB9BF62849AF4C041868A160DF58F12333336E27FB56CBCF0B02894DC2618D7D00681C7A8E09807B20AD0C1EF8A101EE8BFAC5B4CB8F79AEAA7FC7808B687A8A841126B6A82AAD99
FE4F76A699ED4E5A0EE782D8322A43F68DC13C356B86511CB1CD98C5D69C0CB454045AB2294C48983E498AF4F04D3C1DCAB5115667467263203B86F41C6FEAB442A003380EA5449974F5B9599DF708E1808EEC3F305ACA569072A49539D4B1CAD44BD57B
DD4BFEDEEFF8686F303FCA2C54CA0E0F76E18D7C87A593780E0DA2E2A83A9DFFD94AF24B90E631E1C1799E0EB43D4FE4EC723157817E254BFF70298F9E45C77E6DD29C976F8D59B8E81D87C458A2BC368D7C1796A8C65EC1FAD0CA8561613956168755A1
561AEEAB34421ECAB6E9612EC254B4873466B31C313AEB576477E81F223E00D05BB21A5E6A9BFB96F03C3FCB01331266C4CFADA9268E33B626219DE982C3E90C5D1C00C8082FFF70BCED35147C76F18ADA16821B8FE69AE717ED7E7CA02ADF0BB89094E4
C1F624AB9DF32786DCE3237E4F43A85C7E97D1727297C494D71B4A9CAAA58B8000261A22C86F6BDAB2C91CB3769CBA8465EA0E9E08C2AEF154E978B8532F4204055DF29166BE88002066EBDB528672253746B9518EDB12A81EAD8A46095125504D6DCAD6
B95E13AEB4E6CC9978233829196D12BD5A0335CA21A1853A51588DF1A18CD30248C391184A69430A3852CBC4C7A19ACA2B72FB034F6284F4FBC9F6B187FEA0DA5EFA31A1B029EBC92C47914FE233203F51552A9DF7A671AFC9D9DF316C01AF2C1E9358DF
ABD1A5C61E3A42F7A42069DB1A7402B18B5E82A12EDD1E62830D732B676F29B42AC3025AA45FF0A280E49E5CC06ADA4553B6BE927C15EDCEB485147F8D9452421FEA8BD719C0175E5644A5DC8E601E4C227B1A536A27DE078E1DB1788343675AA3C56588
6F87A992F2D0DF31B8BEC8001162D2929FCE7BE51E2843FD6B2CD641514D43F6584B51F5AD581AED851CA857E934C2E7D0778562EF509630E87BB74A7F63483F4683557701564C2626E549AF4E7C70982A794D8E7F60B8847BAFAE1EBC5FE67C2FA0AC51
84D1E984EFB1A46C0E5018D1FF78CC40F1920BBA2D022796BC283F8E13A88BFAA290485AF1F422F763CCF6B98F3A0A11AE06542BC5E89B6903D64358D3DE1156D5791B52DF645FE4BFBA5B51C90C3EEABF076103EA5FF5C89EF22F8415245C4D1435533D
F90CBE3DF359AE816798B2D099A2DEB258AF1AEA873F3F26DDBEE15B0BE1C2215AAA7D2427ED32124532E58F867F6BAC8A3332D91C6AC35C294CEA97A2E35D891D8FC1559A6468A30ED9AED159A6B29831830EEC36025F7B2C3D1C5C734AB218D4F7C7D8
4A47A78DDB649718687D2D8DCB80BCE4AA5F22E1354CAB56235D38EB61154F59FD414FB8E6C0DDF87B4C5F57B1F98483902B1D6A8F8CF9C1A8D2102FE2487103DA29F5687B83023AB21F77D3C924ACD0A6C2A5CA0FB3D21B0B2A519B22A422093A68823C
DC91E12E6A5497BA9C1055998416AA7E52E0A23034A14244473AF83050B226F7C3F300705C05A523FB31FE62EF6B7D63AD6CC86A73F333B72A15C82E11369A0043B494DECEA424C2D30822E6AF43F712E3AC80B0DA2CBD0A4743294C40C621A388D5B911
390F2A005DCAEF7E39117F2C8A5F77600182991B13CDC273467A05931CE44C327FD75449A9A62005850DDBD3B5623982DB3B81C3890420E3EC5B8368D92F1C9983D9BB578AA95EF97C7CC59B27AC2DFC19F3DCF20E05D3A8A200CFF7736E9130B4C4FE22
606C53F54773E9055C0D094CCD2AEB424937410A3CF82991A2C80020254A1341B5414BA58C8C9145C1223710B3357C8F611EC0FF3133439E42AFB7F1471103C2473BDDEC408217641AA78FC5C823B99FD08A1266E251A3D7A4413E052C57537DF97D01B5
E7B223DC8A0C17232BB298B5527A7FBC6D9DE5BFBF15F9464444412FF475255BD5D860975016E0B5DB1744B92E645EE689FCAAA72625089F7B1DCAA29068706BFDD4E8261449A9014B95D70213AD596D1D93F930FB6AD2663734016C6FE8AC631E1B46F9
D6D0DAE46DDC58FEF798DF22BC1DA8324D7F0F83BA4CC4D29BA5ECE6230AC342E8135FC7D9A33ACEA9CCE2EDB80EEB41B98DAC0DD689DDEB2EF52FC8F3DFEE836396730B0852FF8F3FC0BA63865F99E2D091DEE39918BDBE118C26710F612A76A4B0528A
472717600221AFC94AD2E44AB927F48A674E218BD73ACEA47F022E1B0FA16D2BE6D67A54E8D07ADA44C349F2EFEAEDF03B2BADD97C6FA9124E260F1886246D48679E881BD715EB98BB3CF424D61E01DC5D649B4D9EE8FB4468D1E6E61221F4E85C67441C
395335949E3BAA9935DDAAAF1E66D7C62E019BEB88CC02A381636D14C14C21F2BC0B3D5FAEED6F6E46CE3207F1B1A6D71CF1165531A1A0EED9E656868879BA598F6C5AF7D57580339E3A787F3AA992545DE160B8AA81EE86EFBDF41D3B7BD032F0E312F8
8171B5E16F669417836A2406ED70EB0E41F96DD12FCE2A9695EE85854C89ABF3FC4302B9928ED31DAEE83D355E471E19AFDF1CE05098E0B151810C58C4AD54D3D8B4DAB8BA0CA84C894BCF5140BE76924274209D69F94C50187BABCFBE7A6432E6869B23
FC62B18E15534EBEEC43B1DF8299E638D51E8E759E889B842F45ADA29A72F934020FAE931BCC46C0B1B7D0691375C69EB49A6AA8E0AF95C2526F54FB8C521565AB21F4A372ED6A89AB505512F905CD3DAD0E202A6D121D108AEC2F4A920EAA899E4FC2CA
6AB43F87BD065BBB86B57B4E45BB6EF70750948FD9F94875F83F1D703A6784FB3AA9ACBA75F22EA1B3158529552AFBE02557B5B68244F00BE906225F2F107FCD1CB769B761EBD48BE91472A25AC20BCDB5D155F723A0FEF774FF8D250FECDE15B54FA49E
74C8D5EAE481C0A6BE200B3722F7398DFEB1DB753B49111E73FF4EC186CEC8A062AC8563455FC0057F4256B77ACC03F997CBEA41AF88A34326C21D5A1A3497AC2371044DF2C2C024D809339154820C274D088A1461ED2B0FF14E44B80456734DAF18F03A
B14BF1EC22711DC1D05960EA16F4DA7E96D9B7FDCBBA920111F452656EBC00148CEAC1D0D1CA5F26D728DE3E8CA786359EC1E1CD97D62E723C5A28CC1B623F867CE928B1CBACCC9698D794CDE68B1C84D0C23D22AE797CEB14A08CFC3716D1B0AA791912
EDF64289E6A4C868F51C6186DD71D9BD54AEC1AA272A22DD0BB9407BCE45B142BD4AB1F963B17FE3EC120556113982DE313AF836630E7432E14AE9CB44D06F7CED3926CF090BB254AF6E48697561E677EF47E55DC4B190304C8D2149C496DCDADBFC1060
DFF97910614E4F844AF494D94F74691344FA791281B831A6E16987EB3B1C75A95FFCDC50BD3F51A41ACB7E8A404DB8425568C006ED81581EC955AC3A6473C085D7A12A291463CCD529FE40BF37B9496F21610FAC03B8370D474CA24590DF156D717A1D68
23690683A405BD4E04C3CBA91C8D234ADBAE6A5846F201102C7E90B7B79AC5B34854B70784DFC10BA046E0209ABD0BCDB199FAFED875C7CCC08761F7926C89939BC44A3988CFDB84D0A435905C2E8044826F2C2BE83B38B24E2A59417E0349751195B844
008520305C3C822ECAE5A72B202EF4328717A0C3D1AC9807A7E943B95208EDF2D0E362DB6059F07CDC0F0819E0E736F408E509706FDC5FDF40FF31780C0CB9717A8CD872C7FD2E93494EAD3700F48353CA39F44B92B596C85D0AE94CE5F5BCE529F1410B
732A40D8600DF1A2E5EF2BDEE5A7C7CC1120F0C65A3A03DA8E57E0C7BF02393856BA60273A54EF070214ABE9F10E261922F090EA208DE460A0EC62C6FD81F348C249D5E28498D8D609F44558B43D8418F5E2D98F33354B685FB4044EB7140C8BB59FAA91
C1F06E0D915C84B5C17C3F49E4CD56B5CFDB6018099C707BB89061F094B2B7BBC5EBC3FF761F5DE8E641F2CB9D96C42DA6DEAD74B9B82CAFC46FFFF93FCDA59AEB4781A55AF9390B3E102C287216F44A60A6962EADB567FB1B2A6EF28390AA3038FC9DCC
2B8CE7E58BFA00E8A78D4381CD20F1A7CBF42B4CBFE62F96D287AB98D28812813042C05F8D0F9E8F5DFD3DF8664892EB2DB83169E2483A5EB7A7BF904B289E97370D08D59ED5BE6A75536B8AFD378F858F57CB7A2FA7D07EC516A8AC6EE0DD8B8C5C3006
A334E5814E5947858C1FD7E95FD3FCAA985FA3DC5C36B70F3B6EEC9BEDD96F18645198517912512C1633E464DE36C7B65207D9166013493894F5E632AEDE7D863B5FEF4C0AF2EDBCE86D02803A0655D5618EC007939F52440809812B4953E41D1D6E9D2C
BE58DEDBA90A0592198644BAECC0B99BDFA7344C66FAB89A64A87B6EE30DD4C8C994E4C49193418B7C070D6B6EFEDBB189DD79792CD9EC8497EEF27E6F4FD3FC4FEA6EFAE04CF967927A31833873DCC1D3D3C838C83DEBBCA51B30BBBDD5DC1E8006BD39
FC4E00BE2910FBB95DD4C44ED5696C680ED7FABCCC2C0E17F26E1B978C1A01A382807DF25FEB75AE5F2E77EA7177AA8DD42A9EF9056E9907E03E1775FDAEFC805F3FC46DBBCFDA25CDA8E6361854A54132E1D023E833337AD7338F933D3E4C4808ED66BF
262A7CD695F157AACB60195520101E59180B39C246A43B00F9CDC563BD94F7CDD5693E4A081E423FE13AC4A8DD99BC8DB0B67B0697721A780FA2C0A0F8A8BBFC78A073E6481C6E4A7A063B4363C14E4FF9F99FA1643B9A1CE2A98005A1640BE4F90DF368
1C6F8541132F9F5F141B948B40D648B07D3CF2EFC60627B668BB16A6C03AB70E2AAADE93DE83058C2D38A77D56EC301D4206BF5F911DA74603B3A76145A0BFB3A971BE5FD1283DB41FB6C570018C22AA437D5A8571772E29AC25335094275E187CE2F275
50F4B8870EF160CFD60CC6CB1A2E74CADC89CDEBFF1E8AD7940DF1B6493C5C85F02C6073C599F4C706C8666755311551F6670104062A3E7AA4B489D3E8A85615641ECAF4753D896C4619D3995016C0F3DD984479070A3EAB5E822220E22B6D749A6DE46E
F3024E420DD679687DF947A593E6C30A4743AC0E6361BBBA69E93EE65DC5C65C1960F917AD6AE4BE0CFFA6BA2CC09D0E167406416B134A66EB2184DD5D2B4FBAFB36B6655BF9B022A823A6C0BD2ECDCCD644A3E19CE0D4988CA4658B1C22DEF29645A746
DEBF38C9CA303AACF61AACDBA933C7588DD9EAFAC69F820CC250B29A08AC3A0311A00C97074103894FA199E2E72B12AC16AC20EF2E3E0E2EA8ED1084F9B8F877F643D288BFABD608FF2279E95BE0910705EBAD0F84F5EDE70BA0D4925B17F9D76CB0B8E6
58AD595D05A14919AB84C12E06FFAC0AEE3FCFF82BEB9723C3739DBF1532824471D0B33709AAA46C7E4A616EBEB858551831149357BC36D4D9C7A2AB95E0CD8757B7E0A0BB7C4826BC8FBB28A22A2DCD593FB23FAD10FA1EB72EE1FB3EC02E6D97F5C999
ECDC5A866544677299DCFAAE62A34A1C9F085636E784CDA43B1A3552F1A7DE57CBB25487468C71F6EAA7234811B5155FDDB7B4173AF13263D65106C4108F4664568646D81F07EE30C1E8BEC318988E0B103BAE03B955FAC3B96D34DB1C272C874294878B
58096376637FD02BB02F9F3DE2BED2B3D1A60D661FC090E494854D40033C1A5206AB54AC41206CBE516C2FF74DBC209017754A542DEB503C20CB3EA1F40E7BE37586C5172FC8CBACBA28457BB73A184075702AC0C166394AA45EDEC6E83722E3D3F3B5A0
9F5F749432B09A2C86BFEC720461F39501121712EB69A62FF7E31AF3BF62CA50436B7854564D8F48FE489A5BA192AB9B0F6516BB3AED90A1867E8DFE65381A4D3C33047EA10D91A1F40B29A7F2DD92D9F86C37E2E44D0D27ABB22EAE70A10DD703EA5382
7DF06CF88A854DC5F12EE40D32939CC60118F0A00A16044EF0112FB2F2D5C8879FC2F4235AB3D095FA0370E9C83330ED871FE4421C194C3279422E68C7383A49A3D5529E3FDD07DB33F51FC4A7D22EE7D954D63CE1561E33C66FC73964C5A7981A814113
86A36376AB01B37B7708705D2CC98C099A226FB9E0F6A8900D2B143D3B3E56988206CE054E039D08412BAAB8CB95D4CF5EBDE96936AF89A67CEFC327841FF1A5A4CE54056B94C1CB40B2EC9AD4E47AE9994FF3FCC8DC8362A9DE40BA474DC87A72D16D9C
247B3815B44222B03A285BF1C1BF1E4342FEC51A27B2B134D54AF45B752CE736ADB2BB4924965CA2E61CF93B442EB267F3649469E7454177037061C50B713F6B3BAD08B6E7D2C7E5C7A1E74A7666BBBF9DCB4128F23908CDB26E4610FFC1BA2A9AABAE7E
8FD0A44B90F09BF7F4EF51AC1875A3B433BFFDA2047CBD26283E0FA86EB17451EC6DA14ADA425898C4F6E4CC83F938BBFDD62B4A4688B1E65AAFA1983459435C094423DF77CFAA3B05C2D54909492CCFD644009556108E391E19E1B6C1B1CE6B99257054
4A33DBF87DBE47DC08500480FFB84D3EC13142F01183C9B438C3A23EACC6C8624A759D76EF10E433EE7CAE0B0BFDB946768AEF51BF56AFD82415B220DA6E278CB1B544F68F2ECE3D7DADC188435B0DA86AC5A6B04C47C4A5340383D9711E42D3EAB490E0
63B32B2D7E44EF0E411EEE9B8C6087B4E5CFCDED18977070C2733686D2B545E6771C58FB5ECBB6181479C95A0F9AB8E08102AD801EE0D51B12F2CF1FAA9774A5C55C746336E455E4DCDA2A4DEF2A6E3EDD86FC8D943F5ECD7DA05103460AA512977ED505
9A1CAD4E9B497ACE236F1F3022C2CB5A890BB39C5C3FDDF21E9FB523BC04992F29389DA36331FCD039BCF3A1BDA137B663FE14E836169401FD755C667BCC351F6BE3784ABBDF84F6A8C6ADC14AF9B4C3C979134F06080306191E6308DBF4628F995C4518
221F2A052611EBD7A16289B3D6CD1CE1DEC22F25BD54132A95FA7AD960984C39CA512F8DDDDF796CDB7F79B0484B3EC6CCF7EE095A7579FA9356FD96D0D9720C2BBD4E7B4AE2CB454813625B4F4C5BA9E9891AD06A0B111E68113F16CF2624369187D1A0
72970EB02E6FFAA057B36A65B5492D8434D348762CB33F660C8D0C56947E558D65A1B661D60FBC256685840A273AB342ADDCC88BEFA32A086BA458D0ECF0120569E547F26A0A4DE9488B9BF11C16B5896B9C0C4E02E09D2AFD54571994F9B3DB8B290C8B
BCFB755387D86BD6A286471978D8CA227B2183CEC1617783CC4E1DFAA13DF3101EB548A1ABA57EF6631450DA099CCF09C5DFCBCA74909BF545DD72C8136A9534A191E41F25EFA1E9C8863A546F39426514EF3CFCDF5A261FC674B98D7C9F0C6C6694FAD5
7CF75C0D32B0E93B81CB76FD3171EB245B6D06977A146A0D8726770244BDB6438EA25EBB3D25EEE813BD9FC7A05E7CEDF00BDBED0A922BA7890C7C0DD1B9EA40FDA0F07FA8F2106565E0D85440D7CC054E11B97ACE924E35F9911FCA1B80631203A93C1C
59CD697F17ED4FB8F89197F7578A5DDB2706D780D62EF1017A610581A6741731964F1FAD001CD27B8F36BEFE8199C049E79D09F95FCD15D411EA6DB92CA1FD4A08330EBB3A30EADFC65D369C0D582F1C0FEFF71B3AE312D992B5C69E3EB22662213C8293
210AD35E375D65E4618D974EC898963F8556017F4FF2FEEFC1A6B438FEB2F00AD76E42C1A2143358700C2131EC12D5C7D02D53BD8589A6D904805346B1D4B0182042573903BDB1801AC13E94C4D290A4209E0DD87AA198CBA5A836524A760FB6E55BA533
92DBE26BCE23C019F39621E1E6B44A1D557E2E17B97DCC9A2B1266E3F08A37E2D213415131250BD504FAA5EFB9FAB248A48D8B3ADE74F2FBF4A4EAD61B2310A9FD2112CAD81FE948C6DBECA71E918DFD39BCC8867A1B7EB4266DE75FE8D1D3E17D73A883
5947FF49877EA577081B611C8447DCCBCF5145428CF5120E11174B1771CDE0036DBC58B20345960F93E62E0C1F0E08000A67B4E46BEFB28625C6422753CAEDF701FB2731F033B43677930C5BBF09E43FA685EABA43DF87F14C2AC1ECC4957CB62832BE81
2073135A686CDBC0EE741C3766CF7A364CFB9DDF60ED0D535150049A475EACDD888093CE34FB111C61A8B47065320D244737CFD51F60310D660AD6FB15E17CF478D330C5B3246C1B2BE23E2133220D41CA028A502D2FFC48FFBCB61B1E98CB81BC8DD07D
852A3836CFD5F1D9AD032050A94A4E44C746B9DE71720B345B09C9C5B998069172D94F6B1E465BFD22B98197387695C912DE6D6686B351E2FB6AC9608658DA282614E83F29E6718D2D97686C8BE1AFCD68E4D052DD829E9DE0130C219316987FE767B4F8
D7A9C273F3F504E40493C4C8F57F99651B52A81CD5B42991BAA6D50F8951CB89770D146B5AE60452AAB68991E2DD27B2CFE91B98460CDF806595C465229C67E6DF515BA35744FE82EFA0B5FB30E7EF1ED08092CAC7C6CC303ADFC443A25903AFE378D8CC
C67953C00F7DA20F805EE6D04179B37249A47760FD5FFD71426C71C1E5145B0B2F29A9AA495FCC9B8A14561C71FC13CC4288D1BC838E37E3D6CD4BD204C59F792D580E4D27A30CB280AEC31E6AC8770648E8392AFCB8D9E935317B80A45A38463BDBE9B9
5B2D6255FC00E8EBCC9090C8A0E90C5BEE9ABC7708CF4A01185FD1F1CF6C4B55646DA8E5E8374DED3238E4DFE6D1340EBADFE80873F3D6D8B92F923CEF871FD5E194779264515BD8B22E55A286E0F34AB7F59BF458F6DF989328DC53EBF378DA2A20B358
0BBAF13D2AE0C6B9337F696775703EDAE8555B202B087B338D8C3727C7AD097AD1ACC34783D1FCA7BE906D3A5ACA51318BCD1ECCEADF7D8AF1C48899B2F7318BB09E48D323436B8AA0F015E60B7628A39559E2AE3C11DDA1F7EE1B85C5FA537CF5D2D5C3
0D0EB0AC5987FDDCF933F0A8DE7737B183D968342FCBE648AAFB2C4D332AC9D9A55A809D4BF9956800B993E1F087789C46D2AB063210FB118E3E9EEA0292AA7050BA605A6799D124020784C2D7599DA87C61855AABECF0C960B33BDBF80D729FEEC67AA2
276A4C775000520D793B1F4F5B7AF490148FF4515F8C3BE070D457B16534423292250CC29526AF5F7F70A3FD2633A6767D588D22B87F109A80DA27EEFCB3E2D7353971B1DF7FB510700C5FC883317A58B32904F8E64C5C5A52115773959EC77551756D8C
0369D9019528AEE214FDE7E93893AF6C6077AC24D528934B5A0BABCE58407B9C6D509561EBB1AA7DA4F8738BDEE1DFA23BE27D9E7A6AF99007421F251A89FBD63C062B30B5972BF570D356380E7ADFD7D2157A4500FAF9AB1F4B142D9E92A71CA5E92D7C
6012B3B8B1A2ED11406BC1D85D16317AE639EFD719E03DB29E5E5033C7E9FED9263212CA342D6E06F1B332A5327434D524D608D933675C51AE0FA5B3AD80DB8F115F3D2CF6FDEC0785DE9E08C2B1F9B312AC75E03773DB9A6561C4A23D5304A0A744A655
A1AFCE924D056E9BD1A91DC7211DF48A4011F1C575BF269C5E42F2951901A2244B4A01980DCEC24626FFB5C1B26A5E94E1A41ED7BBE2B1AC92AA1794E99F80D274AD2D13F65C7E59AEE9C9334715488D124D0A9D85075555D80AA0D0AF1E8E574EC46856
A56606521021666B6A6E214839C05B641764FC8330571D17E51D80E9098FF169AC456A9193C913C0CD89FAACF8A984C7BE2E4C9B2E25ED5C30D35B81B355876A0660B6892E1FD8F443FCB0E50DD49437EA53E3B0E14BA10BEDE155EA04235C162579C1F7
1FF39A6BD773AD3B96A546B3001B655B1857DDF1E64E1EE13B05745E787851F150162C3262F02626E5A4B89AF5E4CD342A373DD6DF9B9A907E5990B3A5CAFF847BBD8A7C98C38C7CB69E077E8DBC61403EB4A3D9789A6803E44DFB372519AD9C6457863E
1F927F5FA11B33F0CE5DFAC840C0179112C63AC6C1D03D3D3BFAF32D82DEE7FCCEEECCEDC1CDCEBDA0245597A98B7FF183C3AA3FB60AED998AE4AF786FA5DE642604D0818756228272D14862C9D848550D3C0EB79E828B1AEA0272359AB8A4AE15DD8B95
758144D065826B0BA240B17A2F9F06221B46D580AAB54313A3E1C7DE35994923F098AFBBD0C12F5C5625317C9E5E09E073FAD824BA2D967EC1DC5A644A30662A24FD4800A1109CE7B40A1BB38113D591B17A046494B738499D7900597B44B851033D17DD
DFA08E7337EE9B4FA17B5DAD888A3AB7DF73A46B1ABFEB7727394DE2546A192900B05E3B157F15C6F0C77FC456A1614A79B8FCB99F00BA6B64359D3A042741CE2D321A494AD064FE9EE331BEFCE2D1BA1E63FD852AD7041882B369B58D0ADBE726110254
A1D30FAE4367C421D96F9637DC766A6AE45102BBBB4506137636AA950BBB7FC03BA61ACF2D002F5171601E7DE63CC657B03E0BEF772675D7D6D7931FD8C45D58CA193B370206825931D20E6645A8585E2DC2ECB6934592B848EDEE0DDFBCAC6E8E7D0F0B
7EACC4CF83281C277F4EA7C2CAE01A78E283008902E9C45FC381FB30CD2007700E456C171B6675864065DD5F1212471EDE53928D50A8918BCFED93CEF4F4FE38B3127D8ECCDFA692B0238DB1BBCFBE0CF36CAF3185C0ADB17FBA81C5377CBB7E07551A5C
CDC8B809A76FBF0CE61F4884809AD34D9D52D0C0F07FC9E2EC4D0BD45292BA255624A506C4D5A857E836F89C6589946AA763EDB32D79DD4BD21AD11629956C910E45D0A558BBA1DF8734C80CE33ABC8EC14A1C725171AE023AC4CDC45DFCD16A45D0AA95
96FDC278FBB541146DB0B3877CC9BB64E835DB9D828302E788CD6BE9DEC7D4B308F9750EB8E9A923B0907F4C527EED0056C09E82D6F56FA5723045BDFC2094CFCC81B133984D32A9D5CA956B2E347BED1D9EA46068F7D8B27E8422E06BFC95B8307187CF
AEA66C67B30C6590A3BF62B192217D9F37D29F40B756EC9F5D754D06D731730697297D07F3B8E8F4BFA59AD50B927EF8244D1AC0414457C7B01BBE70717DEC04C1D766368DD2933ACEBDC84776225E3F6C8DA8E3A9926AE99EFDD7250DA0FC40BCE03F8D
4424F42DC127181754B11A919878A7BBDE35BD95464CE4862DADF91996A619BFF3E50556FA2B9CF3C0501CEBAF15E43943DF478E05A96245FE8A2F33DA41F7CB4EA1EF7CF0D1D8B6C93852F4C3D571BA8C13A35D24091A6B3FEAFF17746497CEFAF28471
95279DE4B9256F1B7947CB13BB53AFC398E2F96840AFB2106F6AEA53B01F2F80FF35776B48EB91FFBA7DE1EAF0BBD78BE8890CECD4041BDDA07584EF332975F0AD80C7164729027BBFD78251BC28701C94E22798B9B1695C2074293239F65DFDBEAD7D68
BEE9419D1A40205857249EB8237471619BD9DD4FE5E135A9376F8B1D714EDA653F37FA724E9D1A52B5AAC624520FFA44A5663B246D4AB2D97C073C8840C1119F0BD3F23279140600570E6B558236E6604EDE8B25BD062C31F98742E56C00FF0C510576C4
AEA3DC5331368D184F1C9314DE85C4BA0F788EB7DB0E8F8077B5583213A2AF2392F581BB5770B57E5E6AC3A950B538AC23290AAC054EC2141352CB0A0C17F576AE8FB715C7F985C124B526BF41436CC7D5DAE5916400EA8A835BC685EA312601304BF761
95F4F0A7DC55C99F33F749723B24F42D036F9C2F49982FB39DEF20A7C150E9D7F0715D369460D83135EBE7132D5AEC323DFCEA214262AA11ED018070CA0E26ACD24D24D3FC6698D366695FA70EFE7D085C8FB4DE79C6FEBAA2E58B7F5E25F44EF6947DBC
8D81B87D842F5D18EFBCB215CE0D7C10EDB5C8B2EED5E5007931E612A27558FB1B3CC9311CCB54DD871B48C1CC5E8B14C93474F02D3DACD1056C287CF5CC86363718175CE9A4B16F1F3DC6C29EF4A1C430F742C816FD764FF79F1E32318F25ACAD5B0641
C77E3C2B02F309BCE4D60F27F5BA8677A4D8EAA57A4FB8838FB3020746C5D766DD0775C8A04CF073C26E642D8A043EB873AEFA92CC6C4F0A7A403BADEB493DECE67805C9E25D3E03AE4D048C1B9BEC940B1532FD34DDCDF01AD85C11A141A57490DEC88D
6D4B557735B8024CDB2B1700F04C7E2FFD6E8B2FD7BD5EAF2C18A8DCFB2193335B26AD885903976ED07EF7EBD79E6D2FE41A2785216A4945EE7C3E7B434B33EE2088733F8C08819FACA2B08A0638467471BE67C9D578C3B14225DC7F9561E988B5C02809
30403144560DE07831221C9C23C5B203B9CD81F3C473F05163AC7087CEB3EA5AE986F9C5BB28AE54DD70CA80266795C7335A179C256A52934B2F07D4A059BCDEB53FB29C93B660D767F28BADBAAFEBD27747672C7DD305261FD2A01E63A9822B0696A9AC
30EBA89935DC41CE40CD4DD623C362DB8460BFCB81E525FA853480F3771E6971475223A3CA9642ABF085AEB34479475AF87C583A857016CAB018AF16F26452BEE2D7C7063F9783B8B42CA1BFBA92C13A54E7E611139EB01A616BA946E5A14960B725F861
2FA53465391393E8670A2F6A375AA7037EC544A3E6EF6E83AFD141D9379EB09E1E922C66094EE1933B6C2E1E68448E1953B2BE4B72A614C3109FCFC1EED8597B7CC3E1BDB4740E190425C4FCE03D0D4155544867DB717C88044C3F7549D4207703992AF4
D1B70CC598C9B49C591C64C2F858DB6042FE5AFDBCA136AAF80428C1A57A543E029659FD5BB0D24FA2F81FE2BED6760DC49AE9D5989D90DE96F158CBF1835ECD83B0B8BDEDF95F09E475E58798BB9016F93721A2D9E6D511E5DE01F8CF0CDA1A40BA9B0A
271BE9ADE6055A129D48B79D48EF9BF7C2D8A965AA31F38CDA0748B17627DF648578AC02455D6FBBB80C46FB42355CF2D40F1CB44D4E07EA96E91A854E3EEB1DEAED8639D63A573AA1F924CB7A8590829531BBA62768D697D31B5C2392A286BE3F0B294B
F96823AADACFF8EBDCFF37F671405CE90C227C108879A8A32E31BD57CBA3ABFA8B2EB3DFDFA1DF626B37A98F77BD6260C16A78E9CB6046D427FDB62A510A844C333B3EAD05CC2CD905D4BF775690FD9831CDC2240130D65B8031C6A6639DF0B0CCC82944
334BA60C9638B5FE7CF3816FDA6546F56A170221AF004EAC50222575AF257DBBEAC52BBC2D7FF1D0D25C4810F28BD800F5D3E0698887BCC28AE459A0B77CFC41141552325F640CCCAAEE218C4687C090D7C8E89E35D89A92447DAC5A31FD1DB6D6AC51F7
8CAA8AF30470C65A67315763EECD1E6690669287C465B20B1937B36FAE584E12416215C009DB4407997675E4A66EF82211141B04A4E7BE939B16C6A8E798F97AB70CC75CC333195FBB69D3E89DF3CE862D8137F0BF62BEE797BC83F8144F7392399CCEC9
2E31A8154CEA84599EDEF64717C46D37CFA7ABF79521BDB45A011B86201175C0EF904401D4FB25BB17D97B83425D102BC2FCCF0CDB11D1B79AFFAE296FFE347FB1FDA363BB3F302A6DD91EFDE596CD526FDBAC36E55824717B68DCFB839EAB1D603C4F06
BB05F033A2EC1082F3CB60C756AF91439A0FA765F77D9EC3A1ECD31C637D6214F4B64720CFAE012243867EFE7D05386764F40791D12ED9F6778803F61397F2685C7DDD90753A8DFA3DCE550C3C8166F3D08C20AEAB21C6D00EE4A19400433DD4041BFB89
372F430117127E58CA45DF18B12DAE03E8CF43D5CC9977D71B83F9415D8D10E426BB1A9019147516F793D250AC0B238E04069427E7F6664A462A071738A77D7C9B602A1B917FAFD5535694425FD9C7E54953BCD3D6300E7BD88BCF8F84C3C73122609B72
9BDFEFEF42A0AA888353B8304A3FA3EC195904FFD0F9326A1F4A37D2A432E903C408EF6EAF5CC5AB817B9B101DE7F7A7E3C8B33BC9EF852EB84C246D9E08A14AA839A855B37FD2AF92982A71D17BD4E1B995851B331190BDFA8214E89E1B21022ED2C651
2973803CA2FCCA3CF42846B1AA7C0E6DD66774CFB83EE47C21C0B343F8C63BDE823DED2C898C57CB609BF58F6E1E1B270143C3083F613A87BE822AC3C6A5A0CABFFF6A297A4B5E55E09B21F629F7BDD289A472937B9990215EC933317AE9869C2F85E943
0DA708240F5280024F95E60AE99841D3675573070B2D8362C1931F2793B0222438C47D58924579F324833DF0307A7DCA5774841FDA2FC2381CDD36419D0B791BFBE06AF57837AE28FBD9CEB821B5903D245BAA7F4B626CB08A475DBBDDFC3FD7A38635A7
6E5FDA8843955F3C7BD59EA4CD3EEA67FAFFC7559F9EBCE228109C31A69269EB2134AF75313D395045D62E95926E6E94375D5B460D4248AD3D77184B5CB5897E5FD1B9AEE7C24C81A57454B2B7C4C7993CDF70F1ACCB1BE56C964F59B82E269A87E6C3C8
D4EF047141ED8463FF517F823EBDA564F1379065F1C606CC5FAB0EEC654DC64C7C10F17A5166B791D9CA9ED87C79E7F08235CBF66EE413601FF538902EF2C8CD979640DA61748628FE38D8D737F9577CC1FFA6DADD313266ABAB8686B885503C3375D0DC
394FDCDA3C5AC220E4D66F882A3CA025276D6D127965A6652D176FFA0C0D3DF2474BE92988AE3671A1CF7AEEB3B6AA620EA46BD47E1CC5F378DC9B6D67D1CA379182FE2CF9F254BC52BCAF653DC6E98100AD02593644B063E4287C30F90431FC15BEB3A7
C429CECA6C487F80B55F23D88D6BF55FA54CE3B8175EB34C519247E81C4C84D6E320BD4DA675A0BCB3A19C371A81B51001B5A89818F9CBFCDA3870FF00FA6CDA411D14600FDA39300B1D410B73EAF6112A1C6634401AA298A41160E3B585E53E590B26E1
DF9D28E3CB009C029B5826DC1655A705AA4E4C66748E3CCDDF52F518560A72C99FB308B48F3AECCB027934394BAECAF5069AEB1F0A9DE80E23BCDB01F6939EDE1806D982B19D61CB4266E6BE75A1BDB48F676FE89C8DA954AA4BA8D521AD7EA5E03F6EC6
A559F18E2EE6BC1D213F576E0FA0C205D1A5F2750BDBEB5DD99F4F0F83D03A5F60DC6378FB65C98E115CCD530FD3BED677DF437CC32AEB2326FD68188ECFE2AA5A258506A502DB8539B83A11173E3AB9B58A47106AAFB8F4D0765AAFAA225439831901D2
30980A3C7E8240785DBA8367864ECE6C3CCBA6F875E62A587F4FD5817D08740E2A49C926A13DC6F3D77D8AB281E17FD0BAF73F40E921611573D6E6E6B2647E401375E49712F9594E472B7CE6DF8B7A04D7AFC6EB9271008B1911E2264FEE40CD65BE66F2
55BD67AE5063F673DC58F10A82C94514F6E8647261B972AB7942741B91A16A56E39B237DA92361B87F1D88121A30573E1327685687C8D8AA4B7CC6AD5C8C0D478A7EDBD89309A74A01748BBFA0DB74D5F1C47710276D250D656210F13304546091973B57
E7AAE64747C343877095EDE9E232EDF311911748D3002C4C34D56EEF4D629CD90A890BA077FBE6EFC582299EC8808F7887FB1A241C7E7A2EFC2EF246E5F4DBFA3648D739BF29B5BF2BE187302686CC742B90E04BEEB9378EAA43EB69243DFDD5C1DA0662
D6EB929AA0054762FC81DFBA63FB3642FA08E094A70CE9AFA17418C244462F0DA78010AF65D2358C583FCF2BBD4C691F645DE454C8C627C2FC171D51FB853986389C1884AE5AE983B9CEDE02E7A182C19C5C1CF58045DF263F0FC0F02301588B065742C4
9999D1941B77D3F796868BCADF83F90D80AC082212D4BBEF424D9F6E3003434BA984D4ACC3CCB71DD4DC07083D5E328EF4DE242B25B87AEA4A21ED3475461787092A1122A95D033E623F9E96A8DE01CAF124267186A7DE05E2D3F0262577EF4238982D8A
FB46028C4D0B0EE0A7EDE82E785D39C381C42AABD3028566AC48AB3BB8DCFF51C5BB793842E72B716EA07ADD52CCC42CB1CC06682673BF535EE6726BC18E9428012D5088453C4DE1E54232E0F7F65E1E8261A28266ED4EC5DFB39E3E74F9E842A29A6758
227BB6B3AC26DC70A197566932917786BAF0F1D78127E01DA074434E9E9A82ACBDD1407E2CD3EC5BDAC8D83234F64A491DBC3ED04F1302CDB086804457252B8EFB55E9F35A1B1EF022296D363D886B5898E8015E4E325D4C8CEBCBF3CB540BADC3E16FDF
C1751B2CFF5DC2E1AE5A985C19AF701C54740BA6D8ECCBA8C8E5DB27F8F25CD0C718C10B219039B06C7CB9E8B945129AE35B6333F93E61E3BE7D7F337A496F73B20D071C5CD259A9A4E9FA63E3C9588B64B508B0234093EADCC620C74CF9C5373DF4C735
5235D4D66830B38548A4339424A9CE48B8E417B869A175C6CD5104BF42D87D8D2135B23CBA6593CFF1A9719FE8380AE9BB74E68A95E0402A74BA313B31DCAE44FDD7D2C4DF4BD1672808E0DAAF51485B3D50A47AF121762814A5BEF11D7674832DE3F4C9
5A47F485DBB6F867188402BCAA3241086DA27CB4E4BF92BD933CAD2DF001CEC4298531556B8A243E1537BE4FF3FC8E248A61EC6F8712AB6C47BE8533D8CBC29B6D6AEF78ACECE6CFDF3A93754E77D5D723AFE62471521A176782D31A39CEC7F49A2C8AD4
6A87EFCAAD6F61F4DA4C60B734B9A81CEA89428CC88B6463EB92C4312672BE3BA41E69572DDE56E8FBD3600A22A4AF38C6162D5AF6A56055A4A8BF135AB4A7B1CCB53A2857D00A8372B19EF293942E30A5A33A05B9AA712678C547D02E4DBC9DA3C0A9B4
6AC7543D1D48A680FDE4D9C28E842E1685E75A1DD511534AA8B613E4C1EE0AFEEA04DDB6A5496DA4C5A4632AE4E9D6C71A1ABCD91D26D02FB3919F05A9E948A13160FF901F5432D5C84575B6E6BA60BE4A7015AAC9E04FAD03BC07E60E256904FA264D64
5E83364AED8DFA9C7E46CDDEA01EDD5D4F0336D8AC636415BECE68A59D04A94676577416B04241479D705B65D3635394FC11668F5069F6B82FF705E3F7BE72D8FC9FF959ABF795BC7957FBD02AF93011392E7D14AD8E6EA76C7F74F0A9BEC43FE4D3A506
90D42B68A1C808CBA5450D08F9A6DCA939323AE4E6F0F98F37630A2312195C9B4C2AE1CA60345F9859277B33913669080E08BAAF39A3255152EFD3D1C17AF4DC4FB08E418192A9F3692027D46B324E6554C4149D8B4B89212EFF4DC6B9C6E9F52DC56952
E22126DED6250ADAC19C24722FC48597F308BC1CBAD7C765E05749B8E035BD4A80DF9527FBA584FFED504723456005A4485999BBE46D693175378CC9C2118B1A9BDC296E5EC73DE0BAA733BCF98F42CF0760C4ADA72DD5EE48B1FC35FA74BC0C62EF45CB
31C8DAC5E9B117C961EB3A8098563CE5155C02F5CB01567226D3129367E0602FF3F571A13FD9BC507BB05563B3FE511AA41E40B21BFAA5BF1FEED114D374084A3B824320A727224D784496346817391E876A4D7C3E42A1834C886190ECAFD8940D040DE2
5A6FEE2C78A371BC5F8E1C3498633CA80873E712A59CAA0CFAAFE450E45CABBB7E0FF60205611337437D8997E703F7CD2F2A10AF38843EC97CBE2CCE6D8C30E51611A82013AF13E8F5AD1C0D1A5FD86878E3F4ABC86328EB15D85062141677F8759B0674
C5ED7A4AE4E74E6E147C829AC76420CA6B9EEC6BDF8FC04AAC48873CB8C09BEADFF80970EF3E0D2951B4BE351FD8AFE69D6F2CA18BD00362A54CA73619D68B9DA22CC9FD310EF963F10E1775EF98F66757C6DDA7DE9EAC3927D925AB5EDFFBB8031B683A
FEB821D75C5AD4171CACF40A6E524E2E1F49D44CD25E9C0BB9CC182CC47B09EE91E3E352BB65D97C0E7EE4D0055C562DF1EF182BA0C942157E25B546A2E2365E1A077682295589109DA1B7DB72B00514DD6D12C8E0B212BA69D4FA39D1AED9C6F154918F
805F5529A7B689B6AF8A1DBB34FFCD414C856EFF440485A991C20882C15A95B8E353DF1AC2B14933AEBC835DE0C1F6F8C2961F978F6E6C6B72A1A26CED32531662FA86AED8F8C0217CA4EEF51AF69B41CA096D37B71038D1E954F70D3B79ED67BEA06939
17C4340A45F93BD502DF4E77F27FD857D258EFCB9CA8551EBF0C72C1A66B06F9D8E0D9E8A39CDD2B5D7A54B85A5525952E4FB81BF56BECA918D8A270E621EA6D13942A1A7BD551C5406859D1F3BA15F8B3BD0B2B6092A52FE427586930777091914A4D8D
E3DD6201062CA14275434ABD459DE5381D53E8CA1C78D43C1EC27DDC397E78897D2B12E19E188D574A06B79C87BB74E5044B398FEA731C7D165C06C9BC9AFD5582F9E28C94498FF57F46A57A8F7C2D694254B56D557637299F0CDB4E85D0139A0536756B
B3B3FA76F4AC9B1204B484A5187E130234AAE2BDCECE8AF8FBB81616AF1D58542F7CA614A4A8D05F85E9F0F01F355162EA4026559EE15FC9CC195667320E95716B2D10DC862C90E2A0FED99F7B27229FC622B27B73191A3201B4D7B306A37A8281263763
0DBC54DA2F0AB7049E0EB9626520D5B833B525EE6ADB49708FB14400FAFCC5391B1CECF3866895DFFF2820DFE5C8651343560F39E37CD1B386DCB64909054BB5648156E96B17A77D543CECA407877F02B952908A066E5AD6E566A0ECEBD20D61995A2DB1
440D2C20F67B1F30C8D926D921BDD6A801B953EAC859EFBC8C25433D4C7C0991CD3D45787D7943FA9F13D4B1158CDD2644DBAAA348BCB32C331E8C82C1B1BD25047364D594A35B35FD1E365103DECD6BA1A455080070C25DCC2ECE2FE93D28A536D7FA5F
1DCDB49C6FBA817315873A8DF4CDEEBCA3C191889444416DAC106372EABC0F5F2F74633F2BD706C87E744B957E0196B352054B03C8D31BC13B804EF73E526D5F7AC8BF431331B00822165FC1F5D876D8A65455C63359B373A3E1BDE10EF4E81054EEB9D7
5FB4A8BFF48EA5FE3ADDCFE857F341B6A653AA22EDA54517AB725DE6D8741171174E6B3F7BCAB0492ADFADF321CECC7E332B2530A6AE3D549CC50833FD47F353D36383F350F4F2A9AB7815FBD120ACA60D2AC31FC108D1F33F68A258F44C652769721369
11DE2291DE363808BC3C52704D85B4676A68A10584EA463D1167BD543103D79AFEFD8E745B79172BB788D98DE66113211B45780A8FA0B478522E0C5642DE9784DD1043EFB5AA056980FB70F5DEDDFAB6CECD80B06FE9CB809D390A91792098F9AAB45016
92588F6E4E3D3DFCBE06E8F205905DAFDCA00F06D1557FB2B1A4A117484AE042B499D70A114257EEFF3AAA6D73DD76407AD6407D990555F5B15C7DEE5B9BBDA254CC8C0C373986DCFD6A122187209273ADB49CE8A353D3D68F744D2F2482D8E0556EE6BA
FDB953470D24418B986E233F59CBBDEDD6C99A018ADC60EE55CF18137B20F6391CB1E3201FBE072595B551B29249E52CB0E47BCFCE5B9EA10E2ACC609A2C13505C345C6E6510B3F61C1D295C86E5D96F5480BA3A18A3D620E918D89BF7B7003AA8988654
51B26D68518CACDC3DE0D486A0BB363982088BFA365EDA43D2FD2A01F541DCBF47E45198007AD814900EABA024846B2955EBA3254697A509CB6D91868F1440C7E7C815E8D41296B0977B2FBE58CC6B9E364065C658809CA490C5EDEB22C3767138263995
E98FB61B587242E1EE6586F37FF306CF51037DF2EE57AA4066E4953AD4239AA196B2EB0AC1C180E2CDF7CB59A4D2988190C8163D24243A55361DC2917D6DE5145597ECE037C406E6A9119DC1D2E98AF572A2C736DF050497509EA13147B8C0786F82AD20
AD3DE3F33F15CB2F1669F3671051119F61465D0FBA1427FD022B568F09EB7B10DE3118FBD3E6436651BE535B417BEFC6F9305E36A01A87AAD326F6DC2E93C43217FDF0AEC48E2B923570CC392BA5EFEFFC22165FB2BBA0996ED2FA1BE28A5FE338F06F78
2BD2BABFA5CFCA582707F9C12E3F3474F2BF19E5EBFC9C980F04BA641A2BEF9EF39B34711AC9E669849852BD6FC4E702F2F694691D9F392284D1288CFBE794D8F1447487A57A28F77304389CAF7194D144EEF316B4F47642267A827DA24D1B8AAEA25172
1AFA56D1DF37B07282E31A563CAFB51BF6CEBBF4F63EB54629E489E9741823451FD8BFDFCB22FA08362FFDBD20EF470D55B017F3A65F6A5B21B0B7A2DEAC92EBC3D38456B2DB3732E2EB9004E46E10D29DA2563C2458D59D78358F4579981372B9A26A51
D4F0BB1B2EFC53342E437334053FD38BF55D54666615EEDABFA49B9F15CEE2B05F419CF17C0E7A36DCE6C94B878A49FB50D98B252BF98EAD6C4A3D629A0CB9FC2ECCC717460B9C514B38C1B6F7C93CFE15D9E5FCB8A237612450E2FE1E0A423C924C20B4
870230092C4A556F7D974C63A4AFE426F78ECA7A1C291ED5BA6086E4610C714924C5EB2C201E8B0C5FAB860D5B60E5F2FD24AFAC206381119715C7CB8284DEFDC46D5B6C4FC87814974B22CFA1368302F7F0E37DE04ADEE7FAD8C205582A82047B27545C
C8F4694E1DBB3001C266464F526D5AC4D4D0399F7BA0A7FDDE0659A2E3670116DD68B1EF1BD2A5B0961BF548B87D2A76259706921A69AB6E2450E7D5AB2244130A4C9C88E44DACF90D3A14BE446D7AF77C9B7E08FA148C38B18D4B0F0295E14DFD3CFCD2
98CE884DE7A5E9F635C00F9DD4445A69D274048DDDE1731751AD328E6832E858DC0E97611D17D8D12733EFDD43E6450B1028BAAF882A9C0F9C13B03D266182B178C43C0551DF9385EA3BE15701B2317D0E60721A786309E41A8817DB09CBD235CC852501
F4E9CBB9C5E82BE9C0C839B1886EB94C3E4C965CB4B0C9DD2B689784A5AFEE34CFA24DAFBA6C7C6483ED6A7E25230FD0F72FF5CE249A8CC582B69771B73407B645A6B9FFD1312AF77E65537FC1583F39C07B5EDC55E5C518D40CA32AD0E6E738A499C75A
10F87D0772DCDF6DE990540DECDE8FD42FA70B262205BF519EC8CC0C0AEC5A15991ABEB1FAAB983E9709E41D1E6F7A4DC1CC3774EBA3C13225BEA61D4F85BFAC9D3CEF6CE0AD8AEE66456908A5C3926A30ABE5E36302FF2D15268C2862C180A6EF9D9737
187740FC24AD3876DFE9AB13A094176B5204587532977B160EB12B92FB68F3764EC3E42D1B27452A87554034DDA2103CDC03F530A14FAC8069C611A91BD6E3348C677784E08B115DD3C122139CE1FC804F364F87FE722C7FAFDD12C2682361BF140605AB
9E6F84AAF5D92C9365B84B0DFCB472B155424A907A2AA7AF117F01B638DF77A3B46B80D319B220DD78A249A1E72A3A1ABE46F78E7B0DF81FB760230464ED9282D91D4E8898009669D1382B58AF0C9C34F5FDB6633341C5410EA677586C23A59500FFCB07
E08B99F48FB51220CB696442B3B9F8B041D44928BC5124450BA8D287AFDAB7712FC2949EDBD6460E2B204DF591F4D41660393663112643E5B06DCC111CD4CEAF0A80BEB474EE2D2494E78FF3C8A2A128A3EEF99F01EA7AD3C3F847025E9FBE2703453387
5EB1FAAC3BE31A1173C6E9D5E62BFEE06D2B2F8F41313848D685548DCB390C87E8FAFA8BC7029E2596BBFF1E4FA2B0DE49BE62E8AF61558D4C57FE1CCAFB5145F19D78C3999472DDA5921334907C76CC36213647C52EDD6027189E641AE570AE7D57DAF8
A84E3AEA84B0BC1D35ADBFDB751698BFD5231A7EFFFAD6B5EC654B04A320BEDEA50E2F727A79983FED5AD3CE88FC514E582D6BCF20FABB196035953EB0E46B18298ADB02B98FB01B758C02AA126BF29C571C395819739DEF7CF3C5F89437ACE91841E3BF
3C91AECA04B325B5AA9AE1F47CC6D89C613EE532BBA55C1A1492733B2F10B8464CD06C53A1980197E2A9BC9339ED51C923EB7AAFBD8029C13754B6EDEFD91EB871DA5B449FFE17D69463D63BBA6B5D07C758562A3A118C0A940AE3593D60C9340B5A0FB9
88B0A57004CFF5514CE9B914CBB7A58F26777B1F94F0538A2CC4A05D38DE890EE8E60663C45152B7A75F4B63BECB25B3C395C1CD71E412335EBC7E4AF70BE8DFE47FDEF09C11EB6670CD2F47F18A832E9351E9FDAD9AED9FE7F1AE50C312416F8208080F
23C3D1997F08AF1338D85240C0FBE7B34016C1608877DE20D619CF1B4AA9E439661734C0AF408B2C42AFC4A7A9172B72B780DCD60DDD189FFC6C2B4F9EC8106FC72535111B27C3F8C1093C2D2C45EFDC901495518F54238153967E1C881D88CD55700BAE
C2A15811776BC66DB75DE4174A18694D0AE110BF8044C91AEB26B6A6707360912280227EDD7163C03CC29AC6D636FE317F4B0BDE03F1FC0DF7788A7F107E0962A307C2AC4646939E0ACF0E1D4BCA1B4CD7772E7E7049D9503423622A3F3DB374F7CD3BC4
C8D774BFA03FB3D5697CDD6CBB6FE15DCA65E7C38C62C8AB3AC4CF1B1D049408FABAD8EC5B53360F0BB0490514F7DCC3F414920124B4F03CC730CA66EA4DAC530EF022FB96EC660C6C868DACA6396393B4D67C6DA127E836F243040A1F5A47FEEEB8AEAF
2A0106B2CA4806C79D28EB00749D86B16B89FBDF904CE1930058A39F83AD18946CC511D46F138BBE9159F0D059B294523A84AD89B5C6336F4274EAA76C4B42F9DB88D5A70E56DF33B95B87B3AA1E941FED6ED5B69C2C182DBD481DB5CCAE1F7C14C53785
80942CC4CC4E67DB52423C524382FB28A347DE401004C4BDC47F250E78E8E011C576F947E60CFACC9112E775B2FDDB220B458F598A1CCF1F60C1FEBB023C47CDABF0CA724C75E0AD1C88A07807C72AC4FA8EB6EA3BAA47768DF40D3E5F2207270C2D176C
8898DF4E0CF7DD250FDA88D87DA02EEBCC3E370A8EB7E5EC44A70C4D8C4F615B336E760E504DAC1F35D2CD3C94CF99BF9821EAB5508556D96B21783357A9AD3F1108F3845AF8886A33F77DBA9E39206B6B5ED18F3DB6D1B5FA7CFD736AA69DCC3F3B6DBC
FD900904E47515358AD1359B4BD4985192E27F1278CAD41E3F99D416F314F67E8FC058BC32294880B07646D7940310742F6A88631B209FC27D5AB3C990DE86C9DEFEABFEB6DEFFC0EA3F9EC3A438D398E3FB739B8D18520209077454409F5ACBA52814A2
945898F6EE165905255A05869EBB130AF76D65C933086929558B8BBEA4355F683A74224E03C70BE9FCBCD6DE792BAFB49354BB09D892083C651DA7B1D1EFA2A0DD15D714624113721DF60EAD36A150AB96D7EA9CF60029525B5E7272FBB419A155C59FDA
83BB41667187BEEA2178698EFC19DBB58B5454CA33F0A394313DFC8B237B1C577CF6B6E3389620D6791B34FC31B0EE55E74F1FB6F2B1F128A8915D70DD1D495F4E3E3C46E9C4384805C8B201D9D1784F7F2EFEE4E1D31B032EA26BF935972BADD3D2F3BA
F4483E08265C899DB25301B1C20C88D6B24D1FE81BC824139EFDCCFAF4B1AA2976E943F8CA31673FCC73B3E0CC10704556D1261D22E01AB93F889261B6B0DC19C579E5BEDE83280A3F3577A065A9A5F810AF595065B421E5135E872941FA8490CC649C90
56839D0B80587AEB3E1B495D18B43942BD84F8C1863422116E0F0F07F8374F167F43BF74ACD594A01F6E9FEF0F9E757D383669F1446435F42AD9B32AC9E9780B8F61E38513E50B51B1F0E94E3F34C1088199ECB38F295638B797F7BB87DA711BFDEB2055
1870DE036A15E71A9073AA22086B595B8035A7FD9DBB62BF7561F5EF202C010B7FCA28B5A5055DF05C2C0E18C34AFB073DD6FDF6ECA2534186135D50A815F3D0F41F6FADD49B5F00824283A2C6EFC1827873681F7CA9D0B497D1B6A2C3A8F7428D873AA2
7C73E1F4794B4A18F231B8222C123BC9E2FAA4E94553C36D078C7720C01F2C976CFA2142D666D7D5DA2664A773FBD02A4F7F38B84EFEB47B1F88EDBCE621C01D5B7760B9B0747C8BAB73393BB29DFAEA1B7A3982A8C6FC8AA15EAF69CF8288DA268BD10B
FD508E4456E9C0F2172F373974ECC648A0C145194EAD085EDD61383A501D479D5C1ED3059F5B229FB6A2E2CC61604A79431A221DF61B234CA6DD3A7D62EE04922D57C4B4A657F8F5D50D7949274155FBC3D5F69C051825AA052B89F9D4BB834B93F20864
B8DEB030D2E485D5E7AAADCFBA0FE7A4DFAF2826BFDB96951F4DB75BF8A64AF766EE1D0B5216E007969A7C83A98213464416A28CFAA685A31C834304E71F19EFC1045D67AE30E63C368BC3AC40E9EA572D85BDEE1A600AC3981DDFAD225AA7B06051A636
B667742BDE8C4C5DCB958878D11860CCD02D50A8A94F189558840101E388A53830EA574F8C641CEE8B1FDE002A81A3C12294E05101C670BC0C4AFBD7A2C2F69EB1CC53B98BFD6F59D45C06650258EACC5F2F2D7C50E94FB9BC7FBEE58D39A7EF8FDEF307
0030B55AE4028F349669D25227AC545898EFFD79D079F7F31A21C3FEC752C75C7A3AA1D204EB1D7456451167DD0F528D1F51A671316627C376FB2C8FBB009B4D5979FDF1668686D418733DD506BD9F27939FF6A470669E959D5DDE5C2FB575A2D8262CF3
24C247403A0DCE5B2B8C8DE0EDEEF87FF718B54DB173CA4564F32C472899691CB467B48BC245E1CF35B542DEB372164CCD9A631DC4CDAF4DB3A054EECE5A342E439619F97B21F8AB923ABFB4FE4B4D0DA182700BCD59B25E2E0C98FA1521C17F9BDA79DF
A8E9AACCD6DFB4B679444BC1E450119BCAC53AA0150222B47E549FCC807EF9A4E4F27949954746D5E3C657927952B68D2476DAFA2EDD826F15387528FF421D70663FCA0487B8A5856F6F3095FB388C7791209FD044E3C13F590E738CC7E1ABEA5EC66C93
BDF7D63FCD7CFB52C07AE87E85FCC4F49A30EAF0691B69A68297DC4E8C7F0307A1BE23125A466E74E88A23027C7087B3187C8141170156522B6A8F72211FC83D39B25106931AB61D8F6BFF58BF58FA5627356143654057AFB4D2845B6B58ECA9A768C746
6C50759D9FCBED4F57ED5304E2FB0F5F1766E18DA1CE64834D6E45FCB584B3746A54EE709C3C93B96756DF8EDE0786C3BF4653C55FF60B787289FAD24CF78D55DD8206AA1FDBCD385877C2257815CEC100C6681BB5D16C58DE288B73E6FBAC52E0BBD45E
2C960C36B7211DD428A8185E7EF8FFC0C8F0C878EE2E036A29A50A9B03B0CCDF2E4DE5DABF575BC9AE14475CA0F339A07D17252DFFF1E37B6C445638BBBFD0A3B00500F84090931852EA95879C8833A5C8CD440801EAEABB630636C0EF68DCB20CDB06C6
4336CD5FD3FD44B273F4B7C7EA4E9329F48B40436D2764DD32B08D0A8983C93C7CD1CA21C89089347268BD6D38D3D60021DDCC1251FB058DCA5E14E26B368D3F98237CF104808A8E18735AEB590CD7B610FD73781D41B9D2347C54DE0816C1F3EFC2F778
F794F52B7C3FB5EE59B9ABC26962132F5B18780F57106DAE058173F7F25C36E3CD46F1E042E3FC9059800B10A1BD6AFBFE56CAD4130E9CB3D18B48A9F3B4E0AA33B7490E7077672608FE634FAA78F02287C550B3502814DBADB08B04E49A0060D83E807B
A6E40C37F6A6844597AF1AF935AF745B338FA75013F4592560EC9A0E0B9A4C6B30C529E9009FAC37CB19FD778D45ABAE8372EB8E6BB0FD87A3733711C1D4D201881F80CE4C90376B228266A1BA20FA2E94A560E79DF9E8C6AB21E479E4110C9670B2711E
95F849CCA09BD171A4DDCB2FBAC3A3A68A90E5B64FA5F63E5B49794CC40F4328E824F0E900A495AED28FB18BCD236D3DC3BC86C30A1EDABF2EDF0523FCD9E867B271000E411A7D5211FE4813D6EAFCBC203C8BBD8A6AEBB27E6A1FAF593F8D3A32B5AEEF
CA103F9B8353405233E0F136F19DE4D02C6C09EB170EB1D19F9EE39810061D24C7D222F92134891F57E1A4896ED4871A21221E7DA7ED65A4F9AF32F423DD8FB75CC0DA2853B4150CB29BC5DCC6809D5105AFD71683BFEC57D1EB2F0D53ABBD490443E06E
3A92E4466750C1769B93CDE96AEA89D14331991825182F6A621CD8C94C530A8B29E1B60B9BEDDE6D392C41F9F27C37D891F28AD1125DB7F62DFD52684D983D8B28A07E179FE9E4F95836E86FF91D966347F9F30805D29456C63EDEE655D3C6852CC03A1B
2816117758B92D35891BC88CD701B4AA4B3C7644099C8AAB897B37A92B6206F631F5A33DA7176CF28A43941FCCC4779D0F1F7F69420CAEFD0DBEC5F926925C75BF2159949FD309A86B4038AA07D28C4D199C5043085A1769CF751163A3FFD3D66F6FDD98
48E2FBFAEE57BAFCD7D274553B7CB6CBEB3BA92ED218F86B214D323271936A1ABC8E96AC2889BA52100AF24EB1C394337082054CECB3AA32B982CCF69C226F21A7E368014C157981D5494B062243FB5B79D4337D9C8BF7850832D12B819A41AD3A015675
2728D8B558F7335528D9471771FD5F5720D1AAD9D2D091B0D33A8560C66E1EC3380415746BB56E1C2577EF41B6C1B02C73AA463C5EBA6FA614A8E8F3E107D08F974847F7DCCE008FCA0C47335A6996B3096D66B446D50BB0F3CC0496880E281FDE5D6A33
8E58925B1B50999F913E987A0A753AF4A6BC71F8C3DE0AFCD68B0382C389DFA6BC3EA7B09392B121366AB4616F2735EFFC64313F51C0A59EE466A525607FB220BAE1FACC5C96A0BE32A957E981E99A280C7CFC03D5D554D87375159F63F0E7C27C6F8183
9DB652A25C52233BD07C5C37C47E06214A89650E20D051656FAE168792B8837A84D905073C4A016E8DA1F411DCCBA422729262D4A25BB9D35FA1FB269DBA148D0766D5D009287428A40E072EE88C3510EB38F1C7A6C82492F3863C2B130BDBDAB5A9EA00
2EBA61079C944FEF2D5822E648C4DCC01A005DA33305770D6521106BDC3B4FBA34DC51AA25251D12C26C8BA2B3EED9A5938441DCC8CCE52B268619D47385CE5A0E9DF83DB95D8A4119EB972EEC2B37E5C60E64904C48256CAC1D7EF4C49C72CC92C2320C
94138397AA4312CEB01AB4F6F0A5D744C52CEBC0F4985E6523250F711B646A71858A50BA846E48936C8897341325445CB18150E3D8CB6B0F7FD5743BAFC40339078A486D411E2A72E991A178358772374906CE98FBBD672EE46D971278AF67F522547732
535AC036F7E1091D46FDDB7420C0E45A1C4740EA0A8FC153AB9C2347AA94FDE8BD241E678109ECE0715B367B9185343E73FDA3261C49A7363E84E9AC6BCEBCC175386090503A11C49FB052DD1F3BD38E2E032CD5A86A4BA0571B226FCA3BA60B25520F63
0DE9D04C4DE66DFDF1001B6B02857C1BA124C7C3C4672CD67474BA912DB38DF680CABA4D56B9873E71E5554AEE00786EDCC3E5158D1EE1B4D288D00E02BCC0D66579AEA4C90A631A1B6477C2C4E8F09C417C091DBB1362279FA323178A84EA5737D5036F
A40DCD092B7686F6707CE23D98DE3E21C30253374372435F98E09A4CA7D524C49503DB2501A8437AAF13895AC8551C1CCDA4CD111CAAF65B67B5AAACCA4F1845F66DF181BE3684F97B282F54E19AEEF27836B67A376894E8FD34D49532535E4559E26F8B
653B6D20D4B8666027E2083C98E010FB3DCBF7F6888E80088EE7182640CD3BB085DAA38852CC667AAE8D885F45A9B778C621F993A228C948C038751AAFBD9920C64B0533D190469DA4BDAAB5B9C6433B943E6D5258058D0B2ADBB827054934EE2B5E78D7
A885E1148587FC641B572F7A3BC2D671A24BD6F4908E7AA2A844B38A97EDBE67D9D2016C047CE2178FB32CE91B308BC6425D3BD368D4D25FD5DDD0D62F30E51F920C6444F03C59709FBB6C486A4FFFA6BB9B33DD28E984118B9ECA38780148CAB8FF5278
0F85B43EB29300411264A2D9269D907444BE248AB705C3F0E2D7363BE7CE6991C70673506F84F553D8DC6264061950D2F6A2FBB5DC0947F8B532111CDF33C49E2B3989053AB2DC0DD303E742E91366F7C6331AA3C5CE680B9A60EA33B6AEFC2A8AD9B22F
A75557F231E47C339FE3145AEBBB5F522E6B6B8CE7EAE550E559DAF52A8419B86AEFD55362C534633D46FB5295AB232DCC1232DF4F3D3DF80FAB2222213D5E05ED4EA4B45F8C5B20812744BD1AF7037941723475D6B4FA118C69D3F9D611A9945E540155
63A2B406456134581FDB3AFADF676F143C00801EC583A049CB7B651EE3D36150CEF7D69BE5C2647C6ECEC6557A2F3273D35BC107934E06722A98DB4CC71CAAE7D035CD40BBE78D1418B936ECB7C747E84415272AE3396F4568930038AE0B6AF8DC1D9030
95B8BE74D0B695B94DCE078C38B95CFBA450CAF48BFAF1710A78D1E6E475104029305EC1A7132628A0C04171124F6364F0AB48F081370305BF83D1081D7DB87C5F16CE10A522B7783927384214D02D0A788E6A48BEF6886DF5497BA1413A540DF3C46A2E
7196235C8AC1109FBE2A0DBD33E39D172EB788010C795B701F342AEF490B17F948C5BAEC32A554DB93026B83C876145C236E3EE4BABBAC9A6A0A514560A5ECD31DE408E1B97A5D5C76916D55FEFC5924DEE7FBE9BA6C44B35C84103ED85931FB458E3EAA
EF03D50DD160E74C647A2914A0D824717EC99E7DD2D50CC75CEE8B9A76E3330157A521803CCFFB8E19F34E04F271A9CB0AF181C38F6D1FF50AC8DBF0B9A4511E27D6FC4807F3FD4D9230BB8F9F5F96B1735C3183DABE15E417E5295F52E55E2DAABE664E
8ACA894FD96A92991F3BFDB6277F212941D5B8FD31CA28E9CF35595E0224C5EFCE5F00F611A27FAF2B0430DD1E85CB519B4CF50826E44DC28B46277F00D063AE6C42117A96192CA1CE8CB8A8F2797CEBF790BDEEF4F2438400060333FF8B8A1CBFB5AC16
082F5F06DFE076DCF95BCA5AAED03D868DDE2E6CD934B30A5506D61CB3252DC5D169A0D48DB655648755A22F1C6ABE96CEF13C0D17C3748FFAD7BF4FF37E25A08DC01BF2D3CBEEB2150BDCDF75E0FDF3A1BA633B846F05F45995765ECF620BFD8C1AA9F2
359B851EE5A9526F044C686AFB9BB65B9F5ECEAF4A905CC76A059DD958AD896BA12EE8A938D2751DAF87B999F0B4225632284A72406F1D286DBAE091FC5A06F5395195469526F0D7CCE821195433F47CBB71B8C3240F9666A96F5ACA26E04E243CC9FBA6
E3ECDEF377BAEA6010961C1435E896A43A8150DE1CBC76F1620F52FBFB5A216CD8D3EDF5DFD3A48415BFE62F3F58EAE8A131032BF0C70CFEC5A6335D1BBF4ABA415213401FED3E183F1C10A9F82ACC942DFAC49A2417332EDC2166A2161F6950226A7D6F
3AB97022C6DB11FDC9CE5C1659E02C35ADCA047D718C90658E36546C257DA8A6AB02E90C155784EB712F89C137E8093C42607B574C5179B7F05D8D345AF730DE0B7EDBD9B63B4A22DD19DEDE18E28DECCE2F7A6817A250044DC4B471F2FF0A796AC2ADDD
7825ED2A535B2201B43FAD19A5F32A827E2927775EB71A9A90D84DF8D2A402BB65DA72D24B576623267BE9619448A7FBECEAF165345CC3F1232FDE9F930783492E8B62B437B3AF966C4F1A196D45CEF89A4D3C07C22F1445E3E30215F2350CBD11F83C51
5285F6087978D0BFC4A0C40D1478CC008EB94AE8B50DC0042B43FC226C37DE7D4E672A475A1A35BDE80C32D96EB2D539FCB85F67958E57A1DCC275D1A55CD84A0527EA0F43843DC6D36B2F52A9A4D3CA2D6E607429D96732B32AB16973C6F715BFE8FBAA
C700CFF91A382977AC359A0A14127CD987938ABB0ABCCCD147B610159FEB7FF1AE821CE97FE7367E6A32A999E10B2DF09E2D8E00D77CF02E1230798B362A1D61992AC13E326663DCBEE5DD9FFB2145061653B3BD8AAD49D50C66FA7CF77806637CFC4A72
F8C6B5D595C1B91A03D0EF39A978D96AB6FA9EA16FA420836202F0CED5331640E8A435175CF90C920CA19DF7CBD9F10ABCB539FEE82464510C748D6ED7ECF4053D0766703B127669DBBA6F639EBC7143BB85E3CBE1C36C6BB5E24913648FF5DAFC80B3EB
5EDEFBD21D42A51788418C15C530F6CE9826D282352FE8BD3F67FDA8FBB8833DC15EF3210225EBEC532E11D4322E8C49A07582D2E830DC322F048A5D746BF2DF6C4F01AB28D06C52B96A08B49646D8881E0171AD56E06F101BA9C1239046AF5AA519467C
C0D0D7A3A2CFCF2632A05B09BB21ECEC1E8BFC9B95CD067D34BFFD897D60F73C5817BC344A9F8576F5D6939288E97A70EA2E6971292F1E82A2EAD3BD6995BB9301E478F038C38CCB4300900F0BB45224032CDB0150BF1B1559600A934B22164148B04406
3AE3B748CC6873FC25DC347C4AFCE16832D05CD111834C16A6390B0D3AE2020480DD561475306054650D69C7EC08632389B2DF8CE07AA9C8524CD0F3CD349CE1BC451AA34837C3F10EF9512A78A761B57FAF2EBE3FB736DEE05180A7EB430CC5A1E3453F
2F7CA29A43BB10B0243753AC5AF88031E42210B17B68001B6A8793D7B6BA9DF1C646CD550E0A1EFCF846DA153FE66EA8877A4DB74EBE684E6D3BCE163D5CEB68D617617A59C35DA0FECE38C35DDA46A0BCAA66284744E7829B25DB3FEFCE2D2E3496DBDD
1D0B673D24E96B2B7EDB19B0A28AD1A5797D150C1AB30DA9210D49E66E8F4DD20BDF2E0A16DEA2A3F65AF8234E62CBA17D8186B0B61640D92973F70ECEEF8788FE591A23A2656A46FE36F8B9FAED6F3DAA3E4C66BF766B9887B295E29CEF4D91F55748DA
3F03205C63E0E14E49494AB99F321FC5FA0C30B0ED61917FBBF6B4495BF1C3596E7F007C84E2EC3705C04389F603C20FBB6FAD12D2ADC7BE9945DCFB224A2BBBC5F88988F54835D265E84FE45F4630D752F074B6430AB20B51E4134350367CBB120F0825
29CB1D56454E42792EB4C9BAA204A9EE9C94AF72480827F5A9C9BC346E4430CDDAEB1208A51C7F4FE3141B1FC374239D9D033C6965F8450A4F0D7F8290A6C2362680B83A31EBECD99FD7F603714AD9F519AB3F59759B9850351AC206D9CC30EDFDE018F5
07E5C6C20DD3A0EB8C87381985C6A93C85A61A8D9A1E603C6F6FEE78F9B10844936F4F35F6DA4A71203671E9CFED55974613C27D308ED9196AF2BFD07B310518B64CF70D2896486CDF7F7057244893601F55F961701CD4E4468601CC9EF4284221834A15
263B01CAC0364CD9A745A3830D9A435315FA1A11AFA1BFA7D6442467EBA2290D318BAB36503F5BCDBDCF79F11EDC1432E2B602F783B53B8BBCA3F46F15B79D50518E3F78DF58A1F82A9680DB58588E974F2F1C2219ADA181D86C46C80A9D3D7D57D37C16
4C390F3F49E61E27665F4BC79FF193EA46C950FFDAC31937B111A3DBDD67DFB9F973B0EC49F68394A12B940F866301C16C2BF1344CC844420A50F83A8FE7E53F27C1BF6A34DBC2C8C217F939082751A3AB96BAFED0F6878FB9143646211D90C537A4AB00
179D9838E8F02583AB112C574430CF119B5EB8B56312152329D9D3EDCAD080DC84FB57E306441E0CF4FC50994FCB0F17919D4A71990D0BB6AC8C34CCE7AFE7B5B0496B53B118F6633C8FFC3409E30E3018DD26218B4D6A8DF96702B5833D3C9FAA74FD80
E30024726D37424B66B5F987E16C18DF391E73980E40A646517FD9227370956304FE6E86E8CFD04655AEEF16031261154E2F45BCC27DCDBCF043225D90D8C310657F26FD1C1746BE7B2BB8DBAA6D445DC612335025C7348ED227F51A664D0BA0DE86DA67
01B9B8728DFF3A27542BFFB556F7B8D6F75F3530488719E8F8DF698C7B2D32807186684F48E273592F3342AF6E7946FD8166DFC7868610BD72F41299BB6539CE872FBDFF5876D690AD7DC4E6945B6463925CB8D2BB34BCD2F1FBCE1B19ACBADEC845B62C
FA96FCBC35BD6E5A971A9D56E940966193149E4F29575588C024C3D99CB6A19BD36608E2D3DEA3EB34C595AD4F58CA141BECB0A83DD52BD726378A27308B36B6E9DFA627268906B0955699DDFB340703DE9E54F2E6FD8B6D5F459D61A912EFD17DB26E38
98A5379D91524206F310EEAA66EF07091722123F04CBF16ECBA1C632F74EADA75222C91EF429182F6CDA1D33C57FE9631551A93452294CEC1F42338361BDE57ABD6CB1A24F5B231B4BD7AD7C3DC91C53BDA569A27D99BF7D8A1E6376980E2C66D49723B5
2EBA2D75AA3F5F1B45849B7648414D15A61E99CB867719DB07B193CFC9356CD269B8790A63377F0429CD2869EAB5EF209ABB93C012129B716702B932C0397942B6D3B770AD48209CF5526BCEF146CE50318342643737F7BDCAB5C05FECF8E8EA80D2628F
E83B9613814A2F5CBFCF67DC134694225756BBA5DB6B2C6958515E5DD37CD5FB40DD2AEB2A4B0253D2059A411ED00146F3D5BD1C1E1043BC39FAEE24D254921B27D4F854077B7782826BFAE74D85B3C12F7C08CCB243E34D08CB142A5301757D3C1C5D57
365E7B4CA407FBBE55AB2B252BA6F2E15155BB53C6E5373BD0354EEE9E99F410EBD6BF12646D820FB663309A82B04AF51202AB927A1E9E0A22783F2391EFD3114587D8CE8341102763B8A662A6AAF86D06EF4811A9597110B4AC1FE42520169CF4AA92D2
9168CB737391EA45532DD5031A04B3A99CD88E2A89E4C9FE0E69A50E4A404BE3EDA46C576EAF3F08F0C9C366BE7569A50BEA75A4881D1766C1678E85BC915C7B7222043455C374779C6E6CDD11DA8F240F7B44ED7B21B06393265B78EF79C29D53199497
703CE304888971E5049518E5C3D74F1307CA11B667519199AA54A2AA960371D8C4A954B64AF5E15BF77428D0FA8C07EF0E32D6FA922436FF593B3EF3A247BC039E29E5459BC571FB74B70B426DD06C839D4CDF125EE3E349D4B8C5C2073C911F288D6AB8
2C99CF10326C6EE45D2F6C059E0F07E1540036668845226D8D1FF9F561D391C7C7B2C57D46D1F50F0546FD9C52F1663BF29AEF9ED6C00597E92190D822619F7F5FCA3C2715EBD6ED5576DE41956BA6D9BCF0DE44A480B1F61FEDFFA6B646BC9C171B3D69
E20E5B37E1DB8980BCD2D3D6904FF3C92C186D1AFDD6B93851A995A176BD788992297EE568443D4AA936C89D7E3AC2B1697A9A1910008FC5B373A23E2285ED48F4A327A9A3302841BD5FFE979A82A6C9BC8EAF53F138F833FBA1FE968BEDC2853145BB51
946C9F6E0B3895E44B0D46168B9A14383074E0B67823A4B17C669E56929B94224BC55FE30D3DE2D430A790AEBE9568E20E335A1B5BB3BE0AA82DDB14EFAB35819BE7A64793E25D796C128B834B9FB771C43F3A2BEB3D1E83D4E7963F40B4BB2D2C375E28
4508858182495EE4B871214D258AB1C2BD289C0878A080BC7A761BE04D0CAC30D409A6A89F9FAEB12D705CE5905F7A5580FD1E7CCD5E7A4698D06A0026075D640D9E7F069A338B912299A26171192A47BFA3E859A43CBCA6B8E1CD69BBAA5332EC040EDC
D9042285E5D10F6CE5DFB19B2F4699A3F409763704959479D030B53CB4F43CE7DB1AED8461A31E95E61E2FB6E8BF94DB145B84B304400C12A5EB0F243163222C7D7FD2637B5893AF1B61865606E02C71BDE850FBBF07A4AF9402ABE6F3B8E593BE82FF36
13B8F7855D2234C421E62673A6551DFBD3B17B8CEC413123D17015A2719E64FEE4457828C1E2AE2FFAE834899BCE02478B1B6A1773499F0A846B58A26ADF6F2B639ECCF647B7F762C9B6D5A2BA70E3115BF428C696F6E09BEDB9730DDEC5CD8A36F9C225
DA7607B43470D5BB0A8D838B27525B53A42405EEC6D8852DCFC2FD79A5FFD930AF1794F73E3D54730D2B9717D12E24A7CC43265E33361794D4116F17DF9CB6847D861F5EBD03840C24B8A976E55FC42DC5CB9EF2A4AF8C56C30636785D3114047EC600EA
5CA12DC9204FA45AB288156321CE9F72585D3F312E78281D9F3CFC022F5D4D725429D7D133B74920654BA131FF485FD4C983694F5C1CA8652997548E000B04F986C965FF0C3E850B77019973221C57AA79822A5D1F4D860DEBB276DAB6A1D09CA84F98F2
69619B6EF0F7A7F764CD02F30DDC9BBEAA5D6BE025F3B4463C4DA6F182B1EFA4EBE1275E3C8C19A843E32C40C10DCDC4D216B255704C3BD03909139A2934EB4DAA5C2F8BA009154D25E00AC77C5C42D20A744B98B643E6A4EBD972529C5C30E1D8FE75DB
9830DB1D3DE08DDEB66C1FDC3DACC4D617150A7F25E81EC70102C2DCFD86BBCEC56178FC8A87A05DD54481650714A108D0FDCE6959DA43F895B747E0BB7348EB405E6A07CC6569A6D2B766BBBCFEE8E84A91A0570A242E0F3C74BC3BC3B8CB51D959C2E2
604CB776F1D97EE9C52818EECEB08A18FE0AB9C2ADC127AD95B79A74122C5D7C38EB47B326618531C4C973ED2F646D883166A5D66FB93D71550F7609056B340A8AB50B15E57B65E94EB2EFDD87D45172A31A7005333765E8E01DF250070F0FF845E1AB9B
6F4C6F1F8F8816A65FE3C363FBD8293212261F3C4191E4CF8FB24BC0B9F7EC4AB35F4BF39284E22AF306EF872ADCA3298DA1198D36C06B8CCE5B5F009C61049E1E6634BD47633BDD3FF915B60CF50FFE262693A3C128E1D86E9219BCE483FDE4EE4D52AC
7EB1294EDD1DDDF7246FF7D86B6567F646232E0AFD5DB7C03EA6C47A38DE443ED69A404F8CEC78406CD07998B625E3605BCCF91AA9E09372D7155EC3F059E69A43977C19254B6B4B46C111A4B068E8FC8FBA6E14055168C41D924F7EA463F95FD21B1264
5BFDA2340D29DF5DDC577E8726BDE12ADB516408EA5F65116F339FB50150AA9C997BE1085CCF577338B08704A6C15498BD94DC7636E1C16F088AB66C18D6A420301CE7C909F81DC5623D16DBCAF4AEBAB2E0FA74D61F54B7074A0465A6355AF7167C64C9
961221C39F0203D86113C3392A131DF0F3DD38E9967E85935F79CD1C111F634FD4782B1128A1341EE4D147CE1DD8D345F9B1B6963811CCD850F70EE740A2540C0FF9EE01E56D6F34A0266214CF73F8F9D22F329D4B772C76EF699B8CE47FD2022C748F8F
8F095FEFA4EDDCAD4C4805A6FF034B4812E431F8B15B7B0F3A7431125F6013CD403B68EB52F773FC5BAB5DE5107DE6AC6BA38DD4A926CF7F607DB045FFBF173EC9BF6C04269DEF9B8B04D1A7CEE64840D13DADDCF8ED6EEDCAA696E8661DC31A4501197E
EC927816FC16E110DD7161C00082F437EA6D2575E91CAE1BE689DFE4FE58EFF31966182F807142405B3A2A5EE21019563A584AD575E91F1AAE42C905F9BD3DDE1F243F8D96D0EAA7A35725A36FE9B410C1FCF31FD844160A9EC9AC91D8CFDC2E45B60468
0E65F73F4A8B6EE1C1F5A6B30733481ADE7AA5347999564134E35FDBDDC89BF20E315A06EF509B6E9378E0D1904C2BC71EF1B15CFA87769731104A4ED19B119B6EB6E75EEAA1B18053BC2723994BB19616A4164FDD8F8D70DCB79B5C02BA5C235958B7F6
6A1D85B803ACECA59448C95F189059D34823C790A7404731E18B287CE7F4F43B703518FEE480AB84A6342EE0A250645162C39513EE5779B8A0516B252B31BE17D89B78C6E9F80E72211A52D674059E9DCC5B42F56CBF285433825045166AD8EC6620B280
EE90F9583087BD041A1199CA9532A17A9E6487464894AF92B24259E95A160A30FFADA4BE92243D0D666AB462605EA2BC2FF3C1848996D1E18BE92E5BE4F142802D797DEA255DF5D8D21C27C8F66A715FF721362AEA18A78B2F0F8D13FDBADCA92E813000
871B695E5B2720CC594202AF8EE104FE2C083E13BA445F3F3E73AA1FF993BCE125FD94179CC015D455D1FA5151D97DB1A931B074EEBAFC7B0342FA1E50B53C6DA3E727A8AC59754983353052DB47D74E888C8105766D98F0CF095CF4F3A2791AAB7E5AF6
0AE130051C2AE6FCCD8B9E5800C709CC6894A98909E056332AB3177540512AEA938624CE4897FB40742A327D3E6923A058E7E9F012E4109296374647938FC752A8A10FD0674ECED36456D83D1696BC281797D97E9B4F05A98E3167EDCF53292954B9B114
0D208E072A28E32DEC28F93C2102C9E5ECED49B39CC300C90EA207D16B6DEF71E0AAE4F9E25209F57AF3FA75AF7AE11F12961BEF2AB14A97ABA79F21E77E5A42BE29C2783C9979807DFEB7CC711CFF7E6C966A8EB7262BAAD8F69D4CAF14871DEBBD9942
8D98E13B73A7EE0D4015AFF5DF9B7775F6E7D11C1022E0284D9FD402540125A7DCD2EC8A6244939B64614DFE88CDFB3513DF0DC96FF1FA60FC0756F83039897F6C9E1429C1E8CBF15BD1C996DE8E937B89939DC0E1DA0B17B128131AD06E3D10F73F2293
1424222FBCB46F493CC2963404F919370D87767B21036C27BD87B31F235394AA249455ED8D47313AE903F7DAEA738C06C2BA9AB1ACB754A4822533940747CBC7EFC098AC3C988E71F422B4C2ED2C8A0B9910126CA04402A2491D6D01A18A04315AAA8110
CFBAEACAC433C4D0EC62B0B5C86BBA342A8B9765C8FFFB9BE879869121C638D0A766459757EEE6948E54DE652133FE923F8367D2F14FBB8FC74BFEA7F06C0C81323B228963F7976AB1BDD7EFF0517A5EF4FB23990EC1DFE5F89DFC8C561C0170B39B8631
22D3BF2493AF2EF7D4421883A9500AD195CA7B1A0EE091E9A457FD3CE8B4391D5305DE4C0267487ABAAC2F8C95EDDCE02F5952229404447492DCD23FAB05809B4090EC4D4E81B10DA32F4A24710C04726119F7E70725FD9DA66C781BA810497E880D27A3
D44A265E3127F2D70E83E3D26D210A01681E36DC2B3FA84F738A466CBA30684FDEEE53FA05D1FA0A3C7931FA635508B3FE0EB0F1F9CFE922992C31160F3CBC4FDC6B9D98A70B68912B346ADE69721494AA87CBD919734B28650180164FCAC1FC01BA69D3
26B667FE61323A4C0126F8C38C8539A8222BE239AE6A0C1D5508D97D14151F63AC9946EF9334A553FE80F3BB755ADC383767FC5FFF6758A3689A8D6AF8CE457396AE6F3AAF7A82909C0EA39A075B0B4796B1F6FBC6EE98449DDA5E239A7D4C8CFC712206
1998AE859A6A1EB6EDF4356CC2FFE0284266CA5C78F684E0D8E8BF43834AA2289A6C3378F426B951CFF3C9814794D4BD71686C3F1B7B8ED95C60B5BC5B1AD02E03F65B24E58E211B71789E10233D886A62BC8351008F628012645F2421170B12FC3E9D51
C50A410C19CF8109FE5E232DCCC55375C1C5FED0944DD6077A0993DF689E8ACBF5735F988459CA186ADEE1B49E51CDBD59DA13187C835310AD4C1994EF6DAC47485A2C8D9458BC64D2DA7ACF25C968447973EB70D4D6EFCE5D8EAAF91B84B4CC69C110D8
3694048957366F00A96D54376B6741B05F669EB751D4370A0756BBB7D29D5D3B98787F4D8CAD453E9B1166D33E9C7F0D06397A0311316651D3C3EB519D893B7C9B2F2635E5E48EA4B5E9A86583C70D23EFEE26875F4448CA28F9868DEF19CBC5996B90F7
8D49C29822D3E5066E5FE2992861C073204D0FD830C80931C19513835AD6F2D2E3B46DD643DBB6CA74D1A9B1CEBB6B030BFFC666F5A2EE90F0C0CF7A8A111B55DB15F780D869BBD0026F73DA9A7631802394CF3E9E714985AFEBEB0A31F0CD2ADC83FD51
5895B9EB9C4DDBC86F456A60BA0F10F49ADD94B2342D00E50E8F5CBD716D9F87D0FA580B7CE2792398767A36B6C10E2C6EBE8E1112CAA830C85F68721DE692B5BD1F8CA739323F8B9E3D0818460335D0FAB1CFD748D6420512847CB5DDEEF3D27768DB26
EF6F35786C54F5EF0113BF6F02E0F2DAD86BDD686C3AD7AF2AE4E4296FE75BCD0926189DC4377DBE8453AA54E452097A02129426F32029321A33A2109172E8691D5460F58225CA3772FB240B92D555BEB3FCF44F2A4619547E7BB6B4BB30A57D60F71012
8B26ED31A1D0C9A8A69DA8488808F57D6C9B085D743EB06868D374D2D5ADD78B70F8CF87F275996B9040A03951A516F632AE393ACE08B3FD5F1BBBA6C3CC06BF256462ECDF49908F01ADE383C5DDE83788381FE62284BFF4B5B46C1FA25D66B2034CB781
661CAA651992A2CC9C25A86852715EE4691ABA4FCBA9A30678A10E08B122C57195FD43E53B3FA5F46E5040597E4D25058CD14118F59820AA98AC3D5BB2694870F0208770D2448E2C50A16F89BBB764D3BACE8FA385F25DB4A734B1E8E29FBC0B19272482
183F6647EF5E1356C8516CF7FD5A3E331D9E2314ADC8413F53BA89EBDCDD293B1061966A02FB02D948774A670FF7D5D08BD0FCD0B2C7C88E877F9F8844EB80618605DEC8D366E44458852F5FCB61ACF35C0B604E31271D1DD9C1D957F8EED6068F83C3A9
1C8169D481B3890B9E39DF850CB201F35DF9C6E526A5DC6EA712AA6920BAC86BDA45FC1631467B9EE7653402D608DBF789796B27356CEE28F47DEA800C8CFB1B5C6F31B9CE4A9670C0F2D0940A96AE48C7466FB986E720243BDFE5CAA1D317CBB0AB886E
C2EEAC151FF085432638287F5CF5FFEF29B8CA066010ACD461AA3A6C7E7BF25D72E7E439E8F5D7DDF45E7A3E2DB9292E825A7FBB21DF3976CE947793E9D6A8E8B5E1B0E0962BCD355A4E135833C6FCA840AC73D35E1B3739897BADF2DFB612C05DE5C033
EE22E07C0B1795975309AE0E7FB69A1427B8035D428384AEFC50CC8A40FDD58790A926454E1C69AEB45E1B073473083B57CC97438FCD2292E87DD36F5C86C6E175F4337ADC15EF0711FAFF140935F032C578B21AF6B5802D66AA06B0D3D4E5C8D94D6A09
8299D3299829E90EC1E857EA5ED1BF51861B45CDCA1EB7A7461D128843AE6FD2FC13D72921C5D5F228B2B97B03DD63B66184628A450E9156DDBF09335D2189EF4DA149756BF072F80929F92AD884F24AD84734D328A010BFDD9422A584DCAE0C527E5F16
F97CAF908234912E3E3CB179178379F9FC72340C2D3A3D3BB1FF4DC7E25FEE74C3E9D2D8DD2E6FD01280C3362FEBB07D3D56C1E81826E7A1F855DDFA1606DC2D8634BD33571ACD1FC80779AC90F6EE33AF4CC830949DFDD93CBC4FA4E1DB566AACA1C620
718D0862AB328D0BA661BDC37F8D468B2460B5D6D4611F068878FB5E609E5A3E77D1F2A3A10FEC2D5B48CAA1FE9E79CBF6E0A8BA0E9BD1CE9183F08297089C32B123E0503F69EFDD141B67111F1BA93112CEF0F77C607C4E2F34FF446ACF5F6FC18D799D
B2A69CB9FF85F0D4AFFD74872F2AE7A1CFCAF415B7400594661AB38AB06D47971E79C44E977D42228A55D838EC1894633327E049DDA99F755279267116181CBFA69F9E03EC67C06CF35BC1AD6AA1FD6D4A2DD91DFA7FDF936B5217D07CA2986CFF392EA6
2F8EE9D0C03F5B587070426AB6043B9F3CC8AD8C18F614C3B15429FF230E3D463351D7E4A37352483A2A0965DCD830A87F6BB1A20244D5F44972E887CD739D6125DA602B9CEA862588077B8657C684A4CE7C07A53A57C1C617C33C6A5DE4A7C84962F789
601E6F9E79BC995C68CCF374D90845D3CDDCF3546A8C7E0BDB1C24EF26E131D9DDD0AB545BCF65B6FE13421F4AAAAA2AB30DA2F32FE723F89ED035FAE1084A0C1AD61830E32EF28E14FB98A731E097669AAC7196782B5E8B63C61AB41787AC508B23B664
49A2FA7719CC0632C8E958E4FDDD38323276EDF3B0FB241CF6CE753BB586B0E535B745CC3671F94644A3403C7824D9D8879EA52C2CD6A5ACD135B33E54FF128B0AFC50F05DD57B087D7FD9EFAA7DEDBE2FF20D737E885FDC3F79B999BC0836A47D377099
2A95ECEDED6964E68A6E4E2F266643421C2C8F7C61BA63B7384D126CC7FD90E47CDA042A81EFBD98CA339F65FC0FFC37BDAF5A465DFD676F88FF793274B1EEED99A18284A01B129F49A9F064046A7B31753ED8C5F5E31FB5641FF01DB24BBF9B941AAE7E
E2A97457F768BAFF80A69E67F325F0011D68E2891F759B7D39E5BB00F9E7E915B4AE90C22E89A1B776E000286F60982F19A4D2C4DF8FCE6A1EBD8FFAECB5A13D3D52A5FD6C3E0EAE7DF87F0CEE9A28DE50B9A1CA78F7C841B4BEAB8EDEE03AD98ED6FFFB
E0C88CCD6D3A42DF9388A0C2C624F343F99E0B161533684B80CB8CC334993F50B2D90016292B76AE4CA71B495F90E842FF394323E18FE42FF20F20886AB38B79909B5B128188B44892A52BCCD719E6FDA2244E26FEB42BF47E50F0E42A61126A9FFA8BDF
F7B8CBF5626DE866368FCE5E1A2DCECBD4CBD272CDABE684836E025AD7230B1729AEEC81FE3D1DC9029BF2C9349E177A95E9EDBBE8CF6E1748C5F99BF6607B67FA78336455E5499F3A8042E33E9998B1E617AB4A308710E64CBC443598D44D8671284349
2A15D29972DB0DAEA9AFB62E40D368B01B3DA7C129340646E43B97FE2E851AF1756AA47784B69B80A2CCD108790DA5F32FB62465E191EA3ED88A4B3660CA1ABCE02CB8237320AF38051EE0738D68F310EA5252F83F928178DB905B2C1C7A3D34274CB5A2
72998959368646E62861E326C28B3F1C526F498FEA330AE5CE16B8F24EC661AFC0DB910D08BADC400436AB7C67F305312ADF8AA3E6A8F1D9F13D298357E537263F2A8A816AE052127A86D551F2CC49B917EAB95E58B771EE7A58705B448DD9F56F665E82
578AC355F6FE02F8A3BF59F34BE4255E693916FC8E4911A7F2DB8D8BCCACE522F73D6D3B524760CEBEBF0B0E36A0601CEDFDC77A1699816536DC57D3596CCB3860FA80498D1DAE162FEA0B4EECC2C9EEACBF0B22C285B22102301A224121B67E8EE46778
0B4EAB3D27864240CC364409A57E08406264F7610555A0EE5AEC8080D3F9D694C74AE9EDC68EA33E2534AEF230019A42531A8F5767528707D790B90DF2014AC25A53C34092E2DE1930DFD45BD54D79216961FF702A7A660219845CCB8CD5F11473E5FADF
E9F6C1AA637EC633CAEA9BD4352C888D8013FCA103AFBD3E19000E1E9A70ED8D5702C8B3F4C4E1106C07B501855A5431FA7DB3ACBB0F4F6693323BE9661C918051EE96295B52C859995433D8AC34817C34A4FCEFF02003F3ADD24164EF9015E66058743F
72B9861F8272DC83876829B0EA5A8153FEB9252DBEA8A61522AB727A45DCB43F6BF3B19BB8791765CC59A16A62B11C4EE7BFDA6D9E2F425238C964C1F8F53BEB964A5D4F7284708E79D3A36DB81AA150FF3626944E8C777D71F056919538A669FA1A90EA
D14607ED4BAE834D89A4010F742026CDCD72B033EDC937EA0D7B5C3DE5AD8F606CDF35BCF65F075EF40F8D4EECF2D407AB153D91B2E4B0A95B9A8736D66AF81E54593A32D8AC30A3FF05929FB50082E4927396E48C3B137CFF560D28A7A1C8EDEA59DC66
E1E8DC37F7DE833C9D43714485685942215EAFE33026EC208EEDDCF66871CC79738C8FCAA7935C801796400D4282D3E0B4A45CB345F43EE610809D2E80133D611F7AF934E85AB2F9909B73C5D6CACB3935754A3A114F847D133A0C763310D5EE9FA24688
C2F2FCCF15921167A8184D25A144C861973AB716C5472919D46F42623361429060DCC440FC939D392CEFACEFE3FAED153A7E53E10B529663682E2D9E6964A9FD0F1FCC72FFDBA663D3393870C05FB75D9112E222C810FA7E4B457F36E5CE6920ECC1899E
004F622A4CECA65DF043A46738AA319C33A79F5F37CBB5BA421AD9285DD5058C61925E7FFF509B598753E0813A988CB9EFC0E807D8B039585B614D90C7AADA72CA6031D591370B5C1BDCE7610174415829DBE175A19E696644067D228F2A3AEC166CAD98
1D8B0F7C6307998DEB492DB2FAB7E790073825374ADAD711A3980DCD3137D62AA4DEB5329F5B00C6D413718DFCFDEC13E3F9BD8074F56A9FD6CFCFDD42AF003B1C856656C506D2C8EFDD0074BABE22968DBA685F9DE57F3EF18190DA075BC046FF1A2106
2B6B8DBBC601F0066D73224589C86BE4CDB12C02CFAB996B172FE3747AFDEB486A39C0DE02391F62B306D7BBEC93AD150A13BE71F26E4A9078B24A0365CAFBEF19FB5FD33BFA0489F63CADACD8534CA967AA7B124F9D06CE35179D98F4E398BEEA3BDD29
3426229D0C24A13F172F442E0C7AFA27D5BAA84A512D3B39B9BBBD5ED50E8D8D506DE75FF100314FC9B9B80D709B128FC99BA672BC6C466B5DA04528933D294349B7D2F13D987AFA212CAB1129D98A9F9058CBCC684A9B47BB762B5C9FE99D52758FB939
264C73207290D6557A298D8EC8EB846A85D988012DC1EE60DDBD48BFC15CBAEEF3867AE999B4830CD97769DA98FA0B2105C056C238FB2F00270F306298A7CDA338B25AA4131EC606A7A1A910A104EE80ACD604EAAC25C1F79B5525371E715964C9AAEF2A
C2F452F1F42586265303ABE71A2D1F5E4418105C06DC03CDDB345649F655CFAD8DCF292B1983F6F2B568E57E85F47F8733BECA82C0A107E9DFC9B935D7F7F010AC28A49BA70E61EFB41CE2BBA78C951DDB8AD458689156E8705F296176FB9531F4DDC92C
9356A3485C0F76255167B6A4612F4EDF2232CAA40C8CE3DFAF8D07C9F1C3652A66A69819CBF6479146074A32E6EB05DB3E1689507FB88CD80D97EA3E3D3ECE8A8AAA53960B2434582C0982832E147294D7D7EF09E435E5B9D26D16A27C0FDDAE19D0F0B2
06B21A3C3DED8712E4324D8CD6CBDA70471C5FD569D06858A7E52B7F264D8DE15F14B89D4DB99C5E15E21562617C419B36A1EBD7A8573ABF7D9E01B2422D581D1BC8EAFA14E529887CA615670E47AB23CD2CCB5054477196562028D97888688E09F4A265
A2C1F1745A7BA55638B0702A80A6D3B97951556DF394202026A51B804342663836F657009D48F49B167430C9168157EB76B5E38FBD95037659ECEC51F584DA05D35D26297D9B518685F7F7DE7B8658DDFFFF11169840B5AB561ADD512EAD234CBF4F0734
C3310E192A90CBBAEB8D943F8FB79A8DCC11D2A7FDC70F2130235B9E99B2A481DCD60D62EC4CA2322FE1CC8122324F2A485911A872E473F138952A63580082A40C655C1A73C80CA445DF37C210B7A76650BBB44EA57415BC75CD72BFDCD4F4AFFB0781AC
2E6C1C96CDBFC69C04B496679A128A0E5FA1098D502232075A27C6D0D66886D47E0577B1B1D0D6F36545A30F9A1D488D744EE54557E72672E9CAFB273BCB7166C90FAD61EE05107A110DC89C57684664C9236E5789B7F8275E9F5D794972A0BCB05113D2
B219DFD40298367E05B73618B09538A9AA8E2B7C9558C5D880BB72803EF5C7B1101FB884E8D7BDA9E80BDDB60483516BA4AE11A259CDE22A4D32AD966FB8F210B581B1CB31B25CD08CABA81A78B225C9C7AD7AB95670FA912A24240FB154B173191AD56A
1B974AC00E9391CDCA4B932ECAF5F6D70CFA9A370855204873CFE93750C9206D4B4836EA2627C1C4CEB1736BEBA0CB692ADC77A115C9DC961A0D9D7AE53052E507C5EEF6C730B78933A74FDE13198C90F6250635EDF0F4C64ED88BDDF3DA50D2EBFDF701
D16A3246FDD40BBBCB0D3290A65096DE42688BA7ED10C417B9B3AE23FCE2BFD9A6653125AC1AEBDE7C7C3D26672D646597BD1BB9B03406492D0A2BC00ECD1F4BB127C427865BD3624B24947CFF1965D9285BE2C7061C25EBA2C350EC7FA36BFE139571FC
04DEBB0F09300BEA4692FECCFDD87C8707A42496E859408264B8D50C39F3DA3DC67D9E940F0B38A35F770E51F25B88FF832DD16F1C3DCA89E19ABE3459ECE9CA8E122EC08372F922267C9A892540B71CB67C751B460EBB77AFB01A0AA67BB221954E4813
5C2FE1C0C2F4BF1B1BD34D9206A602D9E017BC9ED9BF66D3E36410C85514C75108ED056B8D5D56118BC98DF7A7C761E9AEFA5391E8A4BAC71C349D893DD11F38761C3B870E2501EA587AA2C52F569A65C2A323C6DDD0CDDC596B343ECCC5A62203C90B7B
C96D643A9F113171FD845CA01EAF913DF5F579CC20EAAE86A21130A73B6D49A6BA4BD87BDB85FDF52FD698C9CA9C27FC556BCAC8A1B18F26E9935D1215351ED5DB1205648D4B00BFA60A9F81C0BCA507619C8B7E1B52B34E680A7C5DECF03D7B0A5EC011
13623E7878E6299525BF57ED35318F2FC495A85FCEE66647ED57CB6717C530389253C8D96F0A7A340A8E283D747C7338D4F252B6AA30FB257B16FDEAACDBDE0D2882F18867F02CD7BCE9A6A7C50C2D71908BC13C7D98F38FA36F7F4AFC122BF3B00B7BDA
122729980DAD6DA47AB50366864174E89FE1E5DCE7ED5CEF65C8F1BFE5B0907721A26E3E8377E59681BF090FBF413D599CD333111368B2C83B60C4838D54666BE45058264D0AEDA383F15E01B9AA00AEFC786C28711C731611C5705E1A627EE3E403F263
4F6D526C5C53A8316B37E9CF3E14CD8CDD9FEA968C39D721AED3ABDCC764A6554D0BD82022D533FA8E5CA0C9E7AD3B4446094C26965D818B57BA2442E77CBFD8C8EA66A4A72EEADA6BD847A410E53CD3E49B7751355974AB5DF9E09DD14E69A70A2FC29F
B4305784502EF6D133A4AEB0790A89AE34A8B196A951D12C2ADF02D70A52DFE788814532D50C7ACA0EB5BD5E696DEBF5F68007556A28B264E4E83D9F18B24BB204B6C65A532856A1D63B80FDEAF66391D891838B6D03B6268ACD839053B1FD8661748942
4D7631930CA54CD21E23292B5F1EBB80B0920E53295958E62FC680B92B6EE095A5A487610F924B1E9C92A09EAD55C08CB5A375A6F6A92A4F8362D3012109B533E3215DA10E8D9E47DE8AE7D5E06738FE14CB2BB4D1A379D2FFF9BCE40B31A14F19B4F6A8
34B190C4D44722EBE115A266F19E14917E01F255C8CF5864C01DA46401A3255B1B03972E0B199236457EBDF8F2940F5AB77AA99948461BCB41E7E2B8F2167FEB2D019F3F48053ED39A621C24D468BE279E38268F2404DD7C3907DC566C85C8FE0AF4CB8D
CBA62AE9AF701E155539A8C00C121B9EFA5FD60A1EFEC9F5A11CE74532750897898E1D68BD2E50D22D07AE2C3E5B6D5829DDCFF4444C0E642DC8B710E3975CBD6C4119BEB0A271A9678FBDBFE6B56AD2187E859DEAEFF793B92A8A0A12368D543D46420A
03B5292FC577D1E7CAE56999B926F930B3F3FC2EEAED74F70C4DB9C949003DBAECAD28656F80DF08C4E16F61F80B90C96709EB18176E135531D98CC5BB50405248535C43C1DC4A9257D14D7300A7CBC08D4A38154E03C70AA4FFF43AFDF0227CC9C2D581
8B918DA3AFC2F860C262EB9595A412A8D5800221872B579997650108FB05A10645CF5A04D42E7C079D25149D916C93EBDA6C5DE038A4EE25030610354B73DEF8AC087041CF1CB68C5FBD2F7FD281C6533253E65F414C2F5AFF4D150DFB2E5184A8EFFC04
7B0F06EE852B5A75D8FDC3B3619F250134235701A464EC7D70341D5DD781BDE4C3933ACC8FD4F629A5EDEDB7A12E83847E5632F5545B5853762F488CB304BB9517DE48956882FD8E2CD61DB3CBD0B8A3C83EE6CAFF60F5EF396EFDAF9B5F3BD663C4F4E2
4588AB031C8E93380DC8A73776564F0F6812CDFE3DB80D7D34BCCA7C7145966B0584808E1A4655ECA89E99E00C6EA03DEF6E34ABFD67EB8066F928A05886B164BA44DFA32A7D3543B48AB7870885C358B1400D969DB55D0413A60F5E27D7CCF1EFF31A91
5F89ED4A712BC0EF9133504EDDE34A05CD73B51F559D110AECF2437B5CFB33BEF1DA18B747E99BCCDB85DC393D7FBB27B2BCCE42F6DD598A8710219B6FD81D80FD304F56AF0F39FEF51D409CA9F98416FC20FFD2CB9CBBAEEF99DB375A5E71566D5B6FCA
8CB5944E8AFF7D62D48D34968FA3F85314FB4433E0E80DDA3BAB6C6B0D1F6AADC065833D3C6903959DAF7C552F0635184600AE87F73594ACD40B06DE6A0ACEB811D358EF93A5EDE23F8FC41B0EB294595D64FCDEE0F7690A1A1A702C62012B2BEBCD28CD
BA5CE36D960C76731D7A1C28C87C7879A2E1D7083BE3F2FD59AFDFF34177883AB6C0F958171C97E90B57AEAFE4E3E0FF7402924E5BD740314D68D2A7EF25D92A1F3D2F1877C63C07B2409B9802A1D084B1C1BED3BF896077F55B55401372681943E65C6F
16AF90A3634A494A792DAD4FFFF4978902794557B5AE0250275EC03ACA64B06148F059E46C9EED106A06BE2389BC43F43C62D688E5FF9F464A92BE443DF8F25A2765A704FD3D83C05457DA42FFB7710F3AFE4FCDC122F5FEC4B745FB4270E4A987464FCE
87555B23F337702F2BC1D88943F7F4109B37D3BC7C2DF0CDC530E203FE42091C646AA1D1E3D003C402BF9CC9114AC8BF76BCF5F6FE5B30257F87AB46767E66CC75B2D6FA90167B03527366CC21B8F22CF4509B262F5F5E2005C25B56AF5D22DC4CFE8351
05F97B6D4A1BB99C6083788DCF411C6ABDC96A6CE26E6725F3B64728C5FEA64B6DA0AC1E24D446B7D14CDFD5A226DAFEECB1A71CA22F6A7EAF83352E5E83F356F5AB89B5DBD3E92C4FA77BACE02D789772C16CD25890E9C7DA75A146F73FC94B3314FBE5
BA5D176CC35389FCF9959F8CB68CFC1E2BEF7C8138D3A749D18DB4D74A56F7101C35FD17F0C3AD002DD7E757F6081DCECAC13E43D55E48546C7A35AE405CC183BDABECD6A4999989BFDD263C76CE0A17A141F010772C52BB74E3F8019057E327708518DE
E53365772D560843EAB6370ABCE017300904D08CB417007A5734FC284E558AC39D83D22F5E83BAA72D429F6723D5ADCA132D68E3E9406B95E95B230066BC3C3B0BC4B417C9FB1169E8273BF450D867B35DE4DBF3812594F9D8F14C5A48172F18AA50C10F
A9ADB847B3308DACBCD94674A5F2C90460C4E99A1C205F18C1323F08E452D0AEFEE390963A2E6001BA951E082CD617C1907AA90B58EE5F821B15270A1082A107373D9C63BCCAD9AF2D515BBB130EE5F81C7B9BFE09F375ADEB0107DDBBDF2D9AF7069EDC
73231015C2C36689E2E64B1E3F17C8FFBBAC106F7FA237514E7A3C83F4735AE8AF965C2ABB5629381820201856B174A102B6077E73389B303B07613CA23F6DFF78DA4C4D8FB340991CD2509F1F517E293646F31F4BE64F55CE931A407188361E7AE1F0C0
1C8B5FBA33A073893A0B49FC93BBFDBD5B82D2AFED4E4DCCEF36F61BF5C81CF6D819AE6ED5F2A20B0AE3144F45C328461ACDDBC6607E5D8584D2F68D6EF9F06E68EC302A80776F4E69711E90C32A222125FF0C0343DDD36C33942E32DF40C1B66F6FEC8B
5F9799E015BD7813CCC086F67D415435A39655DB3835F7F50320CC2CFCBC3D30910CB84D6DF5C94699B8E103F0938E8B924481E180010EB41E1A67A024A05712EA537293F3E9E0C906F1F6A4C419F34355B5F340631E6C43E73A22F1E7417C813F51CC68
0318B69E6742C667F673C8834E3FC1BEC87AFC2A922F6DB3EC8A93729EFD78B549361C9DC6BC841B7F53BCE3F87196B6B984DAB6186A2AE0B414208E25E1BCDD285A4CB9757892A8BCE77AF72FBBBB2FE76C2897D01602A93E8FC615CB0CFADAEDFDDFB3
3EF307258934C7D793C3F9EFD825C846C0F8CF83929DA7C9E76CD605808ABA52C3F371EDAC192DCBDB6051CF210F92FBC33749E7766685169881C329ACE5A3FB1C2C9724401B9EFDF85C22CB65AC08F13B28A409D965E7A3ECEDEACC7041F63B8E315E1F
036C1A7D46963FEDBCC970FBEAF22E81792E56FA9BE936C53C16CC2E8897C4A61F161AB5483CAE75A438FF0877FFD47407C80381C6CCECA11B237BF349957EB726CB6A4A75C3E4EE49EE8442358CAB841E32650DBC8C85F9AEF080105EE56C3C451CCB69
40CDC13FF26238F4B83B0EABCB79BEF5977A6C09F06FE18C26DB650F0A9E087741B21301CD51D9B7CCB02FBD4B1F34092463C97BAD6E5B2A5305093F87464471C0531C7C40B614CEF93DFFCD9B64E55171F996DA2C2ED759A5E8E83646DAA4F5A376A83C
6806893E24C55D72D9D471FE3FA4AA41C5381EBF7F370CAEDD8EDCD427798D1DA21910DCEFD4147A733B0AABC73289ECDD4189DEFA55F3B12225C83CA4BF91D3CC9462436A0357959750231A5CD7A42B81C42E60A974F677FAC7DCC417287C4A0BABB9F5
46A4520ADFD15A703C17BF358DDF0D2F378987F1988186A8E9AD143D8F72851DB66C99053759FD7B02607C88CDB3B63B0E8CE4123D87323237320E18E6A312DD4336E527AA9F966BD0B3781CCA9D8AA3EB0499650514B7E4B862620DF92365527CB88613
5B6C77239DF3DEEAAD47AFB2FB08C788C377632EDA8C7C235A5B319C2ADFDA15D94FC1671AA25AE79E16B905B8B1C0C6CFF36069F17C9928C2B77A45DB46882977853C78C774167586BBE7EC63E977946849B7263311DAD312DFFCCE203034A25CC5A46F
BC867D708C302CB2D861BF82152B1BF0F9B06053925D28EF7D6BD4BB1C1145FE8D2C0C022089550BC6D3BCBDDA24664EF1B2BE05F01B403ECD96EC81311CA5F984D01D98A580F1AF47DEA91E6014532855EA4D3FD02A0FAF42B8AF38E1AD8C183BA1E018
2BD23C179A9D59B601D7872CDD7E61DF3DFFA7045B7AE0E78CE7E3095158F5650B6C2717A279E76E731EAE2BD12B4705910EE5D3E7B68E8EA5CBFA66B2E6F95605731A22DF428012942243CE26B1C4BF2F015E043968771E35963C1FA4CA17C06F471C4A
55DD4AC605A23DC13A7D2576E97F494746CF8DFFCE46A270EA0D7B122A9E6BA0D2DA03FABBE0520BDDE9BF4544190FC15264E89CA379FDB81DDF8EB7AFAE61A91515E8301B22D834925F7DA08DB9E912E334CE7F821A53301E9BCFB075F8E2EE383A2C04
A97167B392CBE108E23D2DBA13D3A1ADC608C18F27019B83BCC1CA164FBCDA91E9A590FDDAC0E7F78A412CBBA65611C0519F11CE7CF428B5AFE04E9E2EF2B8013023102C62C52BFED58A0CA80EF20596FBA06115AC59ED8AE9711E1CE2ACE4E2CF568250
8A776391F71510DCA0D9875BE7D88316BDEB01911F35BA3523FC416C41CFDD844467DB9329A76C6E18B2110DD62B1441A448649ECFAF0A6D035E460C098DC13BCD69EFB915601F6B8978A85A74F298F37BA68BD05477DBAE5B3C3DD98E42EA113C79CD8B
453C53D745A8D8C40A5E6924834CCE6304CA2C6C876FB689BC67414987ADC2F72ECF15E377F60AEC3A6DA4144FA6DD3BE0D926F16239F404266982D4040E4C0A07F7C8060D7A3F8004535A0A138E9515D89D05EE823D634F7900C43BA6AC82CC35C327AB
6C3DA855F0AEF5B18A061B8D7EC327159F5677A87263130E3F7CB289C4220C5DAB1B8F490D51F5EF3743502EF14081663ACDF08B5AD9E2D7AFA482B3B373491970857F2B69300CE96F726384AA8FF61C945B40EEB49655293669F4A54920739FDB523482
BE7A6D4A25923A793FF402734A057108A35E8EFB4F976306BBA73EA1567668091E2E9F9D4F757F263969916361B7F823F2AFD1DEDD04515A3B47FCF19E23F37B988C598208286695A16C64FFC84EF543AC0F5325815F3B864B5B2CB64DE1074E8BF3A9E1
0212C0CC835429AB60B2E4DBB4C11EACD9B37357D1ACD7E5A61DEC3AED42F3227C3D23358D0DB14382C69094ADA86125166133F6BC7169E0B43A2A2E151941FD9CA3E1711EB6F114F516E1F4589F1C032218B2C0CEAB4E483C8085F268B5D2FA52F36465
FF3E7777ABDDEF551D4C7FA92FFF5A31989DC7E036D092C0CF5C4C3F553B1C728A32C36627F85918AF676067864BA65AF5094B7E908DC4F0DC4165D80EB9BC5698775E4E3433E9B1272491682F6A6AD208E7ED4A661EDE05010BF2403109A46B750D90AF
1B579BB58EE6A7B1EBE344441A28DF7E1115EDC22F88FA357DB1725ABE4431ADCA183B4C0DB996817068A9DD3EB255482640CC0B2ABB4758C15DB22BAE58673C491568381BFA345E1089974D29D1DF6A0FB0681BBB9DAEAE85A6AEC1861B731675915101
A9CB076DFEFEBD8FBF9F6B634EE2B96315D84DADC5A5A284787A22A1EC83EF1596880D8881CCE62A1E00485E44C46AA7A8A12A0DD2B63389E73ADCD670283322B4A20F44B44483DD7775F498AB85F73418EA99476A3CF850FB518B314910A0C0222A5900
72DD7DE011876C8DB3B6CF1265A8E6E2CAD35F829E7A99ADDAA121107762C7A972607044DEEB77443DBB8A4A811D78B0024E000DBF68CFA3FE1DF2ABCABA5422F12CCA67D894F8FB5CAFA32A4F5599CD2E85131E3028A47EE689EE29B638E3DBB8F5A4C5
646C4FFAD536C2254EC8B564AC34C6846C5AFE501BFB72AE1023FD426357FCEE592B2C31990FB5CD47E5E0159BF90AB5A53032A31E17D2117765DBF892C10A89CDC490B9116845E818CAC11866EF4AC89229B15A60E696F327AB6E0D6619505E3585CFC6
458EEFF6C6E1C2DE3913FDECC0E3DD54BA0DA85E67C95AC6C90EFC79F6A8DE3B44902A4E561AF77B9204609C4FD131C98083BDDC8AAE8CF298B57E1096E0E302EA9524902ED259B781F8750A289CD19BA45C19812398C09D43ACDC6E81D095BC47FA1350
AD9B44239C7C6289CBCAF1517360BFACEAD30BB13A6485544EFADF3ADACD8F3BA66882ADE5B6140A688C01BD611949CE769DB3022C37E9977EDEC396B24ED707E0352D058DB38D091B600B08DAB8B792D7F60BD44A059DF2A13E46873CEA0A5AEE93A91B
5AC9BA5C2509FD0FE9268D02CA803E6A1D1B32C73D9DD02A7DB3FAACE4901A84C2ECD914435728ED227E5241A0A4538F450DF369019D7042368725C4BCC2440EE2E94C66FB424B29ADC4C0800A722C576DCD722764FE0501C006DF37C269DE685F992945
0FEE5B760E467FBAAC495C4DA5133C75923996CE1E926A091BBCC3715721F7ED794F12D4452BA7FA83490EAC4AA49B6B0B70C9959E97E8C5BB248B3F4AD980437A91B6217B2AD97EFC982C1622C23EA87EA29FB443CE08401E2AD4CC17D68D658EB3BAB2
18D18E8CB727E3813FBF1F320D6B979647944344CA98675897D705C647BD2656E7A430C19E1722E9104055ACEF332086852878371DE5998093BF01CC4637FBF5071F73ACD8F4B262A766553D4ABDF7ED7F2E0AB660B7781DE3ADC3FCC2973D918C457D2A
0DC2868BEBE99C2F0F8D38058F78EDA5FC8244C08F1FFBD1CF6097E9B1FD3EDA7CFDD37C1417E34A88F99E3D4E97C95FA75F2235215EB4D711CD292139BAC4A959316AEF57702A262873C404657A03B8C7CC4E4EFAC84ED1AB024357EE613D0AC8626EFD
03EAE83A9BE311BBD8846C8A979A2BC5DFB8BBE2AAFD1CD7A55FB3FE98CA77AEB92E41F043BA93AA41800D0DF8A5992F4A32FD0CF0782BDFD73D3EBDB764E6C84EC0C044FD5CFE5A665304DDEC2014FD549F84B36A45FDD9F81E14B3D9578E0170A1E9EB
044A0EF9D34618DF6B038D32E60DF48D7194BF89C01975027970704264116D4EF67CD004D0BE3813D295C5090CBF17320C9C5371BF5A85E4F9B6F0B6AB704D2896698E8A1E900936E632F97DA534FA4C4D5CCAB30F7834D79BF28023EE0C104818F82474
97F7F983606A96A4D61FB77BFA700AB7ED6D7EBABCE46AE8F868148635FC5ECC9FAFACD630552E971DBDB3BEC08E3CE781D2F030E33072CDE830098623A7BD7A9B5120E37F41B2775542414AB2D8E32DE77B987697FDC2CAC0D52F8694AF0CCBED020206
60C4113F9379A2230F155F6A2F0C573A13351587724475C10BF3211EA02070890EE6CEDC68E91414FE8CEFF07CDC7F1EF7C03A63AAB91258F4FEB484BAF699F93A258189BA97DB56B6CF2B2B925FC47BFFBC514E90EDFC13EEC82F7F3DC89042F85230F3
76BAFA7FC245F588ED3A8F833EB96D8FCBFAA392431125F05DF77C69C676F651FF870212E4619A0A80DB52F3547B47F7FB76C09807EEABEDC4CFB8823ADF1F8CBE1D7069FF57BA1CD623312D65860B4E79780E80E7B7B4EED6C3378204F963BAA374AD7C
1A408A2A10073C7383D353A7BE8EB14A181D3F0385727632DB2A8E463D9E3CF77AA3F3ACDA51E7AF80ADBD13B433D286FCD1231712DB5C76418F5DEDC94AA4F71532F7C6125232E9A904E82910D293E91BDA177FDEC8AB55957884889D50B7946651B899
5F4599584228B9EAC85FE29C91502277A496539B7B1717A6EA0C7A8A99EEFBC1DE1C2317975FC11B0F4C4B603B43FF10AC6EC4814EB7C69BF755C198BEB9F19281EE452BFF62F46A85E0404BFDE7227F55FB744AB902E846F491714FC87443F99D37E333
09722A94322581B7DF3F4A8DA1CCF80D0922535F68A1DD76420348F5BCCDB11A41C8E3684A5DD3F628134FB5E90D0CDD757A788D2CC627A739D8A6523A47F79046CA3068F86DC0F2923B69FAED827181CA05780C0C99C91B4A916DC520ADC2641D2569E4
0D3F7B26A68D037B015F0BF21DEBC011F49AA8E769769BF15E73429EB3EB5A11EA42F8BF05847AE992D76C72953957BB1F1D8EF7683A7EF5592F8993B9111EF030C2883D69E3A44A91AB23009BA6A4AE42577305BBDC3184F201BF0A12D9477C8E0F1176
48640D8EB43A7A370AB037D43C01358336C92792FC2DD803DB9FD04EA28CC209513CC407EDB5B9C73628B4DDFE38D472EAA807997E7F0CC3286265A84F8A86122ED2C1E79D18F8921C909FB958C4E5FEB6F18C7835A616D4ACDA19ABB91DB4C44649737C
2C99162ED8533A919EF9321337DE5E61029E8DFA601CFC13F571BF041E5883AEAB9D71C90E494D82EEE755DA1F4DFDD24F50FAEC421D9125750AAFC51D2DA8D43F302D431CEDFC21623A186548A627BAD1B98DB79501A2A9DE917651218FEC1BFE8BAEBA
F6205894B5A7802B7F16756A0929169A4FF2CB1207356DDF89D74EBD73CE916E68629224B9AAEF213844B4D059E65DA0C2CC5F5B4217A1E4BF1B163967E90BB3FC537332F24A8829E2054AF88E516A1DD19C0D6C533C6B0A9FCA74CDA3A4F21D4EE2A3C6
EE7724DAAD210F89EF5FC96ABFFEAE295E16E5705F94F96E67B3C0773BB28F024645A5E7EE9EEBA4A04BCEA83E38CC0478ED1F4602EE3A98249649E359E3817A0989B2D96A892900D03706AC3224B2A7EACD2566A94F0463E65FDC890D509970779E62F1
4D5610F97901FB30F0F39A432FC6A95BDB6E00DEAB1A27970D242E4DF0F05D9D36C38C030F3BA9AF87216A108F14A3CEBB8F8C3981C08BC9C1AA835AD1FF58933886E05024C58A6C86C39D4EC5B0F9AD5D8E28DC61AB74A82DFC832E5659B006820D8C49
F7DE3E18C24837F80D806FE8858EA62C595ACA9159C3872245DE954873FDB587B3876D7493C3941EBE9F561C7880429ADB2C3065D2D96B51F7E54732C3DC1785698577E656756E284D29CAA36058043A6C1AF79827E30597053780F694673E89B6E227E9
867B537777B32D4FFEFFEE8CDF4E523EA2E57E5F2FBCA07BA79F43F88DA11E56C37FB7DE2185138377618DD9FC6F93FF2EC740263AE7629515BE7B48E05B60336C57FE7DC2AF7A18512CDB7C6E1FC3F5262498781ECFDB801D751C60A48A29DDCB4E728D
764A71B339F6D4A39E4FE775BB605948197CB7BE58A485D0CA8E2BF3A9986D502F2448932A21422D01ACF96F3ABB5ABB548282BB889FE5410A604787B1A472184CA75E5B2C4A26E05DF036B516C91999D8174E838A2BEEED0DD2B301507E640C3BFA0737
F5B014C8F97927DC4CAD2658552DFC787EE91A4025D00B183484F132FA3D823A5FC9C4335FC58D0C57B1DB300506B3BB36F18302CD0BAC729B0B1C8EB8A57460FEFB1A8E43250E990BDB3FC6116E1C81BDCE0C36BEC75E727A32E12487473C3F026DEBF0
1536F65741C3463F638ADBCD6E83C12E13A3E9C63B53DCD0B1582D35F70BECC650B8F0D6EB54A57E79D3BD2D35250B78E8314031520BB7A4083322E5E131DE3795F02ECE6B45C62C2CAEA5C18568137B0D35B220592287FBA2EE470D4E99377419DDB2CE
863726C128E340221E8CE9C77DF07569B726DB507221F46F9186752E6FD9C0B06984DA2F9391159454C9D50BF801235E246BAF648803350F40BD3736F7F2A956E94B5123B7CC522965AE63174F8D7FB77F691CCC3881490C2E0CE1F6149D9644981EBB15
57D2D3BB18D4FCE1424B3F9C0EEB86C46F5C487CFFAD0C4A1CC298757AB6A471542BA5A592C8301AA6FA3C33058CB4C3DF141D7DF12937B67533F31AD90FE3B432C6A385B480D16832525253FEDCC8FB82C77EF3CF46DE7B9F826C7FB57CAA54DC928070
D00DEB51C032D9CD503E07C45A6259BCC8FFBF887019AF2F983E22FEBBD184A0A583767301E7C28424E2079E17E12F21B89AF059059A2F6712596F92970FBC34DB1DCCB77B0465E87FCC6794770DB14DC19A11B8C05E4A8C465DAC7ACC22A72E20EAB71C
35C90D80705F64A113B1463EBA7C03DFADD62D3F1221AA566534749912B3C8A46EEC721A7D0964EC558112E69DDBD112413024EA533882DD6639B2DC92FE1126CD0A3D29511777DAB1F8AF692D83CB7D5284D91C4F43C9B58FB53BD7664722C43FEAB259
CD1CECE3EFBE8961287D21D54866316E7C2E549849547250D883769EA502789CB9731A70508F60235A7C971CB51F9525CB09F5F380ACAA50FF27D435C18A009860DDECE5378AD6D80844B8A2DA5C93065193CD856B520D60B649810D8A77C4B69B6BD885
37F92528148CB46EE8FE807528691CEE9F805D10952EDEF12D729CB09ADCF861E6DA0536AEC48FAA0A0A47F1437680037A1B5EB87E536CC73EFD74FDCF41BA31B98A0F2A61746A5781AFC2AB95B9FBFF655D505F2AF6C817018A08EF01B727365FCE7963
F36ADA5FDBB60581052EC1D0AA8249E9FE3CC84AACA62CEFD40826BBF578699FCBB600294BAB1C877BDE387ED07FE7823FFCF0B033CE50B26C3CC466112DD6698FE0830A7550FD70506637A2C1147D58CD5FC54249CB92BCE9DBE6916F403DF9A86AEEAB
8EBC10B94DAF52E053DAC2BBE9957E3379E45A81F433CCABF3F3A7F28001477923162E405EDDB0A9A16143C781CC6F8F25721A3C05A48A2EFF40AA9D2EF8C6BF8A130988B7E986B1482EAE828F480B138E88B8505B15E019A97223036879491716BC12B8
4D78210F98CEE1D554B37368F88E8E8A0F829C43AE61C0F7781ED72A87CAE8F8BED05EF76146747E4569633AE74067FEC52D5BAC50485AF260D02864D3A667BED57A9501E035EEE0E16C144742E00509790D40F46DF42C83ABB9ECBBC9BC38B388922F90
2CABA3961DAB0FF9A5097427274DD0E3E81E1FD4BF68F46342E33383804CBECFBD97837683E71ABBA8269EB26BBC7650BE7467652833F331085E08EC2CB698C5054D767DBEF148C1FEFB894284061177CB50C2335D16E0D82F82E0DD8A91DD61D7E9E28B
A3C75B02C4054CB5F4A6C74A66F37AA0AEA7EDAA66B917BA8BAF42A36B66733F340B19D544BB73C9B386D090C0346594132674C38FCE1DB7A39BE71CA54AB0379A5A616DD9500C18FB6F518956AB9912